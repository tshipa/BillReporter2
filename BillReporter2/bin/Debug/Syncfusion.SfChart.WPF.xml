<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Syncfusion.SfChart.WPF</name>
    </assembly>
    <members>
        <!-- Badly formed XML comment ignored for member "T:Syncfusion.UI.Xaml.Charts.SfChart3D" -->
        <member name="T:Syncfusion.UI.Xaml.Charts.ICloneable">
            <summary>
            Interface implementation for ICloneable
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartBase.AxisThicknessProperty">
            <summary>
            Using a DependencyProperty as the backing store for AxisThickness.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.GetRow(System.Windows.UIElement)">
            <summary>
            return int value from the given ChartAxis
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.GetActualRow(System.Windows.UIElement)">
            <summary>
            Return actual row value from the given ChartAxis
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.SetRow(System.Windows.UIElement,System.Int32)">
            <summary>
            Method implementation for Set Row value to ChartAxis
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartBase.RowProperty">
            <summary>
             Using a DependencyProperty as the backing store for Row.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.GetColumn(System.Windows.UIElement)">
            <summary>
            Return int value from the given ChartAxis
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.GetColumnSpan(System.Windows.UIElement)">
            <summary>
            Gets the value of the Syncfusion.UI.Xaml.Charts.ColumnSpan attached property from a given UIElement. 
            </summary>
            <param name="element">The element from which to read the property value.</param>
            <returns>The value of the Syncfusion.UI.Xaml.Charts.ColumnSpan attached property.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.GetRowSpan(System.Windows.UIElement)">
            <summary>
            Gets the value of the Syncfusion.UI.Xaml.Charts.RowSpan attached property from a given UIElement.
            </summary>
            <param name="element">The element from which to read the property value.</param>
            <returns>The value of the Syncfusion.UI.Xaml.Charts.RowSpan attached property.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.GetActualColumn(System.Windows.UIElement)">
            <summary>
            Return actual column value from the given ChartAxis
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.GetActualColumnSpan(System.Windows.UIElement)">
            <summary>
            Gets the actual value of the Syncfusion.UI.Xaml.Charts.ColumnSpan attached property from a given UIElement.
            </summary>
            <param name="element">The element from which to read the property value.</param>
            <returns>The value of the Syncfusion.UI.Xaml.Charts.ColumnSpan attached property.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.GetActualRowSpan(System.Windows.UIElement)">
            <summary>
            Gets the actual value of the Syncfusion.UI.Xaml.Charts.RowSpan attached property from a given UIElement.
            </summary>
            <param name="element">The element from which to read the property value.</param>
            <returns>The value of the Syncfusion.UI.Xaml.Charts.RowSpan attached property.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.SetColumn(System.Windows.UIElement,System.Int32)">
            <summary>
            Set column to ChartAxis
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.UI.Xaml.Charts.ChartBase.SetColumnSpan(System.Windows.UIElement,System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.UI.Xaml.Charts.ChartBase.SetRowSpan(System.Windows.UIElement,System.Int32)" -->
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartBase.ColumnProperty">
            <summary>
             Using a DependencyProperty as the backing store for Column.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartBase.ColumnSpanProperty">
            <summary>
             Using a DependencyProperty as the backing store for ColumnSpan.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartBase.RowSpanProperty">
            <summary>
             Using a DependencyProperty as the backing store for RowSpan.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartBase.VisibleSeriesProperty">
            <summary>
            Using a DependencyProperty as the backing store for VisibleSeries.  This enables animation, styling, binding, etc... 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartBase.PaletteProperty">
            <summary>
            Using a DependencyProperty as the backing store for Pallete.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.SeriesSelectedIndexChanged(System.Int32,System.Int32)">
            <summary>
            Method used to highlight selected index series.
            </summary>
            <param name="args"></param>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartBase.SideBySideSeriesPlacementProperty">
            <summary>
            Using a DependencyProperty as the backing store for SideBySideSeriesPlacement.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartBase.HeaderProperty">
            <summary>
            Using a DependencyProperty as the backing store for Header.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartBase.ColorModelProperty">
            <summary>
             Using a DependencyProperty as the backing store for ColorModel.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.OnRootPanelSizeChanged(System.Windows.Size)">
            <summary>
            Called when [root panel size changed].
            </summary>
            <param name="size">The size.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.GetSeriesSelectionBrush(Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Method used to get brush for series selection.
            </summary>
            <param name="series"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.GetEnableSeriesSelection">
            <summary>
            Method used to get EnableSeriesSelection property value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.GetEnableSegmentSelection">
            <summary>
            Method used to get EnableSegmentSelection property value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.SuspendSeriesNotification">
            <summary>
            This method will suspend all the series from updating the data till ResumeNotification is called. This is specifically used when we need to append collection of datas.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.ResumeSeriesNotification">
            <summary>
            Processes the data that is added to data source after SuspendSeriesNotification.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.CloneChart">
            <summary>
            Clone the entire chart
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.UpdateArea(System.Boolean)">
            <summary>
            Update the chart area
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.ValueToPoint(Syncfusion.UI.Xaml.Charts.ChartAxis,System.Double)">
            <summary>
            Converts Value to point.
            </summary>
            <param name="axis">The Chart axis .</param>
            <param name="value">The value.</param>
            <returns>The double value to point</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.OnSelectionChanged(Syncfusion.UI.Xaml.Charts.ChartSelectionChangedEventArgs)">
            <summary>
            Called when Selection changed in SfChart
            </summary>
            <param name="eventArgs"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.SetSelectionBehaviour">
            <summary>
            Method used to Set selection behavior.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.OnSelectionChanging(Syncfusion.UI.Xaml.Charts.ChartSelectionChangingEventArgs)">
            <summary>
            It's a preview event before SelectionChanged.
            </summary>
            <param name="eventArgs"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.PointToValue(Syncfusion.UI.Xaml.Charts.ChartAxis,System.Windows.Point)">
            <summary>
            Converts point to value.
            </summary>
            <param name="axis">The axis value.</param>
            <param name="point">The point.</param>
            <returns>The double point to value</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.ValueToLogPoint(Syncfusion.UI.Xaml.Charts.ChartAxis,System.Double)">
            <summary>
            Converts Value to Log point.
            </summary>
            <param name="axis">The Logarithmic axis .</param>
            <param name="value">The value.</param>
            <returns>The double value to point</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.UpdateAxisLayoutPanels">
            <summary>
            Updates the entire chart series and axis
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.Clone">
            <summary>
            Clone the entire chart control
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.GetCumulativeStackInfo(Syncfusion.UI.Xaml.Charts.ChartSeriesBase,System.Boolean)">
            <summary>
            Returns the stacked value of the series.
            </summary>
            <param name="series">ChartSeries</param>
            <param name="reqNegStack">RequiresNegativeStack</param>
            <returns>StackedYValues collection</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.RaiseSeriesSelectionChangedEvent">
            <summary>
            Method to raise SelectionChanged event when SeriesSelectedIndex is set at chart load time.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.UpdateLegendArrangeRect(Syncfusion.UI.Xaml.Charts.ChartLegend)">
            <summary>
            Updates the legend arrange rect.
            </summary>
            <param name="legend">The legend.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBase.UpdateLegendArrangeRect">
            <summary>
            Updates the legend arrange rect.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartBase.InternalPrimaryAxis">
            <summary>
            Intermediate PrimaryAxis object used for internal calculation
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartBase.InternalSecondaryAxis">
            <summary>
            Intermediate SecondaryAxis object used for internal calculation
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.ChartBase.SelectionChanged">
            <summary>
            occurs when selection changed
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.ChartBase.SelectionChanging">
            <summary>
            occurs when selection changing
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.ChartBase.SeriesBoundsChanged">
            <summary>
            Occurs when [series bounds changed].
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartBase.AxisThickness">
            <summary>
            Get or Set AxisThickness property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartBase.SeriesClipRect">
            <summary>
            Get a bounding rectangle of chart excluding axis and chart header..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartBase.CircularSegmentRadius">
            <summary>
            Contains the radius for each PieSeries in the chart area.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartBase.MinPointsDelta">
            <summary>
            Calculates the minimum delta value
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartBase.VisibleSeries">
            <summary>
            Gets visible series of chart area.
            </summary>
            <remarks>
            This property is intended to be used for custom <see>
            <cref>ChartArea</cref>
            </see>
            templates.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartBase.AreaType">
            <summary>
            Gets or sets the type of the area.
            </summary>
            <value>
            The type of the area.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartBase.Palette">
            <summary>
            Gets or Sets ChartPalette. By default, it is Metro.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartBase.SeriesSelectedIndex">
            <summary>
            Gets or Sets the index to select the series.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartBase.ColumnDefinitions">
            <summary>
            Gets the collection of ChartColumnDefinition objects defined in Chart.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartBase.ChartAxisLayoutPanel">
            <summary>
            Gets or sets the chart axis layout panel.
            </summary>
            <value>
            The chart axis layout panel.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartBase.RowDefinitions">
            <summary>
            Gets the collection of ChartRowDefinition objects defined in Chart
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartBase.Axes">
            <summary>
            Gets the collection of horizontal and vertical axis
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartBase.Tooltip">
            <summary>
            To hold the Current Tooltip object, which is displaying in Chart
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartBase.SideBySideSeriesPlacement">
            <summary>
            Gets or sets a value indicating whether ChartSeries added to area should be plotted side-by-side.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartBase.Header">
            <summary>
            Gets or Sets title for chart
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartBase.ColorModel">
            <summary>
            Gets or Sets ChartColorModel for entire chart
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartBase.Legend">
            <summary>
            Gets or sets the legend.
            </summary>
            <value>
            The legend.
            </value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfChart3D.RightWallBrushProperty">
            <summary>
            The right wall brush property
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.OnBackWallBrushChanged">
            <summary>
            Update Back Wall Brush
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.OnLeftWallBrushChanged">
            <summary>
            Update Left Wall Brush
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.OnRightWallBrushChanged">
            <summary>
            Update Right Wall Brush
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.OnBottomWallBrushChanged">
            <summary>
            Update Bottom Wall Brush
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.OnTopWallBrushChanged">
            <summary>
            Update Left Wall Brush
            </summary>
            <param name="name"></param>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfChart3D.PrimaryAxisProperty">
            <summary>
             Using a DependencyProperty as the backing store for PrimaryAxis.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfChart3D.SecondaryAxisProperty">
            <summary>
             Using a DependencyProperty as the backing store for SecondaryAxis.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.OnSeriesCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Called when [series collection changed].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.OnSeriesPropertyCollectionChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the <see>
                <cref>E:SeriesPropertyCollectionChanged</cref>
            </see>
                event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.SeriesSelectedIndexChanged(System.Int32,System.Int32)">
            <summary>
            Method used to highlight selected index series.
            </summary>
            <param name="args"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.UI.Xaml.Charts.SfChart3D.MeasureOverride(System.Windows.Size)" -->
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.CloneChart">
            <summary>
            Clone the entire chart
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.RenderSeries">
            <summary>
            Renders the series.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.PointToValue(Syncfusion.UI.Xaml.Charts.ChartAxis,System.Windows.Point)">
            <summary>
            Converts point to value.
            </summary>
            <param name="axis">The axis value.</param>
            <param name="point">The point.</param>
            <returns>
            The double point to value
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.ValueToPoint(Syncfusion.UI.Xaml.Charts.ChartAxis,System.Double)">
            <summary>
            Converts Value to point.
            </summary>
            <param name="axis">The Chart axis .</param>
            <param name="value">The value.</param>
            <returns>
            The double value to point
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.Update3DWall">
            <summary>
            Update3D the wall.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.Update3DView">
            <summary>
            Update the 3D view.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.AutoDepthAdjust">
            <summary>
            Automatics the depth adjust.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>. In simplest terms, this means the method is called just before a UI element displays in an application. For more information, see Remarks.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.Schedule3DUpdate">
            <summary>
            Schedule the 3d update.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.OnAxisChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the <see>
            <cref>E:AxisChanged</cref>
            </see>
            event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.UpdateAxisLayoutPanels">
            <summary>
            Updates the entire chart series and axis
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.LayoutAxis(System.Windows.Size)">
            <summary>
            Layouts the axis.
            </summary>
            <param name="availableSize">Size of the available.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.UpdateArea(System.Boolean)">
            <summary>
            Update the chart area
            </summary>
            <param name="forceUpdate"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.InitializeDefaultAxes">
            <summary>
             Set default axes for SfChart
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.SetPrimaryAxis(Syncfusion.UI.Xaml.Charts.ChartValueType)">
             <summary>
            Set PrimaryAxis for SfChart
             </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart3D.ScheduleRenderSeries">
            <summary>
            Schedules the render series.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart3D.EnableRotation">
            <summary>
            Gets or sets a value indicating whether [enable rotation].
            </summary>
            <value>
              <c>true</c> if [enable rotation]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart3D.EnableSeriesSelection">
            <summary>
            Gets or sets a value indicating allow selection in series.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart3D.TopWallBrush">
            <summary>
            Gets or sets the top wall brush.
            </summary>
            <value>
            The top wall brush.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart3D.BottomWallBrush">
            <summary>
            Gets or sets the bottom wall brush.
            </summary>
            <value>
            The bottom wall brush.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart3D.RightWallBrush">
            <summary>
            Gets or sets the right wall brush.
            </summary>
            <value>
            The right wall brush.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart3D.LeftWallBrush">
            <summary>
            Gets or sets the left wall brush.
            </summary>
            <value>
            The left wall brush.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart3D.BackWallBrush">
            <summary>
            Gets or sets the back wall brush.
            </summary>
            <value>
            The back wall brush.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart3D.PerspectiveAngle">
            <summary>
            Gets or sets the perspective angle.
            </summary>
            <value>
            The perspective angle.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart3D.PrimaryAxis">
            <summary>
            Gets or Sets primary axis.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart3D.SecondaryAxis">
            <summary>
            Gets or Sets secondary axis.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart3D.Series">
            <summary>
            Gets or sets the series.
            </summary>
            <value>
            The series.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart3D.Tilt">
            <summary>
            Gets or sets the tilt.
            </summary>
            <value>
            The tilt.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart3D.Depth">
            <summary>
            Gets or sets the depth.
            </summary>
            <value>
            The depth.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart3D.Rotation">
            <summary>
            Gets or sets the rotation.
            </summary>
            <value>
            The rotation.
            </value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.CategoryAxis3D">
            <summary>
            Class implementation for CategoryAxis
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartAxisBase3D">
            <summary>
            Class implementation for ChartAxisBase3D
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartAxis">
            <summary>
            Enables plotting of data points in a chart control.
            </summary>
            <remarks>
            The Chart requires a minimum of two axes namely primary axis and secondary
            axis to plot data points. Values / data in the chart are plotted against these two
            axes. Chart WINRT also supports adding multiple axes to the chart and the
            series can be drawn with reference to any x-axis,y-axis added to <see cref="T:Syncfusion.UI.Xaml.Charts.SfChart"/>
            </remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.CRoundDecimals">
            <summary>
            CRoundDecimals const variable declarations
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.MaxPixelsCount">
            <summary>
            MaxPixelsCount  variable declarations
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.m_actualVisibleRange">
            <summary>
            Contains Actual VisibleRange
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.isInversed">
            <summary>
            isInversed variable declarations
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.c_intervalDivs">
            <summary>
            Initializes c_intervalDivs
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.m_actualRange">
            <summary>
            Contains  actual Range WithoutPadding
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.LabelFormatProperty">
            <summary>
            Using a DependencyProperty as the backing store for LabelFormat.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.PrefixLabelTemplateProperty">
            <summary>
            Using a DependencyProperty as the backing store for PrefixLabelTemplate.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.PostfixLabelTemplateProperty">
            <summary>
            Using a DependencyProperty as the backing store for PostfixLabeltemplate.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.LabelsSourceProperty">
            <summary>
             Identifies the LabelsSource dependency property.
             </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.PositionPathProperty">
            <summary>
            Identifies the PositionPath dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.ContentPathProperty">
            <summary>
            Identifies the ContentPath dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.PlotOffsetProperty">
            <summary>
             Using a DependencyProperty as the backing store for LableOffset.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.AxisLineOffsetProperty">
            <summary>
             Using a DependencyProperty as the backing store for AxisLineOffset.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.LabelsPositionProperty">
            <summary>
             Using a DependencyProperty as the backing store for LabelsPosition.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.LabelsIntersectActionProperty">
            <summary>
             Using a DependencyProperty as the backing store for LabelsIntersectAction.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.LabelExtentProperty">
            <summary>
             Using a DependencyProperty as the backing store for LabelExtent.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.LableRotationAngleProperty">
            <summary>
            Using a DependencyProperty as the backing store for LableRotationAngle.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.AxisLineStyleProperty">
            <summary>
             Using a DependencyProperty as the backing store for AxisLineStyle.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.OrientationProperty">
            <summary>
            Using a DependencyProperty as the backing store for Orientation.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.OpposedPositionProperty">
            <summary>
             Using a DependencyProperty as the backing store for OpposedPosition.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.ValueTypeProperty">
            <summary>
            Using a DependencyProperty as the backing store for ValueType.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.DesiredIntervalsCountProperty">
            <summary>
            Using a DependencyProperty as the backing store for DesiredIntervalsCount.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.HeaderProperty">
            <summary>
            Using a DependencyProperty as the backing store for Header.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.HeaderTemplateProperty">
            <summary>
             Using a DependencyProperty as the backing store for HeaderTemplate.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.TickLineSizeProperty">
            <summary>
            Using a DependencyProperty as the backing store for TickSize.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.IsInversedProperty">
            <summary>
            Using a DependencyProperty as the backing store for IsInversed.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.OriginProperty">
            <summary>
            Using a DependencyProperty as the backing store for Origin.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.ShowOriginProperty">
            <summary>
            Using a DependencyProperty as the backing store for ShowOrigin.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.TickLinesPositionProperty">
            <summary>
            Using a DependencyProperty as the backing store for TickLinesPosition.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.ShowAxisNextToOriginProperty">
            <summary>
            Using a DependencyProperty as the backing store for ShowAxisNextToOrigin.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.EdgeLabelsDrawingModeProperty">
            <summary>
            Using a DependencyProperty as the backing store for EdgeLabelsDrawingMode.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.EdgeLabelsVisibilityModeProperty">
            <summary>
            Using a DependencyProperty as the backing store for EdgeLabelsVisibilityMode.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.MajorGridLineStyleProperty">
            <summary>
            Using a DependencyProperty as the backing store for MajorGridLineStyle.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.MinorGridLineStyleProperty">
            <summary>
            Using a DependencyProperty as the backing store for MinorGridLineStyle.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.MajorTickLineStyleProperty">
            <summary>
            Using a DependencyProperty as the backing store for MajorTickLineStyle.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.MinorTickLineStyleProperty">
            <summary>
            Using a DependencyProperty as the backing store for MinorTickLineStyle.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.ShowTrackBallInfoProperty">
            <summary>
            Using a DependencyProperty as the backing store for ShowTrackBallInfo.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.TrackBallLabelTemplateProperty">
            <summary>
            Using a DependencyProperty as the backing store for TrackBallLabelTemplate.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.ActualTrackBallLabelTemplateProperty">
            <summary>
            Using a DependencyProperty as the backing store for TrackBallLabelTemplate.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.CrosshairLabelTemplateProperty">
            <summary>
            Using a DependencyProperty as the backing store for CrosshairlLabelTemplate.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.ShowGridLinesProperty">
            <summary>
            Using a DependencyProperty as the backing store for ShowGridLines.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.LabelTemplateProperty">
            <summary>
            Using a DependencyProperty as the backing store for LabelTemplate.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxis.EnableAutoIntervalOnZoomingProperty">
            <summary>
            Using a DependencyProperty as the backing store for EnableAutoIntervalOnZooming.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.#ctor">
            <summary>
            Called when instance created for ChartAxis
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.m_VisibleLabels_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Occurs when visible labels collection is changed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.CoefficientToValue(System.Double)">
            <summary>
            Converts co-ordinate of point related to chart control to axis units.
            </summary>
            <param name="value">The absolute point value.</param>
            <returns>The value of point on axis.</returns>
            <seealso cref="!:ChartAxis.ValueToCoefficientCalc(double)"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.PolarCoefficientToValue(System.Double)">
            <summary>
            Converts Coefficient of Value related to chart control to Polar/Radar type axis unit.
            </summary>
            <param name="value"> Polar/Radar type axis Coefficient Value</param>
            <returns> The value of point on Polar/Radar type axis</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.CoefficientToActualValue(System.Double)">
            <summary>
            Converts co-ordinate of point related to chart control to axis units. It returns actual value instead of visible value.
            </summary>
            <param name="value">The absolute point value.</param>
            <returns>The value of point on axis.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.ValueToCoefficient(System.Double)">
            <summary>
            Converts value of passed point co-ordinate to control related co-ordinate.
            </summary>
            <param name="value">The value of point on axis.</param>
            <returns>The value of point on axis.</returns>
            <seealso cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.CoefficientToValueCalc"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.ValueToPolarCoefficient(System.Double)">
            <summary>
            Converts co-ordinate of point related to chart control to Polar/Radar type axis unit.
            </summary>
            <param name="value">The absolute point value.</param>
            <returns>The value of point on axis.</returns>
            <seealso cref="M:Syncfusion.UI.Xaml.Charts.ChartAxis.ValueToPolarCoefficient(System.Double)"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.ValueToCoefficient(System.Double,System.Boolean)">
            <summary>
            Converts value of passed point co-ordinate to control related co-ordinate.
            </summary>
            <param name="value">The value of point on axis.</param>
            <param name="isInversed">The value indicates whether <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.IsInversed"/> is e/&gt;</param>
            <returns>Co-ordinate of point related to chart control.</returns>
            <seealso cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.CoefficientToValueCalc"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.OnLabelCreated(Syncfusion.UI.Xaml.Charts.LabelCreatedEventArgs)">
            <summary>
            Occurs when label is created.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.GenerateVisibleLabels">
            <summary>
            Method implementation for Generate Labels in ChartAxis
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.GetLabelContent(System.Double)">
            <summary>
            Return Object value from the given position value
            </summary>
            <param name="position"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.CalculateRangeAndInterval(System.Windows.Size)">
            <summary>
            Calculates actual range and actual interval
            </summary>
            <param name="availableSize"></param>
            <summary>
            Calculates actual range and actual interval
            </summary>
            <param name="availableSize"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.AddSmallTicksPoint(System.Double)">
            <summary>
            Method implementation for Add SamllTicksPoint
            </summary>
            <param name="position"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.AddSmallTicksPoint(System.Double,System.Double)">
            <summary>
            Method implementation for Add smallTicks to axis
            </summary>
            <param name="postion"></param>
            <param name="logarithmicbase"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.CalculateActualRange">
            <summary>
            Calculates actual range
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.CalculateActualInterval(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Windows.Size)">
            <summary>
            Calculates actual interval
            </summary>
            <param name="range"></param>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.ApplyRangePadding(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Double)">
            <summary>
            Apply padding based on interval
            </summary>
            <param name="range"></param>
            <param name="interval"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.GetActualDesiredIntervalsCount(System.Windows.Size)">
            <summary>
            Returns the maximum desired intervals count.
            </summary>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.CalculateNiceInterval(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Windows.Size)">
            <summary>
            Calculates nice interval
            </summary>
            <param name="actualRange"></param>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.Invalidate">
            <summary>
            Recalculates visible range and visible labels.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.MeasureOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the Measure pass of Silverlight layout. Classes can override this method to define their own Measure pass behavior.
            </summary>
            <returns>
            The size that this object determines it needs during layout, based on its calculations of the allocated sizes for child objects; or based on other considerations, such as a fixed container size.
            </returns>
            <param name="availableSize"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.RaiseLabelCreated(Syncfusion.UI.Xaml.Charts.ChartAxisLabel)">
            <summary>
            Called when the label is created.
            </summary>
            <param name="axisLabel"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.PopulateVisibleLabelForCustomLabels">
            <summary>
            Sets the Custom Labels to Visible Labels Collection
            </summary>        
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.GetRenderedRect">
            <summary>
            Gets the actual rect co-ordinates of an ChartAxis.
            </summary>
            <returns>returns rect</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.GetArrangeRect">
            <summary>
            Gets the rect co-ordinates of an axis excluding its value of LabelOffset and AxisLineOffset.
            </summary>
            <returns>returns rect</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.CalculateVisibleRange(System.Windows.Size)">
            <summary>
            Calculates the visible range.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.ValueToPoint(System.Double)">
            <summary>
            Converts Value to point.
            </summary>
            <param name="value">The value.</param>
            <returns>The double value to point</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxis.PointToValue(System.Windows.Point)">
            <summary>
            Converts point to value.
            </summary>
            <param name="point">The point.</param>
            <returns>The double point to value</returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.StriplineXRange">
            <summary>
            StripLine range corresponding to x axis, this property is used to include range of StripLine to axis.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.StriplineYRange">
            <summary>
            StripLine range corresponding to y axis, this property is used to include range of StripLine to axis.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.ChartAxis.ActualRangeChanged">
            <summary>
            Occurs when [actual range changed].
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.ChartAxis.LabelCreated">
            <summary>
            Occurs when the labels is created.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.MaximumLabels">
            <summary>
            Gets or sets the maximum number of labels per 100 pixels.
            </summary>
            <value>
            The maximum labels.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.VisibleRange">
            <summary>
            Gets the visible range.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.ArrangeRect">
            <summary>
            Gets the bounds of the ChartAxis.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.PositionPath">
            <summary>
            Gets or Sets property path which contains the position of a label in axis
            </summary>
            <remarks>
            When <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.LabelsSource"/> property is set, position path used to determine value of label's position.
            </remarks>
            <value>The position path.</value>
            <seealso cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.LabelsSource"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.ContentPath">
            <summary>
            Gets or Sets property path to retrieve label content from LabelsSource
            </summary>
            <remarks>
            When <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.LabelsSource"/> property is set, content path used to determine content for label.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.LabelFormat">
            <summary>
            Gets or Sets label format.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.LabelsSource">
            <summary>
            Gets or Sets collection of objects to look for the label content at particular position in axis.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.PostfixLabelTemplate">
            <summary>
            Gets or Sets the postfix label template
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.PrefixLabelTemplate">
            <summary>
            Gets or Sets the prefix label template
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.PlotOffset">
            <summary>
            Gets or Sets a value from which the axis elements like label, ticklines will be drawn inside axis bounds.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.AxisLineOffset">
            <summary>
            Gets or Sets a value from which the axis line will be drawn inside axis bounds
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.LabelsPosition">
            <summary>
            Gets or Sets LabelsPosition
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.LabelsIntersectAction">
            <summary>
            Gets or Sets the actions to be taken when two labels intersects in bounds
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.LabelExtent">
            <summary>
            Gets or Sets  the distance between the label header from the ChartAxis.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.LabelRotationAngle">
            <summary>
            Gets or Sets label rotation angle.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.AxisLineStyle">
            <summary>
            Get or Set AxislineStyle property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.OpposedPosition">
            <summary>
            Gets or Sets a value that determines whether to draw axis at the opposite side of Chart
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.ValueType">
            <summary>
            Gets or sets the type of the value that chart axis displays.
            </summary>       
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.DesiredIntervalsCount">
             <summary>
            Gets or Sets approximate number of labels to be displayed in axis
             </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.ThumbLabelVisibility">
            <summary>
            Gets or Sets visibility of label.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.ThumbLabelTemplate">
            <summary>
            Gets or Sets template for label.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.Header">
            <summary>
            Gets or Sets axis header
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.HeaderTemplate">
            <summary>
            Gets or Sets DataTemplate for header.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.TickLineSize">
            <summary>
            Gets or Sets size of tickline.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.VisibleLabels">
            <summary>
            Gets the collection of visible labels.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.IsInversed">
            <summary>
            Gets or sets a value indicating whether the axis should be reversed. 
            When reversed, the axis will render points from right to left if horizontal, top to bottom when vertical and clockwise if radial.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.Origin">
            <summary>
            Gets or Sets origin value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.ShowOrigin">
            <summary>
            Get or Set ShowOrigin property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.TickLinesPosition">
            <summary>
            Gets or Sets tick lines position.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.ShowAxisNextToOrigin">
            <summary>
            Get or Set ShowAxisNextToOriginProperty
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.EdgeLabelsDrawingMode">
            <summary>
            Get or Set EdgeLabelDrawingMode
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.EdgeLabelsVisibilityMode">
            <summary>
            Get or Set EdgeLabelsVisibilityMode
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.MajorGridLineStyle">
            <summary>
            Gets or Sets major grid line style.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.MinorGridLineStyle">
            <summary>
            Gets or Sets minor grid line style
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.MajorTickLineStyle">
            <summary>
            Gets or Sets major tick line style.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.MinorTickLineStyle">
            <summary>
            Gets or Sets minor tick line style.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.ShowTrackBallInfo">
            <summary>
            Gets or Sets a value that indicates whether to show track ball label for this axis.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.TrackBallLabelTemplate">
            <summary>
            Gets or Sets DataTemplate for track ball label.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.ActualTrackBallLabelTemplate">
            <summary>
            Gets or Sets DataTemplate for track ball label.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.CrosshairLabelTemplate">
            <summary>
            Gets or Sets DataTemplate for cross hair label.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.ShowGridLines">
            <summary>
            Gets or Sets a value that indicates whether to show grid lines
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.EnableAutoIntervalOnZooming">
            <summary>
            Get or Set EnableAutoIntervalOnZoomingProperty
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.LabelTemplate">
            <summary>
            Gets or Sets DataTemplate for axis label.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.CustomLabels">
            <summary>
            Get CLR property as Customlabels
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxis.IsLogarithmic">
            <summary>
            Get or Set IsLogarithmic property
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxisBase3D.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAxisBase3D"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxisBase3D.OnAxisBoundsChanged(Syncfusion.UI.Xaml.Charts.ChartAxisBoundsEventArgs)">
            <summary>
            Raises the <see cref="E:AxisBoundsChanged"/> event.
            </summary>
            <param name="args">The <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAxisBoundsEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxisBase3D.CoefficientToValue(System.Double)">
            <summary>
            Converts co-ordinate of point related to chart control to axis units.
            </summary>
            <param name="value">The absolute point value.</param>
            <returns>The value of point on axis.</returns>
            <seealso cref="!:ChartAxis.ValueToCoefficientCalc(double)"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CategoryAxis3D.IntervalProperty">
            <summary>
            Using a DependencyProperty as the backing store for Interval.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CategoryAxis3D.OnIntervalChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when interval property changed 
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CategoryAxis3D.GetLabelContent(System.Double)">
            <summary>
            Method implementation for Get LabelContent for given position
            </summary>
            <param name="position"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CategoryAxis3D.CalculateActualInterval(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Windows.Size)">
            <summary>
            Calculates actual interval
            </summary>
            <param name="range"></param>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CategoryAxis3D.ApplyRangePadding(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Double)">
            <summary>
            Apply padding based on interval
            </summary>
            <param name="range"></param>
            <param name="interval"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CategoryAxis3D.GenerateVisibleLabels">
            <summary>
            Method implementation for Generate Visible labels for CategoryAxis
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CategoryAxis3D.Interval">
            <summary>
            Gets or Sets a value that determines the interval between labels. If this property is not set, interval will be calculated automatically.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.DateTimeAxis3D">
            <summary>
            Class implementation for DateTimeAxis3D
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.RangeAxisBase3D">
            <summary>
            Class implementation for RangeAxisBase
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.IRangeAxis">
            <summary>
            Interface implementation for IRangeAxis
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.IRangeAxis.Range">
            <summary>
            Get Range property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.RangeAxisBase3D.SmallTicksPerIntervalProperty">
            <summary>
            Using a DependencyProperty as the backing store for SmallTicksPerInterval.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.RangeAxisBase3D.SmallTickLineSizeProperty">
            <summary>
            Using a DependencyProperty as the backing store for SmallTickLineSize.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.RangeAxisBase3D.SmallTickLinesPositionProperty">
            <summary>
             Using a DependencyProperty as the backing store for SmallTickLinesPosition.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeAxisBase3D.AddSmallTicksPoint(System.Double)">
            <summary>
            Method implementation for Add SmallTicksPoint
            </summary>
            <param name="position"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeAxisBase3D.AddSmallTicksPoint(System.Double,System.Double)">
            <summary>
            Method implementation for Add smallTicks to axis
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeAxisBase3D.GenerateVisibleLabels">
            <summary>
            Method implementation for Generate Labels in ChartAxis
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeAxisBase3D.SmallTicksPerInterval">
            <summary>
            Gets or Sets small tick’s interval
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeAxisBase3D.SmallTickLineSize">
            <summary>
            Gets or Sets small tick line size
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeAxisBase3D.SmallTickLinesPosition">
            <summary>
            Gets or Sets small tick lines position
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DateTimeAxis3D.MinimumProperty">
            <summary>
            Using a DependencyProperty as the backing store for Minimum.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DateTimeAxis3D.MaximumProperty">
            <summary>
            Using a DependencyProperty as the backing store for Minimum.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DateTimeAxis3D.IntervalProperty">
            <summary>
             Using a DependencyProperty as the backing store for Interval.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxis3D.GenerateVisibleLabels">
            <summary>
            Method implementation for Create VisibleLabels for DateTime axis
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxis3D.OnMaximumChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when Maximum property changed
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxis3D.OnMinimumChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when minimum property Changed
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxis3D.OnIntervalChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when Interval property changed
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxis3D.CalculateActualInterval(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Windows.Size)">
            <summary>
            Calculates actual interval
            </summary>
            <param name="range"></param>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxis3D.CalculateActualRange">
            <summary>
            Calculates actual range
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxis3D.ApplyRangePadding(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Double)">
            <summary>
            Apply padding based on interval
            </summary>
            <param name="range"></param>
            <param name="interval"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxis3D.GetLabelContent(System.Double)">
            <summary>
            Return object value from the given double value
            </summary>
            <param name="position"></param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DateTimeAxis3D.Minimum">
            <summary>
            Get or Set Minimum property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DateTimeAxis3D.Maximum">
            <summary>
            Get or Set Maximum property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DateTimeAxis3D.Interval">
            <summary>
            Get or Set IntervalProperty
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.LogarithmicAxis3D">
            <summary>
            Class implementation for LogarithmicAxis3D
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis3D.#ctor">
            <summary>
            Called when instance created for LogarithmicAxis3D 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LogarithmicAxis3D.IntervalProperty">
            <summary>
            Using a DependencyProperty as the backing store for Interval.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LogarithmicAxis3D.MinimumProperty">
            <summary>
            Using a DependencyProperty as the backing store for Minimum.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LogarithmicAxis3D.MaximumProperty">
            <summary>
            Using a DependencyProperty as the backing store for Minimum.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LogarithmicAxis3D.LogarithmicBaseProperty">
            <summary>
            Using a DependencyProperty as the backing store for LogarithmicBase.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis3D.CalculateNiceInterval(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Windows.Size)">
            <summary>
            Calculates nice interval
            </summary>
            <param name="actualRange"></param>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis3D.GenerateVisibleLabels">
            <summary>
            Method implementation for Generate Labels in ChartAxis
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis3D.AddSmallTicksPoint(System.Double,System.Double)">
            <summary>
            Method implementation for Add SmallTicks for axis
            </summary>
            <param name="position"></param>
            <param name="logarithmicBase"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis3D.OnMaximumChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when maximum changed
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis3D.OnMinimumChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when minimum property changed
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis3D.OnIntervalChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when Interval changed
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis3D.CalculateActualInterval(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Windows.Size)">
            <summary>
            Calculates actual interval
            </summary>
            <param name="range"></param>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis3D.CalculateActualRange">
            <summary>
            Calculates actual range
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis3D.GetRange(System.Collections.Generic.List{System.Double},System.Double)">
            <summary>
            Get the range if date values contain 0 or double.NaN
            </summary>
            <param name="values"></param>
            <param name="rangeEnd"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis3D.ApplyRangePadding(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Double)">
            <summary>
            Apply padding based on interval
            </summary>
            <param name="range"></param>
            <param name="interval"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis3D.GetLabelContent(System.Double)">
            <summary>
            Return the object Value from the given double value
            </summary>
            <param name="position"></param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LogarithmicAxis3D.Interval">
            <summary>
            Get or Set IntervalProperty
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LogarithmicAxis3D.Minimum">
            <summary>
            Get or Set Minimum property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LogarithmicAxis3D.Maximum">
            <summary>
            Get or Set Maximum property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LogarithmicAxis3D.LogarithmicBase">
            <summary>
            Gets or Sets logarithmic base.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.NumericalAxis3D">
            <summary>
            Class implementation for RangeAxisBase
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.NumericalAxis3D.IntervalProperty">
            <summary>
            Using a DependencyProperty as the backing store for Interval.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.NumericalAxis3D.MinimumProperty">
            <summary>
             Using a DependencyProperty as the backing store for Minimum.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.NumericalAxis3D.MaximumProperty">
            <summary>
            Using a DependencyProperty as the backing store for Minimum.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.NumericalAxis3D.StartRangeFromZeroProperty">
            <summary>
            Using a DependencyProperty as the backing store for StartRangeFromZero.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.NumericalAxis3D.GenerateVisibleLabels">
            <summary>
            Method implementation for Generate Labels in ChartAxis
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.NumericalAxis3D.OnMaximumChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called Maximum property changed
            </summary>
            <param name="d"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.NumericalAxis3D.OnMaximumChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when Maximum property changed
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.NumericalAxis3D.OnMinimumChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            called when Minimum property changed
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.NumericalAxis3D.OnIntervalChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when interval changed
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.NumericalAxis3D.CalculateActualInterval(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Windows.Size)">
            <summary>
            Calculates actual interval
            </summary>
            <param name="range"></param>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.NumericalAxis3D.CalculateActualRange">
            <summary>
            Calculates actual range
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.NumericalAxis3D.ApplyRangePadding(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Double)">
            <summary>
            Apply padding based on interval
            </summary>
            <param name="range"></param>
            <param name="interval"></param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.NumericalAxis3D.Interval">
            <summary>
            Get or Set IntervalProperty
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.NumericalAxis3D.Minimum">
            <summary>
            Get or Set Minimum property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.NumericalAxis3D.Maximum">
            <summary>
            Get or Set Maximum property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.NumericalAxis3D.StartRangeFromZero">
            <summary>
            Gets or Sets a value that indicates whether to start range from zero when IsAutoSetRange is enabled.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.TimeSpanAxis3D">
            <summary>
            Class implementation for TimeSpanAxis
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.TimeSpanAxis3D.IntervalProperty">
            <summary>
            Using a DependencyProperty as the backing store for Interval.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.TimeSpanAxis3D.MinimumProperty">
            <summary>
            Using a DependencyProperty as the backing store for Minimum.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.TimeSpanAxis3D.MaximumProperty">
            <summary>
             Using a DependencyProperty as the backing store for Minimum.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TimeSpanAxis3D.GenerateVisibleLabels">
            <summary>
            Method implementation for Generate Labels in ChartAxis
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TimeSpanAxis3D.OnMaximumChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when Maximum property changed 
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TimeSpanAxis3D.OnMinimumChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Method implementation for Minimum property changed
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TimeSpanAxis3D.OnIntervalChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when Interval property changed
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TimeSpanAxis3D.CalculateActualInterval(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Windows.Size)">
            <summary>
            Calculates actual interval
            </summary>
            <param name="range"></param>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TimeSpanAxis3D.CalculateActualRange">
            <summary>
            Calculates actual range
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TimeSpanAxis3D.ApplyRangePadding(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Double)">
            <summary>
            Apply padding based on interval
            </summary>
            <param name="range"></param>
            <param name="interval"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TimeSpanAxis3D.GetLabelContent(System.Double)">
            <summary>
            Return Object from the given double value 
            </summary>
            <param name="position"></param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.TimeSpanAxis3D.Interval">
            <summary>
            Get or Set Interval property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.TimeSpanAxis3D.Minimum">
             <summary>
            get or set  Minimum property
             </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.TimeSpanAxis3D.Maximum">
            <summary>
            Get or Set Maximum property
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.XyDataSeries3D">
            <summary>
            Class implementation for XyDataseries3D 
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.CartesianSeries3D">
            <summary>
            Class implementation for CartesianSeries
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartSeries3D">
            <summary>
            Class implementation for ChartSeries3D
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartSeriesBase">
            <summary>
            ChartSeries is the base class for all the series types.
            </summary>
            <remarks>
            Data points for ChartSeries would be populated <see cref="T:Syncfusion.UI.Xaml.Charts.ChartSeriesBase"/> from
            <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.ItemsSource"/>property. Specify the binding paths for
            X-Values and Y-Values. The number of Y-Values may vary depending on the type of
            series. For e.g LineSeries requires only one y-value, whereas CandleSeries
            requires four y-values to plot a point.
            </remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ChartSegment"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.Segments">
            <summary>
            segments variable declarations
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.ChartTransformer">
            <summary>
            ChartTransformer variable declarations
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.YPaths">
            <summary>
            YPaths variable declarations
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.GetSpacing(System.Windows.DependencyObject)">
            <summary>
            Gets the Spacing for the SideBySide segments
            </summary>
            <param name="obj">ChartSeries object</param>
            <returns>returns a double value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.SetSpacing(System.Windows.DependencyObject,System.Double)">
            <summary>
            Sets the Spacing for the SideBySide segments
            </summary>
            <param name="obj">ChartSeries object</param>
            <param name="value">The value to set for calcaulting the segment width</param>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.SpacingProperty">
            <summary>
             Using a DependencyProperty as the backing store for Spacing.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.GetAvailableSize">
            <summary>
            Gets the available size of Chart.
            </summary>
            <returns>returns size</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.#ctor">
            <summary>
            Called when instance created for ChartSeries
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.InitialDelayTimer_Tick(System.Object,System.Object)">
            <summary>
             Timer Tick Handler for initial delay in opening the Tooltip
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.Timer_Tick(System.Object,System.Object)">
            <summary>
            Timer Tick Handler for closing the Tooltip
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.AddTooltip">
            <summary>
            set tootip margin and position
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.RemoveTooltip">
            <summary>
            Remove tooltip from adorning canvas
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Event to show tooltip
            </summary>
            <param name="e"> Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            when Pointer leave from segment it will fire
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.UpdateTooltip(System.Object)">
            <summary>
            Add and Update the Tooltip
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.UpdateSeriesTooltip(System.Object)">
            <summary>
            Add and Update the series Tooltip
            </summary>
            <param name="customTag"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.SetTooltipDuration">
            <summary>
            Set ToolTip duration
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.SetDoubleAnimation(Syncfusion.UI.Xaml.Charts.ChartTooltip)">
            <summary>
            Set animation for tooltip
            </summary>
            <param name="chartTooltip"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.FadeInAnimation(Syncfusion.UI.Xaml.Charts.ChartTooltip@)">
            <summary>
            set fade animation for initial show delay
            </summary>
            <param name="chartTooltip"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.GetTooltipTemplate">
            <summary>
            Get the Default Template for Tooltip
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.Position(System.Windows.Point,Syncfusion.UI.Xaml.Charts.ChartTooltip@)">
            <summary>
            Set the Horizontal and Vertical Alignment for Tooltip
            </summary>
            <param name="mousePos">Current Position</param>
            <param name="tooltip">Tooltip instance</param>
            <returns></returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.XBindingPathProperty">
            <summary>
             Identifies the XBindingPath dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.SortByProperty">
            <summary>
             Using a DependencyProperty as the backing store for SortBy.  
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.SortDirectionProperty">
            <summary>
            Using a DependencyProperty as the backing store for SortDirection.  
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.IsSortDataProperty">
            <summary>
            Using a DependencyProperty as the backing store for IsSortData. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.PaletteProperty">
            <summary>
            Using a DependencyProperty as the backing store for Pallete.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.ItemsSourceProperty">
            <summary>
             Identifies the ItemsSource dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.TrackBallLabelTemplateProperty">
            <summary>
            Using a DependencyProperty as the backing store for TrackBallLabelTemplate.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.ActualTrackBallLabelTemplateProperty">
            <summary>
            Using a DependencyProperty as the backing store for actual TrackBallLabelTemplate.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.InteriorProperty">
            <summary>
            Using a DependencyProperty as the backing store for Interior.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.LabelProperty">
            <summary>
             Using a DependencyProperty as the backing store for Label.  This enables animation, styling, binding, etc..
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.LegendIconProperty">
            <summary>
             Using a DependencyProperty as the backing store for LegendIcon.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.LegendIconTemplateProperty">
            <summary>
             Using a DependencyProperty as the backing store for LegendIconTemplate.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.VisibilityOnLegendProperty">
            <summary>
             Using a DependencyProperty as the backing store for VisibilityOnLegend.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.ColorModelProperty">
            <summary>
            Using a DependencyProperty as the backing store for ColorModel.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.GetDataPoint(System.Int32)">
            <summary>
             This method used to get the chart data at an index.
             </summary>
             <param name="index"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.SelectedIndexChanged(System.Int32,System.Int32)">
            <summary>
            Method used to set SegmentSelectionBrush to selectedindex chartsegment
            </summary>
            <param name="newIndex"></param>
            <param name="oldIndex"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.RaiseSelectionChangedEvent">
            <summary>
            Called when selection changed in load time
            </summary>
            <param name="segment"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.SetSelectionChangedEventArgs">
            <summary>
            Set SelectionChanged event args
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.UpdateAdornmentSelection(System.Int32)">
            <summary>
            Method used to select the adornment in given data point
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.FindNearestChartPoint(System.Windows.Point,System.Double@,System.Double@,System.Double@)">
            <summary>
            Finds the nearest point in ChartSeries relative to the mouse point/touch position.
            </summary>
            <param name="point">The co-ordinate point representing the current mouse point /touch position.</param>
            <param name="x">x-value of the nearest point.</param>
            <param name="y">y-value of the nearest point</param>
            <param name="stackedYValue"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.UpdateArea">
            <summary>
            Method implementation for UpdateArea
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.GeneratePoints">
            <summary>
            method declaration for generatepoints in Chartseries
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.GetPreviousSeries(Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Return the previous series
            </summary>
            <param name="series"></param>
            <returns></returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.EmptyPointValueProperty">
            <summary>
            Using a DependencyProperty as the backing store for EmptyPointValue.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.EmptyPointStyleProperty">
            <summary>
            Using a DependencyProperty as the backing store for EmptyPointStyle.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.EmptyPointSymbolTemplateProperty">
            <summary>
             Using a DependencyProperty as the backing store for EmptyPointSymbolTemplate.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.ShowEmptyPointsProperty">
            <summary>
            Using a DependencyProperty as the backing store for ShowEmptyPoints.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.EmptyPointInteriorProperty">
            <summary>
            Using a DependencyProperty as the backing store for EmptyPointInterior.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>. In simplest terms, this means the method is called just before a UI element displays in an application. For more information, see Remarks.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.SetIndividualPoint(System.Int32,System.Object,System.Boolean)">
            <summary>
            Method implementation for Set points to given index
            </summary>
            <param name="index"></param>
            <param name="obj"></param>
            <param name="replace"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.HookPropertyChangedEvent(System.Boolean,System.Object)">
             <summary>
            Method to hook the PropertyChange event for individual data point
             </summary>
             <param name="needPropertyChange"></param>
             <param name="obj"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.GeneratePoints(System.String[],System.Collections.Generic.IList{System.Double}[])">
            <summary>
            Method implementation for  GeneratePoints for ChartSeries 
            </summary>
            <param name="yPaths"></param>
            <param name="yValueLists"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.GetArrayPropertyValue(System.Object,System.String[])">
            <summary>
            Method for getting the property values by the property name with its index
            </summary>
            <param name="obj">Current object</param>
            <param name="paths">XComplexPaths</param>
            <returns>Property value</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.GetPropertyValue(System.Object,System.String[])">
            <summary>
            Method for get the property values by the property name
            </summary>
            <param name="obj">Current object</param>
            <param name="paths">XComplexPaths</param>
            <returns>Property value</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.SetPropertyValue(System.Object,System.String[],System.Object)">
            <summary>
            Method implementation to set the updated data to the current object
            </summary>
            <param name="obj">Current object</param>
            <param name="paths">XComplexPaths</param>
            <param name="data">updated value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.GetXValues">
            <summary>
            Return collection of double values
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.SortChartPoints">
            <summary>
            Sorts the Chart Points 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.Sort``2(System.Collections.Generic.List{System.Tuple{``0,``1}})">
            <summary>
            Sort the ActualXValues and ActualYValues 
            </summary>
            <typeparam name="T">XValues</typeparam>
            <typeparam name="T">YValues</typeparam>
            <typeparam name="?">Index</typeparam>
            <param name="list"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.Sort``3(System.Collections.Generic.List{System.Tuple{``0,``1,``2}})">
            <summary>
            Sort the ActualXValues and ActualYValues 
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <param name="list"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.Sort``5(System.Collections.Generic.List{System.Tuple{``0,``1,``2,``3,``4}})">
            <summary>
            Sort the ActualXValues and ActualYValues 
            </summary>
            <typeparam name="T">XValues</typeparam>
            <typeparam name="T">YValues</typeparam>
            <typeparam name="?">Index</typeparam>
            <param name="list"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.CreateTransformer(System.Windows.Size,System.Boolean)">
            <summary>
            Return IChartTranform value based upon the given size
            </summary>
            <param name="size"></param>
            <param name="create"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.OnDataSourceChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when DataSource property changed
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.SetIndividualDataTablePoint(System.Int32,System.Object,System.Boolean)">
            <summary>
            Method implementation for Set points to given index for data table
            </summary>
            <param name="index"></param>
            <param name="obj"></param>
            <param name="replace"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when DataSource changed
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.UnHookPropertyChanged(System.Object)">
             <summary>
            Method to unhook the collection change event for the given collection
             </summary>      
             <param name="dataSource"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.UnHookPropertyChangedEvent(System.Boolean,System.Object)">
             <summary>
            Method to unhook the PropertyChange event for individual data point
             </summary>
             <param name="needPropertyChange"></param>
             <param name="obj"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.SuspendNotification">
            <summary>
            Suspends the series from updating the series data till ResumeNotification is called. 
            This is specifically used when we need to append collection of datas.
            </summary>        
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.ResumeNotification">
            <summary>
            Processes the data that is added to data source after SuspendNotification.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.Invalidate">
            <summary>
            Invalidates the Series 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.CreateSegments">
            <summary>
            An abstract method which will be called over to create segments.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.ValidateYValues">
            <summary>
            Validate the datapoints for segment implementation.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.ReValidateYValues(System.Collections.Generic.List{System.Int32}[])">
            <summary>
            Validate the datapoints for segment implementation.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.ClearUnUsedSegments(System.Int32)">
            <summary>
            Method implementation for Clear unused segments
            </summary>
            <param name="startIndex"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.UpdateSegments(System.Int32,System.Collections.Specialized.NotifyCollectionChangedAction)">
            <summary>
            An abstract method which will called over each time in its child class to update an segment.
            </summary>
            <param name="index">The index of the segment</param>
            <param name="action">The collection changed action which raises the notification</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.RaiseSelectionChanging(System.Int32,System.Int32)">
            <summary>
            Method is used to raise SelectionChanging event
            </summary>
            <param name="newIndex"></param>
            <param name="oldIndex"></param>
            <param name="series"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.SetSelectionChangingEventArgs(System.Int32,System.Int32)">
            <summary>
            Method used to set SelectionChangingEventArgs values
            </summary>
            <param name="newIndex"></param>
            <param name="oldIndex"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.GetDataPoint(System.Windows.Point)">
            <summary>
            This method used to get the SfChart data at a mouse position.
            </summary>
            <param name="mousePos"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.RemoveSegments">
            <summary>
            Removes the Segments
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.GetSideBySideInfo(Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Returns the value of side by side position for a series.
            </summary>
            <param name="currentseries">ChartSeries.</param>
            <returns>The DoubleRange side by side Info</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.CalculateSideBySidePositions">
            <summary>
            calculates the side-by-side position for all applicable series.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.XValues">
            <summary>
            Gets or Sets the x values in an unsorted order or in the order the data has been added to series.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.ActualXValues">
            <summary>
            Gets or Sets the sorted values, if the IsSortData is true.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.SeriesYValues">
            <summary>
            Gets or Sets the y values in an unsorted order or in the order the data has been added to series.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.ActualSeriesYValues">
            <summary>
            Gets or Sets the sorted values, if the IsSortData is true.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.DataCount">
            <summary>
            Gets the number of points given as input.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.ActualXAxis">
            <summary>
            Gets actual series X-axis.
            </summary>
            <remarks>
            Gets actual XAxis for series with respect to chart type and <see cref="!:ChartSeriesBase.IsRotated"/> value.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.ActualYAxis">
            <summary>
            Gets actual series Y-axis.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.IsSortData">
             <summary>
            Gets or Sets a value whether to sort the datas.
             </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.SortDirection">
            <summary>
            Gets or Sets the Sorting Direction.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.SortBy">
             <summary>
            Gets or Sets SortingAxis.
             </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.IsMultipleYPathRequired">
            <summary>
            Used to indicate whether multipleYValues is needed,will be set internally.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.ListenPropertyChange">
            <summary>
            Gets or Sets listen property change.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.Adornments">
            <summary>
            Gets the adornments collection.
            </summary>
            <value>The adornments.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.IsSeriesVisible">
            <summary>
            Gets or Sets visibility for series.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.Palette">
            <summary>
            Gets or Sets ChartPalette for series.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.ItemsSource">
            <summary>
            Gets or sets an IEnumerable source used to generate Chart.
            </summary>
            <value>The DataSource value.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.TrackBallLabelTemplate">
            <summary>
            Gets or Sets DataTemplate used to display label, when ChartTrackBallBehavior is used.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.ActualTrackBallLabelTemplate">
            <summary>
            Gets or Sets internal DataTemplate used to display label, when ChartTrackBallBehavior is used.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.Interior">
            <summary>
            Gets or Sets the brush to paint the interior of the series.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.Label">
            <summary>
            Gets or Sets the label that will be displayed in the associated legend item.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.IsIndexed">
            <summary>
            Gets or Sets a value that indicates whether to treat x values as categories. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.LegendIcon">
            <summary>
            Gets or Sets ChartLegendIcon to be displayed in associated legend item.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.LegendIconTemplate">
            <summary>
            Gets or Sets DataTemplate for legend icon.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.VisibilityOnLegend">
            <summary>
            Gets or Sets a value that determines whether to create a legend item for this series. By default, legend item will be visible for this series.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.SeriesSelectionBrush">
            <summary>
            Gets or Sets the brush to select the series.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.ColorModel">
            <summary>
            Gets or Sets the ChartColorModel.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.XBindingPath">
            <summary>
            Gets or Sets the property path of the x data in ItemsSource.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.EnableAnimation">
            <summary>
            Gets or sets a value to animate the chart series on loading and whenever ItemsSource change.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.AnimationDuration">
            <summary>
            Gets or Sets the duration of the animation.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.EmptyPointValue">
            <summary>
            Gets or Sets a value that determines how to calculate value for empty point.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.EmptyPointStyle">
            <summary>
            Gets or Sets EmptyPointStyle for an empty point. It determines how to differentiate empty point from other data points.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.EmptyPointSymbolTemplate">
            <summary>
            Gets or Sets DataTemplate to be used when EmptyPointStyle is set to Symbol/ SymbolAndInterior. By default, an ellipse will be displayed as symbol.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.ShowEmptyPoints">
            <summary>
            Gets or Sets a value whether to show empty points.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.EmptyPointInterior">
            <summary>
            Gets or Sets interior color for empty point.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.GetReflectedProperty">
            <summary>
            References to method that reflects the value from the object
            </summary>
            <param name="obj">Current object</param>
            <param name="paths">Path name</param>
            <returns></returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeries3D.AdornmentsInfoProperty">
            <summary>
            Identifies the AdornmentsInfo dependency property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeries3D.GetSeriesSelectionBrush(Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Method used to get selection brush for series selection.
            </summary>
            <param name="series"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeries3D.SelectedIndexChanged(System.Int32,System.Int32)">
            <summary>
            Method used to set SegmentSelectionBrush to selectedindex chartsegment and trigger chartselection event
            </summary>
            <param name="newIndex"></param>
            <param name="oldIndex"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeries3D.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>. In simplest terms, this means the method is called just before a UI element displays in an application. For more information, see Remarks.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeries3D.OnSeriesMouseDown(System.Object,System.Windows.Point)">
            <summary>
            Called when [series mouse down].
            </summary>
            <param name="source">The source.</param>
            <param name="pos">The position.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeries3D.OnSeriesMouseUp(System.Object,System.Windows.Point)">
            <summary>
            Called when [series mouse up].
            </summary>
            <param name="source">The source.</param>
            <param name="pos">The position.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeries3D.OnSeriesMouseMove(System.Object,System.Windows.Point)">
            <summary>
            Called when [series mouse move].
            </summary>
            <param name="source">The source.</param>
            <param name="pos">The position.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeries3D.OnSeriesMouseLeave(System.Object,System.Windows.Point)">
            <summary>
            Called when [series mouse leave].
            </summary>
            <param name="source">The source.</param>
            <param name="pos">The position.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeries3D.RaiseSelectionChangedEvent">
            <summary>
            Called when selection changed in load time
            </summary>
            <param name="segment"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeries3D.SetSelectionChangedEventArgs">
            <summary>
            Set SelectionChanged event args
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeries3D.CreateAdornment(Syncfusion.UI.Xaml.Charts.ChartSeriesBase,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Method implementation for Create Adornments
            </summary>
            <param name="series">The series.</param>
            <param name="xVal">The x value.</param>
            <param name="yVal">The y value.</param>
            <param name="xPos">The x position.</param>
            <param name="yPos">The y position.</param>
            <param name="startDepth">The start depth.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeries3D.AddColumnAdornments(System.Double[])">
            <summary>
            Method implementation for Add ColumnAdornments in Chart
            </summary>
            <param name="values"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeries3D.AddAdornmentAtXY(System.Double,System.Double,System.Int32,System.Double)">
            <summary>
            Method implementation for Add Adornments at XY
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="pointindex"></param>
            <param name="startDepth"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeries3D.UpdateOnSeriesBoundChanged(System.Windows.Size)">
            <summary>
            Updates the on series bound changed.
            </summary>
            <param name="size">The size.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeries3D.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when DataSource property changed 
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeries3D.ClearUnUsedAdornments(System.Int32)">
            <summary>
            Method implementation for Clear Unused Adornments
            </summary>
            <param name="startIndex">The start index.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeries3D.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Clones the series.
            </summary>
            <param name="obj">The object.</param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeries3D.SegmentSelectionBrush">
            <summary>
            Gets or sets the segment selection brush.
            </summary>
            <value>
            The segment selection brush.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeries3D.Area">
            <summary>
            Get or Set Area property 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeries3D.AdornmentsInfo">
            <summary>
            Gets or Sets ChartAdornmentInfo. This allows us to customize the appearance of a data point by displaying labels, shapes and connector lines.
            </summary>
            <value>
            The <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfo"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeries3D.SelectedIndex">
            <summary>
            Gets or Sets SelectedIndex.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ISupportAxes">
            <summary>
            Interface implementation for ISupportAxes
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ISupportAxes.XRange">
            <summary>
            Get XRange property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ISupportAxes.YRange">
            <summary>
            Get YRange property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ISupportAxes.ActualXAxis">
            <summary>
            Get ActualXAxis property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ISupportAxes.ActualYAxis">
            <summary>
            Get ActualYAxis property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CartesianSeries3D.XAxisProperty">
            <summary>
            Using a DependencyProperty as the backing store for XAxis.  This enables animation, styling, binding, etc... 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CartesianSeries3D.YAxisProperty">
            <summary>
            Using a DependencyProperty as the backing store for YAxis.  This enables animation, styling, binding, etc... 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CartesianSeries3D.OnYAxisChanged(Syncfusion.UI.Xaml.Charts.ChartAxis,Syncfusion.UI.Xaml.Charts.ChartAxis)">
            <summary>
            Called when instance created for YAxis Changed 
            </summary>
            <param name="oldAxis"></param>
            <param name="newAxis"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CartesianSeries3D.OnXAxisChanged(Syncfusion.UI.Xaml.Charts.ChartAxis,Syncfusion.UI.Xaml.Charts.ChartAxis)">
            <summary>
            Called when instance created for XAxis changed
            </summary>
            <param name="oldAxis"></param>
            <param name="newAxis"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CartesianSeries3D.OnVisibleRangeChanged(Syncfusion.UI.Xaml.Charts.VisibleRangeChangedEventArgs)">
            <summary>
            Called when VisibleRange property changed
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CartesianSeries3D.XRange">
            <summary>
            Get or Set  XRange property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CartesianSeries3D.YRange">
            <summary>
            Get YRange property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CartesianSeries3D.XAxis">
            <summary>
            Get or Set XAxis property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CartesianSeries3D.YAxis">
            <summary>
            Get or Set YAxis property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CartesianSeries3D.Syncfusion#UI#Xaml#Charts#ISupportAxes#ActualXAxis">
            <summary>
            Gets actual series X-axis.
            </summary>
            <remarks>
            Gets actual XAxis for series with respect to chart type and <see cref="!:ChartSeriesBase.IsRotated"/> value.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CartesianSeries3D.Syncfusion#UI#Xaml#Charts#ISupportAxes#ActualYAxis">
            <summary>
            Gets actual series Y-axis.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CartesianSeries3D.IsTransposed">
            <summary>
            Gets or Sets Orientation for Chart Series 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.XyDataSeries3D.YBindingPathProperty">
            <summary>
            Using a DependencyProperty as the backing store for YBindingPath.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XyDataSeries3D.#ctor">
            <summary>
            Called when instance created for XyDataSeries 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XyDataSeries3D.GetPointToValue(Syncfusion.UI.Xaml.Charts.ChartAxis,System.Windows.Point)">
            <summary>
            Method used to get the chart data at an given point
            </summary>
            <param name="axis"></param>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XyDataSeries3D.ValidateYValues">
            <summary>
            Validate the datapoints for segment implementation.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XyDataSeries3D.ReValidateYValues(System.Collections.Generic.List{System.Int32}[])">
            <summary>
            Revalidate the datapoints for segment implementation.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XyDataSeries3D.GeneratePoints">
            <summary>
            Method for Generate Points for XYDataSeries
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XyDataSeries3D.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when DataSource property changed
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.XyDataSeries3D.YBindingPath">
            <summary>
            Gets or Sets the property path to retrieve y data from ItemsSource.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.XyDataSeries3D.YValues">
            <summary>
            Get or Set YValues
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AreaSeries3D.RaiseSelectionChanging(System.Int32,System.Int32)">
            <summary>
            Method is used to raise SelectionChanging event
            </summary>
            <param name="newIndex"></param>
            <param name="oldIndex"></param>
            <param name="series"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AreaSeries3D.RaiseSelectionChangedEvent">
            <summary>
            Called when selection changed in load time
            </summary>
            <param name="segment"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AreaSeries3D.GetDataPoint(System.Windows.Point)">
            <summary>
            This method used to gets the chart data point at a position.
            </summary>
            <param name="mousePos"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AreaSeries3D.SelectedIndexChanged(System.Int32,System.Int32)">
            <summary>
            Method used to set SegmentSelectionBrush to selectedindex chartsegment and trigger chartselection event
            </summary>
            <param name="newIndex"></param>
            <param name="oldIndex"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.BarSeries3D">
            <summary>
            ColumnSeries displays its data points using a set of vertical bars.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ColumnSeries3D">
            <summary>
            ColumnSeries displays its data points using a set of vertical bars.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnSeries3D.CreateSegments">
            <summary>
            Creates the segments of ColumnSeries.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnSeries3D.GetAnimationIsActive">
            <summary>
            Gets the animation is active.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ColumnSeries3D.IsSideBySide">
            <summary>
            Gets a value indicating whether [is side by side].
            </summary>
            <value>
              <c>true</c> if [is side by side]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BarSeries3D.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.BarSeries3D"/> class.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D">
            <summary>
            Class implementation for CircularSeriesBase3D
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.LabelPositionProperty">
            <summary>
            Using a DependencyProperty as the backing store for LabelPosition.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.YBindingPathProperty">
            <summary>
             Using a DependencyProperty as the backing store for YBindingPath.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.ExplodeRadiusProperty">
            <summary>
            Using a DependencyProperty as the backing store for ExplodeRadius.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.ExplodeIndexProperty">
            <summary>
            Using a DependencyProperty as the backing store for ExplodeIndex.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.ExplodeAllProperty">
            <summary>
            Using a DependencyProperty as the backing store for ExplodeAll.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.#ctor">
            <summary>
            Called when instance created for AccumulationSeriesBase
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.ValidateYValues">
            <summary>
            Validate the datapoints for segment implementation.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when DataSource property get changed
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.DegreeToRadianConverter(System.Double)">
            <summary>
            Degrees to radian converter.
            </summary>
            <param name="degree">The degree.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.OnBindingPathChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the <see>
            <cref>E:BindingPathChanged</cref>
            </see>
            event.
            </summary>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.GeneratePoints">
            <summary>
            Method implementation for Generate points for Indicator
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.ReValidateYValues(System.Collections.Generic.List{System.Int32}[])">
            <summary>
            Validate the datapoints for segment implementation.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.ConnectorType">
            <summary>
            Gets or sets the connector mode.
            </summary>
            <value>
            The connector mode.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.EnableSmartLabels">
            <summary>
            Gets or sets a value indicating whether [enable smart labels].
            </summary>
            <value>
              <c>true</c> if [enable smart labels]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.CircleCoefficient">
            <summary>
            Gets or sets the circle coefficient.
            </summary>
            <value>
            The circle coefficient.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.LabelPosition">
            <summary>
            Gets or Sets label position for pie segment
            </summary>
            <value>
            The label position.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.YBindingPath">
            <summary>
            Gets or Sets the property path to retrieve y data from ItemsSource.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.ExplodeRadius">
            <summary>
            Get or Set ExplodeRadius property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.ExplodeIndex">
            <summary>
            Get or Set ExplodeIndexProperty
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.ExplodeAll">
            <summary>
            Get or Set ExplodeAllProperty
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.YValues">
            <summary>
            Get or Set YValues property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.StartAngle">
            <summary>
            Gets or sets the start angle in degrees, for clockwise/counterclockwise rotation..
            </summary>
            <value>
            The start angle.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CircularSeriesBase3D.EndAngle">
            <summary>
            Gets or sets the end angle in degrees, for clockwise/counterclockwise rotation..
            </summary>
            <value>
            The start angle.
            </value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.DoughnutSeries3D">
            <summary>
            Class implementation for DoughnutSeries3D
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.PieSeries3D">
            <summary>
            Class implementation for PieSeries3D
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSeries3D.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.PieSeries3D"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSeries3D.CreateTransformer(System.Windows.Size,System.Boolean)">
            <summary>
            Return IChartTranform value based upon the given size
            </summary>
            <param name="size"></param>
            <param name="create"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSeries3D.CreateSegments">
            <summary>
            An abstract method which will be called over to create segments.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSeries3D.CreateAdornment(Syncfusion.UI.Xaml.Charts.ChartSeries3D,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Method implementation for Create Adornments
            </summary>
            <param name="series">The series.</param>
            <param name="xVal">The x value.</param>
            <param name="yVal">The y value.</param>
            <param name="angle">The angle.</param>
            <param name="radius">The radius.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSeries3D.CreatePoints">
            <summary>
            Creates the points.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSeries3D.GetAnimationIsActive">
            <summary>
            Gets the animation is active.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSeries3D.Animate">
            <summary>
            Animates this instance.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSeries3D.OnSeriesMouseMove(System.Object,System.Windows.Point)">
            <summary>
            Called when [series mouse move].
            </summary>
            <param name="source">The source.</param>
            <param name="pos">The position.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSeries3D.OnSeriesMouseUp(System.Object,System.Windows.Point)">
            <summary>
            Called when [series mouse up].
            </summary>
            <param name="source">The source.</param>
            <param name="pos">The position.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSeries3D.OnSeriesMouseDown(System.Object,System.Windows.Point)">
            <summary>
            Called when [series mouse down].
            </summary>
            <param name="source">The source.</param>
            <param name="pos">The position.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PieSeries3D.ExplodeOnMouseClick">
            <summary>
            Gets or sets a value indicating whether [explode on mouse click].
            </summary>
            <value>
            <c>true</c> if [explode on mouse click]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DoughnutSeries3D.DoughnutCoefficientProperty">
            <summary>
            Using a DependencyProperty as the backing store for DoughnutCoefficient.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DoughnutSeries3D.DoughnutCoefficient">
            <summary>
            Gets or Sets coefficient, which determines the radius of doughnut series.
            </summary>
            <value>
            The doughnut coefficient.
            </value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSeries3D.RaiseSelectionChanging(System.Int32,System.Int32)">
            <summary>
            Method is used to raise SelectionChanging event
            </summary>
            <param name="newIndex"></param>
            <param name="oldIndex"></param>
            <param name="series"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSeries3D.RaiseSelectionChangedEvent">
            <summary>
            Called when selection changed in load time
            </summary>
            <param name="segment"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSeries3D.GetDataPoint(System.Windows.Point)">
            <summary>
            This method used to gets the chart data point at a position.
            </summary>
            <param name="mousePos"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSeries3D.SelectedIndexChanged(System.Int32,System.Int32)">
            <summary>
            Method used to set SegmentSelectionBrush to selectedindex chartsegment and trigger chartselection event
            </summary>
            <param name="newIndex"></param>
            <param name="oldIndex"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LineSeries3D.StrokeThickness">
            <summary>
            Gets or sets the stroke thickness for the LineSeries3D.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ScatterSeries3D.ScatterWidthProperty">
            <summary>
            Using a DependencyProperty as the backing store for ScatterWidth.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ScatterSeries3D.ScatterHeightProperty">
            <summary>
            Using a DependencyProperty as the backing store for Radius.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ScatterSeries3D.ScatterWidth">
            <summary>
            Gets or Sets scatter segment’s width.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ScatterSeries3D.ScatterHeight">
            <summary>
            Gets or Sets scatter segment’s height.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.StackingColumnSeries3D">
            <summary>
            StackingColumnSeries3D is typically preferred in cases of multiple series of type <see cref="T:Syncfusion.UI.Xaml.Charts.ColumnSeries3D"/>.
            Each series is then stacked vertically one above the other.
            If there exists only single series, it will resemble like a simple <see cref="T:Syncfusion.UI.Xaml.Charts.ColumnSeries3D"/> chart.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.StackingSeriesBase3D">
            <summary>
            Class implementation for StackingSeriesBase3D
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingSeriesBase3D.GetStackedYValue(System.Int32)">
            <summary>
            Return double value from the given index
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingSeriesBase3D.FindNearestChartPoint(System.Windows.Point,System.Double@,System.Double@,System.Double@)">
            <summary>
            Finds the nearest point in ChartSeries relative to the mouse point/touch position.
            </summary>
            <param name="point">The co-ordinate point representing the current mouse point /touch position.</param>
            <param name="x">x-value of the nearest point.</param>
            <param name="y">y-value of the nearest point</param>
            <param name="stackedYValue"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingSeriesBase3D.GetCumulativeStackValues(Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Returns the stacked value of the series.
            </summary>
            <param name="series">ChartSeries</param>
            <returns>StackedYValues class instance</returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StackingSeriesBase3D.GroupingLabel">
            <summary>
            Get or Set GroupingLabel for Stacking Series.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StackingSeriesBase3D.YRangeStartValues">
            <summary>
            Get or Set YRangeStartValues property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StackingSeriesBase3D.YRangeEndValues">
            <summary>
            Get or Set YRangeEndvalues property
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingColumnSeries3D.CreateSegments">
            <summary>
            creates the segments of StackingColumnSeries.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StackingColumnSeries3D.IsStacked">
            <summary>
            Gets a value indicating whether [is stacked].
            </summary>
            <value>
              <c>true</c> if [is stacked]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StackingColumnSeries3D.IsSideBySide">
            <summary>
            Gets a value indicating whether [is side by side].
            </summary>
            <value>
              <c>true</c> if [is side by side]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingColumn100Series3D.CreateSegments">
            <summary>
            Creates the segments of StackingColumn100Series
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingColumn100Series3D.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Clones the series.
            </summary>
            <param name="obj">The object.</param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ClassifyPointResult">
            <summary>
            Specifies the point location by the plane.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ClassifyPointResult.OnFront">
            <summary>
            Point is in the front of plane.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ClassifyPointResult.OnBack">
            <summary>
            Point is at the back of plane.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ClassifyPointResult.OnPlane">
            <summary>
            Point is on the plane.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ClassifyPolyResult">
            <summary>
            Specifies the polygon location by the plane.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ClassifyPolyResult.OnPlane">
            <summary>
            Polygon is on the plane.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ClassifyPolyResult.ToRight">
            <summary>
            Polygon is from right of the plane.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ClassifyPolyResult.ToLeft">
            <summary>
            Polygon is from left of the plane.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ClassifyPolyResult.Unknown">
            <summary>
            Location of polygon is unknown.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.BspTreeBuilder">
            <summary>
            This class contains methods to compute the Binary Space Partitioning (BSP) tree.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BspTreeBuilder.Add(Syncfusion.UI.Xaml.Charts.Polygon3D)">
            <summary>
            Adds the specified poly.
            </summary>
            <param name="poly">The poly.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BspTreeBuilder.Remove(Syncfusion.UI.Xaml.Charts.Polygon3D)">
            <summary>
            Removes the specified polygon.
            </summary>
            <param name="polygon">The polygon.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BspTreeBuilder.Build">
            <summary>
            Builds this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BspTreeBuilder.Build(System.Collections.Generic.List{Syncfusion.UI.Xaml.Charts.Polygon3D})">
            <summary>
            Builds the specified collection of polygons.
            </summary>
            <param name="arlist">The collection of polygons.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BspTreeBuilder.GetNodeCount(Syncfusion.UI.Xaml.Charts.BspNode)">
            <summary>
            Gets the node count.
            </summary>
            <param name="el">The el.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BspTreeBuilder.ClassifyPolygon(Syncfusion.UI.Xaml.Charts.Polygon3D,Syncfusion.UI.Xaml.Charts.Polygon3D)">
            <summary>
            
            </summary>
            <param name="pln">The Polygon.</param>
            <param name="plg">The Polygon.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BspTreeBuilder.ClassifyPoint(Syncfusion.UI.Xaml.Charts.Vector3D,Syncfusion.UI.Xaml.Charts.Polygon3D)">
            <summary>
            Classifies the point.
            </summary>
            <param name="pt">The pt.</param>
            <param name="pln">The PLN.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BspTreeBuilder.SplitPolygon(Syncfusion.UI.Xaml.Charts.Polygon3D,Syncfusion.UI.Xaml.Charts.Polygon3D,Syncfusion.UI.Xaml.Charts.Polygon3D[]@,Syncfusion.UI.Xaml.Charts.Polygon3D[]@)">
            <summary>
            
            </summary>
            <param name="poly"></param>
            <param name="part"></param>
            <param name="backPoly"></param>
            <param name="frontPoly"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BspTreeBuilder.CutOutBackPolygon(System.Collections.Generic.List{Syncfusion.UI.Xaml.Charts.Vector3DIndexClassification},Syncfusion.UI.Xaml.Charts.Vector3DIndexClassification,System.Collections.Generic.ICollection{Syncfusion.UI.Xaml.Charts.Vector3D})">
            <summary>
            Cuts the out back polygon.
            </summary>
            <param name="polyPoints">The poly points.</param>
            <param name="vwiwc">The vwiwc.</param>
            <param name="points">The points.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BspTreeBuilder.CutOutFrontPolygon(System.Collections.Generic.List{Syncfusion.UI.Xaml.Charts.Vector3DIndexClassification},Syncfusion.UI.Xaml.Charts.Vector3DIndexClassification,System.Collections.Generic.List{Syncfusion.UI.Xaml.Charts.Vector3D})">
            <summary>
            Cuts the out front polygon.
            </summary>
            <param name="polyPoints">The poly points.</param>
            <param name="vwiwc">The vwiwc.</param>
            <param name="points">The points.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BspTreeBuilder.GetNext(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="i"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BspTreeBuilder.Item(System.Int32)">
            <summary>
            Gets the <see>
            <cref>PiePrototype.Polygon</cref>
            </see>
            at the specified index.
            </summary>
            <value>
            The <see cref="T:Syncfusion.UI.Xaml.Charts.Polygon3D"/>.
            </value>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Vector3DIndexClassification.#ctor(Syncfusion.UI.Xaml.Charts.Vector3D,System.Int32,Syncfusion.UI.Xaml.Charts.ClassifyPointResult)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.Vector3DIndexClassification"/> class.
            </summary>
            <param name="point">The Vector3D point.</param>
            <param name="ind">The index.</param>
            <param name="res">The ClassifyPointResult.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Vector3DIndexClassification.Vector">
            <summary>
            Gets or sets the vector.
            </summary>
            <value>The vector.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Vector3DIndexClassification.Index">
            <summary>
            Gets or sets the index.
            </summary>
            <value>The index.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Vector3DIndexClassification.Result">
            <summary>
            Gets or sets the classify result.
            </summary>
            <value>The classify result.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Vector3DIndexClassification.CuttingBackPoint">
            <summary>
            Gets or sets a value indicating whether [cutting back point].
            </summary>
            <value><c>true</c> if [cutting back point]; otherwise, <c>false</c>.</value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Vector3DIndexClassification.CuttingFrontPoint">
            <summary>
            Gets or sets a value indicating whether [cutting front point].
            </summary>
            <value><c>true</c> if [cutting front point]; otherwise, <c>false</c>.</value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Vector3DIndexClassification.CuttingBackPairIndex">
            <summary>
            Gets or sets the index of the cutting back pair.
            </summary>
            <value>The index of the cutting back pair.</value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Vector3DIndexClassification.CuttingFrontPairIndex">
            <summary>
            Gets or sets the index of the cutting front pair.
            </summary>
            <value>The index of the cutting front pair.</value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Vector3DIndexClassification.AlreadyCuttedBack">
            <summary>
            Gets or sets a value indicating whether [already cutted back].
            </summary>
            <value><c>true</c> if [already cutted back]; otherwise, <c>false</c>.</value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Vector3DIndexClassification.AlreadyCuttedFront">
            <summary>
            Gets or sets a value indicating whether [already cutted front].
            </summary>
            <value><c>true</c> if [already cutted front]; otherwise, <c>false</c>.</value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BspNode.Back">
            <summary>
            Gets or sets the back node.
            </summary>
            <value>The back node.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BspNode.Front">
            <summary>
            Gets or sets the front node.
            </summary>
            <value>The front node.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BspNode.Plane">
            <summary>
            Gets or sets the plane.
            </summary>
            <value>The plane.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.Graphics3D">
            <summary>
            Represents Graphics3D.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Graphics3D.AddVisual(Syncfusion.UI.Xaml.Charts.Polygon3D)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.Graphics3D"/> class.
            </summary>
            <summary>
            Adds the polygon to the drawing.
            </summary>
            <param name="polygon">The <see cref="T:Syncfusion.UI.Xaml.Charts.Polygon3D"/>.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Graphics3D.Remove(Syncfusion.UI.Xaml.Charts.Polygon3D)">
            <summary>
            Removes the specified polygon.
            </summary>
            <param name="polygon">The polygon.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Graphics3D.ClearVisual">
            <summary>
            clear the polygon from visual tree.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Graphics3D.PrepareView">
            <summary>
            Computes the BSP tree.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Graphics3D.PrepareView(System.Double,System.Double,System.Double,System.Double,System.Windows.Size)">
            <summary>
            Computes the BSP tree.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Graphics3D.View(System.Windows.Controls.Panel)">
            <summary>
            Draws the paths to the panel/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Graphics3D.View(System.Windows.Controls.Panel,System.Double,System.Double,System.Windows.Size,System.Double,System.Double)">
            <summary>
            Draws the polygons to the <see cref="T:System.Drawing.Graphics"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Graphics3D.DrawBspNode3D(Syncfusion.UI.Xaml.Charts.BspNode,Syncfusion.UI.Xaml.Charts.Vector3D,System.Windows.Controls.Panel)">
            <summary>
            Draws the BSP node in 3D.
            </summary>
            <param name="tr">The tree.</param>
            <param name="eye">The eye position.</param>
            <param name="panel"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Graphics3D.Transform">
            <summary>
            Gets or sets the transform.
            </summary>
            <value>The transform.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.Matrix3D">
            <summary>
            Represents the matrix 4x4.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Matrix3D.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.Matrix3D"/> class.
            </summary>
            <param name="size">The size.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Matrix3D.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.Matrix3D"/> class.
            </summary>
            <param name="m11">The M11 element of matrix.</param>
            <param name="m12">The M12 element of matrix.</param>
            <param name="m13">The M13 element of matrix.</param>
            <param name="m14">The M14 element of matrix.</param>
            <param name="m21">The M21 element of matrix.</param>
            <param name="m22">The M22 element of matrix.</param>
            <param name="m23">The M23 element of matrix.</param>
            <param name="m24">The M24 element of matrix.</param>
            <param name="m31">The M31 element of matrix.</param>
            <param name="m32">The M32 element of matrix.</param>
            <param name="m33">The M33 element of matrix.</param>
            <param name="m34">The M34 element of matrix.</param>
            <param name="m41">The M41 element of matrix.</param>
            <param name="m42">The M42 element of matrix.</param>
            <param name="m43">The M43 element of matrix.</param>
            <param name="m44">The M44 element of matrix.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Matrix3D.op_Addition(Syncfusion.UI.Xaml.Charts.Matrix3D,Syncfusion.UI.Xaml.Charts.Matrix3D)">
            <summary>
            
            </summary>
            <param name="m1"></param>
            <param name="m2"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Matrix3D.op_Multiply(Syncfusion.UI.Xaml.Charts.Matrix3D,Syncfusion.UI.Xaml.Charts.Vector3D)">
            <summary>
            
            </summary>
            <param name="m1"></param>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Matrix3D.op_BitwiseAnd(Syncfusion.UI.Xaml.Charts.Matrix3D,Syncfusion.UI.Xaml.Charts.Vector3D)">
            <summary>
            
            </summary>
            <param name="m1"></param>
            <param name="v1"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Matrix3D.op_Multiply(System.Double,Syncfusion.UI.Xaml.Charts.Matrix3D)">
            <summary>
            
            </summary>
            <param name="f1"></param>
            <param name="m1"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Matrix3D.op_Multiply(Syncfusion.UI.Xaml.Charts.Matrix3D,Syncfusion.UI.Xaml.Charts.Matrix3D)">
            <summary>
            
            </summary>
            <param name="m1"></param>
            <param name="m2"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Matrix3D.op_Equality(Syncfusion.UI.Xaml.Charts.Matrix3D,Syncfusion.UI.Xaml.Charts.Matrix3D)">
            <summary>
            
            </summary>
            <param name="m1"></param>
            <param name="m2"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Matrix3D.op_Inequality(Syncfusion.UI.Xaml.Charts.Matrix3D,Syncfusion.UI.Xaml.Charts.Matrix3D)">
            <summary>
            
            </summary>
            <param name="m1"></param>
            <param name="m2"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Matrix3D.GetInvertal(Syncfusion.UI.Xaml.Charts.Matrix3D)">
            <summary>
            Intervals the matrix.
            </summary>
            <param name="matrix3D">The matrix.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Matrix3D.GetMinor(Syncfusion.UI.Xaml.Charts.Matrix3D,System.Int32,System.Int32)">
            <summary>
            Gets the minor.
            </summary>
            <param name="dd">The matrix.</param>
            <param name="columnIndex">The index of column.</param>
            <param name="rowIndex">The index of row.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Matrix3D.GetD(Syncfusion.UI.Xaml.Charts.Matrix3D)">
            <summary>
            Gets the determinant.
            </summary>
            <param name="matrix3D">The matrix.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Matrix3D.GetIdentity">
            <summary>
            Gets the identity matrix.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Matrix3D.Transform(System.Double,System.Double,System.Double)">
            <summary>
            Transforms the specified vector.
            </summary>
            <param name="x">The X coordinate.</param>
            <param name="y">The Y coordinate.</param>
            <param name="z">The Z coordinate.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Matrix3D.Turn(System.Double)">
            <summary>
            Turns by the specified angle.
            </summary>
            <param name="angle">The angle.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Matrix3D.Tilt(System.Double)">
            <summary>
            Tilts by the specified angle.
            </summary>
            <param name="angle">The angle.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Matrix3D.Transposed(Syncfusion.UI.Xaml.Charts.Matrix3D)">
            <summary>
            Transposes the specified matrix.
            </summary>
            <param name="matrix3D">The matrix.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Matrix3D.Shear(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Shears the specified values.
            </summary>
            <param name="xy">The xy shear.</param>
            <param name="xz">The xz shear.</param>
            <param name="yx">The yx shear.</param>
            <param name="yz">The yz shear.</param>
            <param name="zx">The zx shear.</param>
            <param name="zy">The zy shear.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Matrix3D.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <param name="obj">Another object to compare to.</param>
            <returns>
            true if obj and this instance are the same type and represent the same value; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Matrix3D.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Matrix3D.GetDeterminant(System.Collections.Generic.IList{System.Double[]})">
            <summary>
            Calculates determinant row given matrix..
            </summary>
            <param name="dd">The matrix to calculate determinant.</param>
            <returns>Determinant of the given matrix.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Matrix3D.GetMMtr(System.Collections.Generic.IList{System.Double[]},System.Int32,System.Int32)">
            <summary>
            Gets the minor.
            </summary>
            <param name="dd">The matrix.</param>
            <param name="columnIndex">The index of column.</param>
            <param name="rowIndex">The index of row.</param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Matrix3D.IsAffine">
            <summary>
            Gets a value indicating whether this matrix is affine.
            </summary>
            <value><c>true</c> if this matrix is affine; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Matrix3D.Item(System.Int32,System.Int32)">
            <summary>
            Gets or sets the <see cref="T:System.Double"/> with the specified column and row.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Matrix3D.Identity">
            <summary>
            Gets the identity matrix.
            </summary>
            <value>The identity matrix.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.Vector3D">
            <summary>
            Represents the coordinates of a 3D point.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Vector3D.Empty">
            <summary>
            The empty <see cref="T:Syncfusion.UI.Xaml.Charts.Vector3D"/>. All coordinates is zero.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Vector3D.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.Vector3D"/> struct.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Vector3D.op_Subtraction(Syncfusion.UI.Xaml.Charts.Vector3D,Syncfusion.UI.Xaml.Charts.Vector3D)">
            <summary>
            Implements the operator -.
            </summary>
            <param name="v1">The v1.</param>
            <param name="v2">The v2.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Vector3D.op_Addition(Syncfusion.UI.Xaml.Charts.Vector3D,Syncfusion.UI.Xaml.Charts.Vector3D)">
            <summary>
            Implements the operator +.
            </summary>
            <param name="v1">The v1.</param>
            <param name="v2">The v2.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Vector3D.op_Multiply(Syncfusion.UI.Xaml.Charts.Vector3D,Syncfusion.UI.Xaml.Charts.Vector3D)">
            <summary>
            Implements the cross product operation.
            </summary>
            <param name="v1">The v1.</param>
            <param name="v2">The v2.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Vector3D.op_BitwiseAnd(Syncfusion.UI.Xaml.Charts.Vector3D,Syncfusion.UI.Xaml.Charts.Vector3D)">
            <summary>
            Implements the dot product operation.
            </summary>
            <param name="v1">The v1.</param>
            <param name="v2">The v2.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Vector3D.op_Multiply(Syncfusion.UI.Xaml.Charts.Vector3D,System.Double)">
            <summary>
            Implements the operator *.
            </summary>
            <param name="v1">The v1.</param>
            <param name="val">The val.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Vector3D.GetLength">
            <summary>
            Gets the length.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Vector3D.Normalize">
            <summary>
            Normalizes this vector.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Vector3D.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString"/> method.
            </summary>
            <returns>The text.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Vector3D.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <param name="obj">Another object to compare to.</param>
            <returns>
            true if obj and this instance are the same type and represent the same value; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Vector3D.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Vector3D.X">
            <summary>
            Gets the X coordinate.
            </summary>
            <value>The X.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Vector3D.Y">
            <summary>
            Gets the Y coordinate.
            </summary>
            <value>The Y.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Vector3D.Z">
            <summary>
            Gets the Z coordinate.
            </summary>
            <value>The Z.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Vector3D.IsValid">
            <summary>
            Gets a value indicating whether this instance is valid.
            </summary>
            <value><c>True</c> if this instance is valid; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartSegment3D">
            <summary>
            An abstract base class for 3D type of chart segments.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartSegment">
            <summary>
            An abstract base class for all type of chart segments.
            </summary>
            <remarks>
            You can create a custom chart segment by inheriting from <see cref="T:Syncfusion.UI.Xaml.Charts.ChartSegment"/>. You can also customize the appearance of a chart segment,
            by specifying values for <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSegment.Interior"/>,<see cref="P:Syncfusion.UI.Xaml.Charts.ChartSegment.Stroke"/> and <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSegment.StrokeThickness"/> properties.
            </remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSegment.ItemProperty">
            <summary>
            Using a DependencyProperty as the backing store for Item.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSegment.InteriorProperty">
            <summary>
            Using a DependencyProperty as the backing store for Interior.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSegment.StrokeThicknessProperty">
            <summary>
            Using a DependencyProperty as the backing store for StrokeThickness.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSegment.StrokeProperty">
            <summary>
            Using a DependencyProperty as the backing store for Stroke.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSegment.SetData(System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double})">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="xVals"></param>
            <param name="yVals"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSegment.SetData(System.Collections.Generic.List{System.Double},System.Collections.Generic.IList{System.Double},System.Double,System.Double)">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the 3DChart but it can be overriden by
            any derived class.
            </summary>
            <param name="xValues"></param>
            <param name="yValues"></param>
            <param name="startDepth"></param>
            <param name="endDepth"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSegment.SetData(System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},System.Windows.Media.Brush)">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="xVals"></param>
            <param name="yVals"></param>
            <param name="strokeBrush"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSegment.SetData(System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},System.Windows.Media.Brush,System.Int32)">
            <summary>
            Sets the values for Technical indicator segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="xVals"></param>
            <param name="yVals"></param>
            <param name="strokeBrush"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSegment.SetData(System.Double[])">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="Values"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSegment.SetData(System.Collections.Generic.List{System.Windows.Point})">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="AreaPoints"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSegment.SetData(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point)">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="point1"></param>
            <param name="point2"></param>
            <param name="point3"></param>
            <param name="point4"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSegment.SetData(System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double})">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="xValues"></param>
            <param name="yHiValues"></param>
            <param name="yLowValues"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSegment.SetData(System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double})">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="xValues"></param>
            <param name="yHiValues"></param>
            <param name="yLowValues"></param>
            /// <param name="yOpenValues"></param>
            /// <param name="yCloseValues"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSegment.SetData(System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double})">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="x1Values"></param>
            <param name="y1Values"></param>
            <param name="x2Values"></param>
            /// <param name="y2Values"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSegment.SetData(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point)">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="leftpoint"></param>
            <param name="rightpoint"></param>
            <param name="toppoint"></param>
            <param name="bottompoint"></param>
            <param name="vercappoint"></param>
            <param name="horcappoint"></param>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSegment.SetData(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean)">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="BottomLeft"></param>
            <param name="RightTop"></param>
            <param name="hipoint"></param>
            <param name="loPoint"></param>
            <param name="isBull"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSegment.SetData(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean)">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="hipoint"></param>
            <param name="lopoint"></param>
            <param name="sopoint"></param>
            <param name="eopoint"></param>
            <param name="scpoint"></param>
            <param name="ecpoint"></param>
            <param name="isBull"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSegment.IsSegmentSelected">
            <summary>
            Method used to check the current segment is selected index segment or not
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSegment.SetVisualBindings(System.Windows.Shapes.Shape)">
            <summary>
            Method Implementation for set  Binding to CgartSegments properties
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSegment.GetEnableSegmentSelection(System.Windows.Media.Brush)">
            <summary>
            Method used to check corresponding segment is selectable or not.
            </summary>
            <param name="segmentSelectionBrush"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSegment.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>
            retuns UIElement
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSegment.GetRenderedVisual">
            <summary>
            Gets the UIElement used for rendering this segment.
            </summary>
            <returns>reurns UIElement</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="transformer">Reresents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSegment.OnSizeChanged(System.Windows.Size)">
            <summary>
            Called whenever the segment's size changed. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSegment.AlignHiLoSegment(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            This method is used to change High and Low values,
            When the High value lesser than Open value or Low value greater than Close value.
            </summary>
            <param name="AlignHiLoSegment"></param>
            
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSegment.OnPropertyChanged(System.String)">
            <summary>
            Called when Property changed 
            </summary>
            <param name="name"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSegment.XRange">
            <summary>
            Contains the x-value range for the segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSegment.YRange">
            <summary>
            Contains the y-value range for the segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSegment.IsEmptySegmentInterior">
            <summary>
            Get or Set IsEmptySegmentinterior property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSegment.Item">
            <summary>
            Gets or Sets the data object that this segment belongs to.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSegment.Interior">
             <summary>
             Gets or Sets the brush to paint the interior of the segment.
             </summary>
            <remarks>
            By default,the interior value for a chart segment will be calculated and set automatically based on the <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.Palette"/> set.
             </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSegment.StrokeThickness">
            <summary>
            Gets or sets the stroke thickness value of the segment.
            </summary>
            <remarks>
            By default, this property inherits its value from <see cref="!:ChartSeriesBase.StrokeThickness"/> property.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSegment.StrokeDashArray">
            <summary>
            Gets or sets a collection of Double values that indicates the pattern of
            dashes and gaps that is used to outline shapes.</summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSegment.Stroke">
            <summary>
             Gets or Sets the stroke value of the segment.
            </summary>
             <remarks>
             By default, this property inherits its value from <see cref="!:ChartSeriesBase.Stroke"/> property.
             </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSegment.Series">
            <summary>
            ReadOnly property to get the value of underlying series of a chart segment.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.ChartSegment.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ColumnSegment3D">
            <summary>
            Represents chart column segment.
            </summary>
            <remarks>Class instance is created automatically by WinRT Chart building system.</remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ColumnSegment3D.Left">
            <summary>
            Variables declarations
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ColumnSegment3D.Right">
            <summary>
            Variables declarations
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnSegment3D.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Defines the Column Rectangle
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="endDepth"></param>
            <param name="series"></param>
            <param name="startDepth"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnSegment3D.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Called when instance created for ColumnSegment
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnSegment3D.SetData(System.Double[])">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="values"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnSegment3D.SetVisualBindings(System.Windows.Shapes.Shape)">
            <summary>
            method implementation for Set Bindings to properties in ColumnSegment
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnSegment3D.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>
            returns UI Element
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnSegment3D.GetRenderedVisual">
            <summary>
            Gets the UIElement used for rendering this segment.
            </summary>
            <returns>returns UIElement</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnSegment3D.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="transformer">Represents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnSegment3D.OnSizeChanged(System.Windows.Size)">
            <summary>
            Called whenever the segment's size changed. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="size"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ColumnSegment3D.Top">
            <summary>
            Gets or sets the top.
            </summary>
            <value>
            The top.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ColumnSegment3D.Bottom">
            <summary>
            Gets or sets the bottom.
            </summary>
            <value>
            The bottom.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ColumnSegment3D.XData">
            <summary>
            Get or Set XData property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ColumnSegment3D.YData">
            <summary>
            Get or Set YData property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ColumnSegment3D.Width">
            <summary>
            Get or Set Width property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ColumnSegment3D.Height">
            <summary>
            Get or Set Height property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ColumnSegment3D.RectX">
            <summary>
            Get or Set RectX property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ColumnSegment3D.RectY">
            <summary>
            Get or Set RectY property
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.DoughnutSegment3D">
            <summary>
            Class implementation for DoughnutSegment3D
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.PieSegment3D">
            <summary>
            Class implementation for PieSegment3D
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSegment3D.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.PieSegment3D"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSegment3D.#ctor(Syncfusion.UI.Xaml.Charts.ChartSeries3D,Syncfusion.UI.Xaml.Charts.Vector3D,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.PieSegment3D"/> class.
            </summary>
            <param name="series">The series.</param>
            <param name="center">The center.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="height">The height.</param>
            <param name="r">The r.</param>
            <param name="i">The i.</param>
            <param name="y">The y.</param>
            <param name="insideRadius">The inside radius.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSegment3D.CreateSector">
            <summary>
            Creates the sector.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PieSegment3D.ActualStartValue">
            <summary>
            Gets or sets the actual start value.
            </summary>
            <value>
            The actual start value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PieSegment3D.ActualEndValue">
            <summary>
            Gets or sets the actual end value.
            </summary>
            <value>
            The actual end value.
            </value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoughnutSegment3D.#ctor(Syncfusion.UI.Xaml.Charts.ChartSeries3D,Syncfusion.UI.Xaml.Charts.Vector3D,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.DoughnutSegment3D"/> class.
            </summary>
            <param name="series">The series.</param>
            <param name="center">The center.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="height">The height.</param>
            <param name="r">The r.</param>
            <param name="i">The i.</param>
            <param name="y">The y.</param>
            <param name="insideRadius">The inside radius.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.Polygon3D">
            <summary>
            Represents chart polygon to create any shapes in 3D.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Polygon3D.Epsilon">
            <summary>
            The epsilon
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Polygon3D.d">
            <summary>
            The constant of plane.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Polygon3D.normal">
            <summary>
            The normal of plane.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Polygon3D.VectorPoints">
            <summary>
            Points of polygon.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Polygon3D.#ctor(Syncfusion.UI.Xaml.Charts.Vector3D,Syncfusion.UI.Xaml.Charts.Vector3D,Syncfusion.UI.Xaml.Charts.Vector3D)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.Polygon3D"/> class.
            </summary>
            <param name="v1">The v1.</param>
            <param name="v2">The v2.</param>
            <param name="v3">The v3.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Polygon3D.#ctor(Syncfusion.UI.Xaml.Charts.Vector3D[])">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.Polygon3D"/> class.
            </summary>
            <param name="points">The points.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Polygon3D.#ctor(Syncfusion.UI.Xaml.Charts.Vector3D[],System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.Polygon3D"/> class.
            </summary>
            <param name="points">The points.</param>
            <param name="index"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Polygon3D.#ctor(Syncfusion.UI.Xaml.Charts.Vector3D,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.Polygon3D"/> class.
            </summary>
            <param name="normal">The normal.</param>
            <param name="d">The d.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Polygon3D.#ctor(Syncfusion.UI.Xaml.Charts.Vector3D[],System.Windows.DependencyObject,System.Int32,System.Windows.Media.Brush,System.Double,System.Windows.Media.Brush,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.Polygon3D"/> class.
            </summary>
            <param name="points">The points.</param>
            <param name="tag"></param>
            <param name="index"></param>
            <param name="stroke"></param>
            <param name="strokeThickness"></param>
            <param name="fill"></param>
            <param name="opacity"></param>
            <param name="name"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Polygon3D.#ctor(Syncfusion.UI.Xaml.Charts.Vector3D[],System.Windows.DependencyObject,System.Int32,System.Windows.Media.Brush,System.Double,System.Windows.Media.Brush)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.Polygon3D"/> class.
            </summary>
            <param name="points">The points.</param>
            <param name="tag"></param>
            <param name="index"></param>
            <param name="stroke"></param>
            <param name="strokeThickness"></param>
            <param name="fill"></param>
            <param name="opacity"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Polygon3D.#ctor(Syncfusion.UI.Xaml.Charts.Vector3D[],Syncfusion.UI.Xaml.Charts.Polygon3D)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.Polygon3D"/> class.
            </summary>
            <param name="points">The points.</param>
            <param name="polygon">The plane.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Polygon3D.CreateUIElement(Syncfusion.UI.Xaml.Charts.Vector3D,System.Windows.UIElement,System.Double,System.Double)">
            <summary>
            Creates the UI element.
            </summary>
            <param name="position">The position.</param>
            <param name="element">The element.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Polygon3D.UpdateBox(Syncfusion.UI.Xaml.Charts.Polygon3D[],Syncfusion.UI.Xaml.Charts.Vector3D,Syncfusion.UI.Xaml.Charts.Vector3D,System.Windows.Media.Brush,System.Windows.Visibility)">
            <summary>
            Updates the box.
            </summary>
            <param name="plan">The plan.</param>
            <param name="v1">The v1.</param>
            <param name="v2">The v2.</param>
            <param name="stroke">The stroke.</param>
            <param name="visibility">The visibility.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Polygon3D.CreateLine(System.Windows.Shapes.Line,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates the line.
            </summary>
            <param name="line">The line.</param>
            <param name="x1">The x1.</param>
            <param name="y1">The y1.</param>
            <param name="x2">The x2.</param>
            <param name="y2">The y2.</param>
            <param name="depth">The depth.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Polygon3D.Test">
            <summary>
            Tests this instance to the existing.
            </summary>
            <returns>Indicates whether Normal of Plane is valid or Not.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Polygon3D.GetPoint(System.Double,System.Double)">
            <summary>
            Gets the point on the plane.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns>Returns Vector3D instance.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Polygon3D.GetPoint(Syncfusion.UI.Xaml.Charts.Vector3D,Syncfusion.UI.Xaml.Charts.Vector3D)">
            <summary>
            Gets the point of intersect ray with plane.
            </summary>
            <param name="position">The pos.</param>
            <param name="ray">The ray.</param>
            <returns>Returns Vector3D instance.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Polygon3D.GetNormal(Syncfusion.UI.Xaml.Charts.Matrix3D)">
            <summary>
            Gets the normal.
            </summary>
            <param name="transform">The transform.</param>
            <returns>Returns Vector3D instance.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Polygon3D.Transform(Syncfusion.UI.Xaml.Charts.Matrix3D)">
            <summary>
            Transforms by the specified <see cref="T:Syncfusion.UI.Xaml.Charts.Matrix3D"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Polygon3D.Draw(System.Windows.Controls.Panel)">
            <summary>
            Draws to the specified <see cref="P:Syncfusion.UI.Xaml.Charts.Polygon3D.Graphics3D"/>.
            </summary>
            <param name="panel"></param>
            <returns>Return ChartRegion.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Polygon3D.CalcNormal(Syncfusion.UI.Xaml.Charts.Vector3D,Syncfusion.UI.Xaml.Charts.Vector3D,Syncfusion.UI.Xaml.Charts.Vector3D)">
            <summary>
            Calculates the normal.
            </summary>
            <param name="v1">The v1.</param>
            <param name="v2">The v2.</param>
            <param name="v3">The v3.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Polygon3D.Normal">
            <summary>
            Gets the normal.
            </summary>
            <value>The normal.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Polygon3D.A">
            <summary>
            Gets the A component.
            </summary>
            <value>The A component.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Polygon3D.B">
            <summary>
            Gets the B component.
            </summary>
            <value>The B component.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Polygon3D.C">
            <summary>
            Gets the C component.
            </summary>
            <value>The C component.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Polygon3D.D">
            <summary>
            Gets the D component.
            </summary>
            <value>The D component.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Polygon3D.Points">
            <summary>
            Gets the points of polygon.
            </summary>
            <value>The points.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Polygon3D.Element">
            <summary>
            Gets or sets the element.
            </summary>
            <value>
            The element.
            </value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.UIElement3D">
            <summary>
            Used to plot any UIElement in 3D view.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.UIElement3D.#ctor(System.Windows.UIElement,Syncfusion.UI.Xaml.Charts.Vector3D[])">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.UIElement3D"/> class.
            </summary>
            <param name="element">The element.</param>
            <param name="points">The points.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.UIElement3D.Draw(System.Windows.Controls.Panel)">
            <summary>
            Draws to the specified <see cref="T:Syncfusion.UI.Xaml.Charts.Graphics3D"/>.
            </summary>
            <param name="panel"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.PolyLine3D">
            <summary>
            Used to draw line in 3D view.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PolyLine3D.#ctor(System.Windows.Shapes.Path,System.Collections.Generic.List{Syncfusion.UI.Xaml.Charts.Vector3D})">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.Line3D"/> class.
            </summary>
            <param name="element">The element.</param>
            <param name="points">The points.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PolyLine3D.Draw(System.Windows.Controls.Panel)">
            <summary>
            Draws to the specified <see cref="T:Syncfusion.UI.Xaml.Charts.Graphics3D"/>.
            </summary>
            <param name="panel"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.Line3D">
            <summary>
            Used to draw line in 3D view.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Line3D.#ctor(System.Windows.UIElement,Syncfusion.UI.Xaml.Charts.Vector3D[])">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.Line3D"/> class.
            </summary>
            <param name="element">The element.</param>
            <param name="points">The points.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Line3D.Draw(System.Windows.Controls.Panel)">
            <summary>
            Draws to the specified <see cref="T:Syncfusion.UI.Xaml.Charts.Graphics3D"/>.
            </summary>
            <param name="panel"></param>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ScatterSegment3D.ScatterWidthProperty">
            <summary>
            Using a DependencyProperty as the backing store for ScatterWidth.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ScatterSegment3D.ScatterHeightProperty">
            <summary>
            Using a DependencyProperty as the backing store for Radius.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ScatterSegment3D.ScatterWidth">
            <summary>
            Gets or Sets scatter segment’s width.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ScatterSegment3D.ScatterHeight">
            <summary>
            Gets or Sets scatter segment’s height.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ScatterSegment3D.XData">
            <summary>
            Get or Set XData property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ScatterSegment3D.YData">
            <summary>
            Get or Set YData property
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.StackingColumnSegment3D">
            <summary>
            Represents chart stacking column segment.
            </summary>
            <remarks>Class instance is created automatically by WINRT Chart building system.</remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.StackingColumnSeries3D"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingColumnSegment3D.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Called when instance created for StackingColumnSegment
            </summary>
            <param name="x1">The x1.</param>
            <param name="y1">The y1.</param>
            <param name="x2">The x2.</param>
            <param name="y2">The y2.</param>
            <param name="startDepth">The start depth.</param>
            <param name="endDepth">The end depth.</param>
            <param name="series">The series.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingColumnSegment3D.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="transformer">Represents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Annotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.Annotation"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Annotation.OnTextEditingMode(System.Windows.Controls.ContentControl)">
            <summary>
            Replace the textblock to textbox while editing text
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Annotation.InternalHorizontalAlignmentProperty">
            <summary>
            The horizontal alignment property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Annotation.InternalVerticalAlignmentProperty">
            <summary>
            The vertical alignment property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Annotation.InternalVisibilityProperty">
            <summary>
            The vertical alignment property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Annotation.TextProperty">
            <summary>
            The text property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Annotation.ContentTemplateProperty">
            <summary>
            The text template property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Annotation.EnableClippingProperty">
            <summary>
            The EnableClipping property is used to restrict the annotation clipping out of axis
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Annotation.ShowToolTipProperty">
            <summary>
            The ShowToolTip property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Annotation.ToolTipContentProperty">
            <summary>
            The ToolTipContent property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Annotation.ToolTipShowDurationProperty">
            <summary>
            The ToolTipContent property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Annotation.ToolTipTemplateProperty">
            <summary>
            The ToolTipTemplate property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Annotation.ToolTipPlacementProperty">
            <summary>
            The ToolTipPlacement property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Annotation.CoordinateUnitProperty">
            <summary>
            The coordinate unit property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Annotation.XAxisNameProperty">
            <summary>
            The X axis name property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Annotation.YAxisNameProperty">
            <summary>
            The Y axis name property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Annotation.X1Property">
            <summary>
            The x1 property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Annotation.FontSizeProperty">
            <summary>
            The font size property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Annotation.FontFamilyProperty">
            <summary>
            The font family property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Annotation.FontStretchProperty">
            <summary>
            The font stretch property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Annotation.FontStyleProperty">
            <summary>
            The font style property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Annotation.FontWeightProperty">
            <summary>
            The font weight property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Annotation.ForegroundProperty">
            <summary>
            The foreground property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Annotation.Y1Property">
            <summary>
            The y1 property
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Annotation.GetRenderedAnnotation">
            <summary>
            Gets the rendered annotation.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Annotation.GetClippingValues(System.Double,Syncfusion.UI.Xaml.Charts.ChartAxis)">
            <summary>
            This method is used to modify the value for clipping out of axis
            </summary>
            <param name="value"></param>
            <param name="axis"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.Annotation.UpdateAnnotation">
            <summary>
            Updates the annotation.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.Annotation.Selected">
            <summary>
            Occurs when Syncfusion.UI.Xaml.Charts.Annotation becomes selected.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.Annotation.UnSelected">
            <summary>
            Occurs when Syncfusion.UI.Xaml.Charts.Annotation becomes unselected.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Annotation.InternalHorizontalAlignment">
            <summary>
            Gets or Sets the HorizontalAlignment for Annotation
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Annotation.InternalVerticalAlignment">
            <summary>
            Gets or Sets the VerticalAlignment for the Annotation
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Annotation.InternalVisibility">
            <summary>
            Gets or Sets the VerticalAlignment for the Annotation
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Annotation.Text">
            <summary>
            Gets or Sets the description text for Annotation
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Annotation.EnableEditing">
            <summary>
            Gets or Sets a value indicating whether [enable text editing]
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Annotation.ContentTemplate">
            <summary>
            Gets or sets the text template.
            </summary>
            <value>
            The text template.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Annotation.EnableClipping">
            <summary>
            Gets or Sets the EnableClipping for Annotation
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Annotation.ShowToolTip">
            <summary>
            Gets or sets the ShowToolTip value to enable or disable the tooltip view in annotation.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Annotation.ToolTipContent">
            <summary>
            Gets or sets the ToolTipContent to view in annoatation tooltip.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Annotation.ToolTipShowDuration">
            <summary>
            Gets or sets the ToolTipShowDuration(MilliSeconds). It's to mention the duration of annotation tooltip viewing.  
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Annotation.ToolTipTemplate">
            <summary>
            Gets or sets the ToolTipTemplate for the annotation tooltip.
            </summary>
            <value>
            The data template.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Annotation.ToolTipPlacement">
            <summary>
            Gets or sets the ToolTipPlacement value to place the tooltip in different position.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Annotation.CoordinateUnit">
            <summary>
            Gets or Sets the Annotation Drawing Mode
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Annotation.XAxisName">
            <summary>
            Gets or Sets the Which axis attached to XAxis of Annoation when Annotation CoordinateUnit is Axis
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Annotation.YAxisName">
            <summary>
            Gets or Sets the Which axis attached to YAxis of Annoation when Annotation CoordinateUnit is Axis
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Annotation.X1">
            <summary>
            Gets or Sets the X1 position of Annoation
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Annotation.Y1">
            <summary>
            Gets or Sets the Y1 position of Annoation
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Annotation.FontSize">
            <summary>
            Gets or sets the size of the font.
            </summary>
            <value>
            The size of the font.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Annotation.FontFamily">
            <summary>
            Gets or sets the font family.
            </summary>
            <value>
            The font family.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Annotation.FontStretch">
            <summary>
            Gets or sets the font stretch.
            </summary>
            <value>
            The font stretch.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Annotation.FontStyle">
            <summary>
            Gets or sets the font style.
            </summary>
            <value>
            The font style.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Annotation.FontWeight">
            <summary>
            Gets or sets the font weight.
            </summary>
            <value>
            The font weight.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Annotation.Foreground">
            <summary>
            Gets or sets the foreground.
            </summary>
            <value>
            The foreground.
            </value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.AnnotationDragDeltaEventArgs">
             <summary>
            Class implementation for Annotation DragDelta/ResizeDelta event arguments
             </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.AnnotationDragCompletedEventArgs">
             <summary>
            Class implementation for Annotation DragCompleted/ResizeCompleted event arguments
             </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.Position">
            <summary>
            Class implementation for Annotation positioning points 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AnnotationManager.RaiseSelectionChanged">
            <summary>
            Method used to call Selected/UnSelected event handler
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AnnotationManager.SetPosition(Syncfusion.UI.Xaml.Charts.Position,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Method used to set annotation position
            </summary>
            <param name="position"></param>
            <param name="_x1"></param>
            <param name="_x2"></param>
            <param name="_y1"></param>
            <param name="_y2"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AnnotationManager.RaiseDragStarted">
            <summary>
            Method used to call DragStarted event handler
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AnnotationManager.RaiseDragDelta">
            <summary>
            Method used to call DragDelta event handler
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AnnotationManager.RaiseDragCompleted">
            <summary>
            Method used to call DragCompleted event handler
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AnnotationManager.ShowToolTip(System.Windows.Point,System.Object)">
            <summary>
            Enables the tool tip in the visual.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AnnotationManager.GetToolTipPosition(System.Windows.Point,Syncfusion.UI.Xaml.Charts.Annotation)">
            <summary>
            Generate the position of the tooltip according the tooltip placement.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AnnotationManager.SelectedAnnotation">
            <summary>
            Gets or Sets the Selected Annotation
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.HorizontalTextAlignmentProperty">
            <summary>
            The horizontal text alignment property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.DraggingModeProperty">
            <summary>
            The dragging path property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.CanDragProperty">
            <summary>
            The CanDrag property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.CanResizeProperty">
            <summary>
            The CanDrag property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.VerticalTextAlignmentProperty">
            <summary>
            The vertical text alignment property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.FillProperty">
            <summary>
            The fill property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.Y2Property">
            <summary>
            The y2 property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.X2Property">
            <summary>
            The x2 property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.StrokeThicknessProperty">
            <summary>
            The stroke thickness property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.StrokeProperty">
            <summary>
            The stroke property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.StrokeDashArrayProperty">
            <summary>
            The stroke dash array property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.StrokeDashCapProperty">
            <summary>
            The stroke dash cap property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.StrokeDashOffsetProperty">
            <summary>
            The stroke dash offset property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.StrokeEndLineCapProperty">
            <summary>
            The stroke endline dash cap property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.StrokeLineJoinProperty">
            <summary>
            The stroke line join property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.StrokeMiterLimitProperty">
            <summary>
            The stroke miter limit property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.StrokeStartLineCapProperty">
            <summary>
            The stroke start line cap property
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.DragStarted">
            <summary>
            Occurs when annotation drag is started.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.DragDelta">
            <summary>
            Occurs when annotation dragging.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.DragCompleted">
            <summary>
            Occurs when annotation drag is completed.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.HorizontalTextAlignment">
            <summary>
            Gets or sets the horizontal text alignment.
            </summary>
            <value>
            The horizontal text alignment.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.DraggingMode">
            <summary>
            Gets or Sets the Annotation Dragging Path
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.CanDrag">
            <summary>
            Gets or Sets the CanDrag for Annotation
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.CanResize">
            <summary>
            Gets or Sets the CanDrag for Annotation
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.VerticalTextAlignment">
            <summary>
            Gets or sets the vertical text alignment.
            </summary>
            <value>
            The vertical text alignment.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.Fill">
            <summary>
            Gets or sets the fill.
            </summary>
            <value>
            The fill.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.Y2">
            <summary>
            Gets or Sets the Y2 Property for the ShapeAnnotation
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.X2">
            <summary>
            Gets or Sets the X2 Property for the ShapeAnnotation
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.StrokeThickness">
            <summary>
            Gets or sets the stroke thickness.
            </summary>
            <value>
            The stroke thickness.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.Stroke">
            <summary>
            Gets or sets the stroke.
            </summary>
            <value>
            The stroke.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.StrokeDashArray">
            <summary>
            Gets or sets the stroke dash array.
            </summary>
            <value>
            The stroke dash array.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.StrokeDashCap">
            <summary>
            Gets or sets the stroke dash cap.
            </summary>
            <value>
            The stroke dash cap.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.StrokeDashOffset">
            <summary>
            Gets or sets the stroke dash offset.
            </summary>
            <value>
            The stroke dash offset.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.StrokeEndLineCap">
            <summary>
            Gets or sets the stroke endline dash cap.
            </summary>
            <value>
            The stroke endline dash cap.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.StrokeLineJoin">
            <summary>
            Gets or sets the stroke line join.
            </summary>
            <value>
            The stroke line join.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.StrokeMiterLimit">
            <summary>
            Gets or sets the stroke miter limit.
            </summary>
            <value>
            The stroke miter limit.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ShapeAnnotation.StrokeStartLineCap">
            <summary>
            Gets or sets the stroke start line cap.
            </summary>
            <value>
            The stroke start line cap.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SolidShapeAnnotation.AngleProperty">
            <summary>
            The angle property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SolidShapeAnnotation.ResizingModeProperty">
            <summary>
            The resizing path property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SolidShapeAnnotation.Angle">
            <summary>
            Gets or Sets the Rotation Angle for Annotation
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SolidShapeAnnotation.ResizingMode">
            <summary>
            Gets or Sets the Annotation Re-sizing Path
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LineAnnotation.ShowLineProperty">
            <summary>
            The ShowLine property
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineAnnotation.AddLine">
            <summary>
            Add the line into Canvas
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineAnnotation.RemoveLine">
            <summary>
            Remove the line from Canvas
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LineAnnotation.LineAnnotionCapProperty">
            <summary>
            The line cap alignment property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LineAnnotation.ShowLine">
            <summary>
            Gets or sets the ShowLine
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LineAnnotation.LineCap">
            <summary>
            Gets or sets the line cap
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.StraightLineAnnotation.ShowAxisLabelProperty">
            <summary>
            The ShowAxisLabel property
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.StraightLineAnnotation.DragStarted">
            <summary>
            Occurs when annotation drag is started.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.StraightLineAnnotation.DragDelta">
            <summary>
            Occurs while dragging the annotation.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.StraightLineAnnotation.DragCompleted">
            <summary>
            Occurs when annotation drag is completed.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.StraightLineAnnotation.Selected">
            <summary>
            Occurs when Syncfusion.UI.Xaml.Charts.Annotation becomes selected.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.StraightLineAnnotation.UnSelected">
            <summary>
            Occurs when Syncfusion.UI.Xaml.Charts.Annotation becomes unselected.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StraightLineAnnotation.AxisLabelTemplate">
            <summary>
            Gets or Sets Template For Axis Label View.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StraightLineAnnotation.ShowAxisLabel">
            <summary>
            Gets or sets the ShowAxisLabel
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ImageAnnotation.AngleProperty">
            <summary>
            The angle property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ImageAnnotation.ImageSourceProperty">
            <summary>
            The image source property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ImageAnnotation.Y2Property">
            <summary>
            The y2 property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ImageAnnotation.X2Property">
            <summary>
            The x2 property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ImageAnnotation.HorizontalTextAlignmentProperty">
            <summary>
            The horizontal text alignment property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ImageAnnotation.VerticalTextAlignmentProperty">
            <summary>
            The vertical text alignment property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ImageAnnotation.Angle">
            <summary>
            Gets or Sets the Rotation Angle for Annotation
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ImageAnnotation.ImageSource">
            <summary>
            Gets or sets the image source.
            </summary>
            <value>
            The image source.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ImageAnnotation.Y2">
            <summary>
            Gets or Sets the Y2 Property for the imageAnnotation
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ImageAnnotation.X2">
            <summary>
            Gets or Sets the X2 Property for the imageAnnotation
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ImageAnnotation.HorizontalTextAlignment">
            <summary>
            Gets or sets the horizontal text alignment.
            </summary>
            <value>
            The horizontal text alignment.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ImageAnnotation.VerticalTextAlignment">
            <summary>
            Gets or sets the vertical text alignment.
            </summary>
            <value>
            The vertical text alignment.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.TextAnnotation.AngleProperty">
            <summary>
            The angle property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.TextAnnotation.Angle">
            <summary>
            Gets or Sets the Rotation Angle for Annotation
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.VerticalLineAnnotation.HorizontalTextAlignmentProperty">
            <summary>
            The horizontal text alignment property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.VerticalLineAnnotation.VerticalTextAlignmentProperty">
            <summary>
            The vertical text alignment property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.VerticalLineAnnotation.HorizontalTextAlignment">
            <summary>
            Gets or sets the horizontal text alignment.
            </summary>
            <value>
            The horizontal alignment.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.VerticalLineAnnotation.VerticalTextAlignment">
            <summary>
            Gets or sets the vertical text alignment.
            </summary>
            <value>
            The vertical alignment.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.ZoomPositionProperty">
            <summary>
            Using a DependencyProperty as the backing store for ZoomPosition.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.ZoomFactorProperty">
            <summary>
            Using a DependencyProperty as the backing store for ZoomFactor.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>. In simplest terms, this means the method is called just before a UI element displays in an application. For more information, see Remarks.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.CalculateVisibleRange(System.Windows.Size)">
            <summary>
            Calculates the visible range.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.ZoomPosition">
            <summary>
            Gets or Sets zoom position. Value must fall within 0 to 1. It determines starting value of visible range
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.ActualZoomFactor">
            <summary>
            Gets or Sets zoom factor. Value must fall within 0 to 1. It determines delta of visible range.
            </summary>
            
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.ZoomFactor">
            <summary>
            Gets or Sets zoom factor. Value must fall within 0 to 1. It determines delta of visible range.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.IncludeStripLineRange">
            <summary>
            Gets or sets the value , which decides whether StripLine range to be included in axis or not.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.StripLines">
            <summary>
            Gets or sets the strip lines.
            </summary>
            <value>
            The strip lines.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.EnableScrollBarResizing">
            <summary>
            Gets or sets a value indicating whether [enable scroll bar resizing].
            </summary>
            <value>
            <c>true</c> if [enable scroll bar resizing]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.EnableScrollBar">
            <summary>
            Gets or Sets a value that determines whether to enable or disable scroll bar.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.DeferredScrolling">
            <summary>
            Gets or Sets a value that determines whether to defer zooming.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxisBase2D.EnableTouchMode">
            <summary>
            Gets or Sets the EnableTouchMode for the resizable scroll bar.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DateTimeCategoryAxis.IntervalProperty">
            <summary>
             Using a DependencyProperty as the backing store for Interval.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeCategoryAxis.OnIntervalChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when Interval property changed
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeCategoryAxis.CalculateActualInterval(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Windows.Size)">
            <summary>
            Calculates actual interval
            </summary>
            <param name="range"></param>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeCategoryAxis.GenerateVisibleLabels">
            <summary>
            Method implementation for Create VisibleLabels for DateTime axis
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeCategoryAxis.GetLabelContent(System.Int32,Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Return object value from the given double value
            </summary>
            <param name="position"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeCategoryAxis.GetLabelContent(System.Double)">
            <summary>
            Method implementation for Get LabelContent for given position
            </summary>
            <param name="position"></param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DateTimeCategoryAxis.Interval">
            <summary>
            Get or Set IntervalProperty
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CategoryAxisHelper.ApplyRangePadding(Syncfusion.UI.Xaml.Charts.ChartAxis,Syncfusion.UI.Xaml.Charts.DoubleRange,System.Double,Syncfusion.UI.Xaml.Charts.LabelPlacement)">
            <summary>
            Apply padding based on interval
            </summary>
            <param name="axis"></param>
            <param name="range"></param>
            <param name="interval"></param>
            <param name="labelPlacement"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CategoryAxisHelper.GetLabelContent(Syncfusion.UI.Xaml.Charts.ChartAxis,System.Double)">
            <summary>
            Method implementation for Get LabelContent for given position
            </summary>
            <param name="axis"></param>
            <param name="position"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CategoryAxisHelper.GenerateVisibleLabels(Syncfusion.UI.Xaml.Charts.ChartAxis,Syncfusion.UI.Xaml.Charts.LabelPlacement)">
            <summary>
            Method implementation for Generate Visiblie labels for CategoryAxis
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CategoryAxisHelper.CalculateActualInterval(Syncfusion.UI.Xaml.Charts.ChartAxis,Syncfusion.UI.Xaml.Charts.DoubleRange,System.Windows.Size,System.Object)">
            <summary>
            Calculates actual interval
            </summary>
            <param name="axis"></param>
            <param name="range"></param>
            <param name="availableSize"></param>
            <param name="interval"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxisHelper.GenerateVisibleLabels(Syncfusion.UI.Xaml.Charts.ChartAxisBase2D,System.Object,System.Object,Syncfusion.UI.Xaml.Charts.DateTimeIntervalType)">
            <summary>
            Generates the visible labels.
            </summary>
            <param name="axis">The axis.</param>
            <param name="intervalType">Type of the interval.</param>
            Method implementation for Create VisibleLabels for DateTime axis
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxisHelper.GenerateVisibleLabels3D(Syncfusion.UI.Xaml.Charts.ChartAxis,System.Object,System.Object,Syncfusion.UI.Xaml.Charts.DateTimeIntervalType)">
            <summary>
            Generates the visible labels3D.
            </summary>
            <param name="axis">The axis.</param>
            <param name="intervalType">Type of the interval.</param>
            Method implementation for Create VisibleLabels for DateTime axis
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxisHelper.CalculateVisibleRange(Syncfusion.UI.Xaml.Charts.ChartAxisBase2D,System.Windows.Size,System.Double)">
            <summary>
            Calculates the visible range.
            </summary>
            <param name="axis">The axis.</param>
            <param name="availableSize">Size of the available.</param>
            <param name="interval">The interval.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxisHelper.ApplyRangePadding(Syncfusion.UI.Xaml.Charts.ChartAxis,Syncfusion.UI.Xaml.Charts.DoubleRange,System.Double,Syncfusion.UI.Xaml.Charts.DateTimeRangePadding,Syncfusion.UI.Xaml.Charts.DateTimeIntervalType)">
            <summary>
            Apply padding based on interval
            </summary>
            <param name="axis"></param>
            <param name="range"></param>
            <param name="interval"></param>
            <param name="rangePadding"></param>
            <param name="intervalType"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxisHelper.CalculateNiceInterval(Syncfusion.UI.Xaml.Charts.ChartAxis,Syncfusion.UI.Xaml.Charts.DoubleRange,System.Windows.Size)">
            <summary>
            Calculates nice interval
            </summary>
            <param name="axis"></param>
            <param name="actualRange"></param>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxisHelper.GenerateVisibleLabels(Syncfusion.UI.Xaml.Charts.ChartAxisBase2D,System.Object,System.Object,System.Object,System.Double)">
            <summary>
            Method implementation for Generate Labels in ChartAxis
            </summary>
            <param name="axis">The axis.</param>
            <param name="maximum">The maximum.</param>
            <param name="minimum">The minimum.</param>
            <param name="actualInterval">The actual interval.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxisHelper.GenerateVisibleLabels3D(Syncfusion.UI.Xaml.Charts.ChartAxis,System.Object,System.Object,System.Object,System.Double)">
            <summary>
            Method implementation for Generate Labels in ChartAxis3D
            </summary>
            <param name="axis">The axis.</param>
            <param name="maximum">The maximum.</param>
            <param name="minimum">The minimum.</param>
            <param name="actualInterval">The actual interval.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxisHelper.AddSmallTicksPoint(Syncfusion.UI.Xaml.Charts.ChartAxis,System.Double,System.Double,System.Double)">
            <summary>
            Method implementation for Add SmallTicks for axis
            </summary>
            <param name="axis">The axis.</param>
            <param name="position">The position.</param>
            <param name="logarithmicBase">The logarithmic base.</param>
            <param name="smallTicksPerInterval">The small ticks per interval.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxisHelper.OnMinMaxChanged(Syncfusion.UI.Xaml.Charts.ChartAxis,System.Object,System.Object,System.Double)">
            <summary>
            Called when [minimum maximum changed].
            </summary>
            <param name="axis">The axis.</param>
            <param name="minimum">The minimum.</param>
            <param name="maximum">The maximum.</param>
            <param name="logarithmicBase">The logarithmic base.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxisHelper.CalculateActualRange(Syncfusion.UI.Xaml.Charts.ChartAxis,Syncfusion.UI.Xaml.Charts.DoubleRange,System.Double)">
            <summary>
            Calculates actual range
            </summary>
            <param name="axis">The axis.</param>
            <param name="range">The range.</param>
            <param name="logarithmicBase">The logarithmic base.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxisHelper.CalculateVisibleRange(Syncfusion.UI.Xaml.Charts.ChartAxisBase2D,System.Windows.Size,System.Object)">
            <summary>
            Calculates the visible range.
            </summary>
            <param name="axis">The axis.</param>
            <param name="avalableSize">Size of the available.</param>
            <param name="interval">The interval.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.NumericalAxisHelper.GenerateVisibleLabels(Syncfusion.UI.Xaml.Charts.ChartAxisBase2D,System.Object,System.Object,System.Object,System.Double)">
            <summary>
            Method implementation for Generate Labels in ChartAxis
            </summary>
            <param name="axis">The axis.</param>
            <param name="smallTicksPerInterval">The small ticks per interval.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.NumericalAxisHelper.GenerateVisibleLabels3D(Syncfusion.UI.Xaml.Charts.ChartAxis,System.Object,System.Object,System.Object,System.Double)">
            <summary>
            Method implementation for Generate Labels in ChartAxis3D
            </summary>
            <param name="axis">The axis.</param>
            <param name="smallTicksPerInterval">The small ticks per interval.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.NumericalAxisHelper.OnMinMaxChanged(Syncfusion.UI.Xaml.Charts.ChartAxis,System.Object,System.Object)">
            <summary>
            Called when [minimum maximum changed].
            </summary>
            <param name="axis">The axis.</param>
            <param name="maximum">The maximum.</param>
            <param name="minimum">The minimum.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.NumericalAxisHelper.ApplyRangePadding(Syncfusion.UI.Xaml.Charts.ChartAxis,Syncfusion.UI.Xaml.Charts.DoubleRange,System.Double,Syncfusion.UI.Xaml.Charts.NumericalPadding)">
            <summary>
            Apply padding based on interval
            </summary>
            <param name="axis">The axis.</param>
            <param name="range">The range.</param>
            <param name="interval">The interval.</param>
            <param name="rangePadding">The range padding.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.NumericalAxisHelper.CalculateVisibleRange(Syncfusion.UI.Xaml.Charts.ChartAxisBase2D,System.Windows.Size,System.Object)">
            <summary>
            Calculates the visible range.
            </summary>
            <param name="axis">The axis.</param>
            <param name="avalableSize">Size of the available.</param>
            <param name="interval">The interval.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeAxisBaseHelper.AddSmallTicksPoint(Syncfusion.UI.Xaml.Charts.ChartAxis,System.Double,System.Double,System.Double)">
            <summary>
            Method implementation for Add smallTicks to axis
            </summary>
            <param name="axis">The axis.</param>
            <param name="position">The position.</param>
            <param name="interval">The interval.</param>
            <param name="smallTicksPerInterval">The small ticks per interval.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeAxisBaseHelper.GenerateVisibleLabels(Syncfusion.UI.Xaml.Charts.ChartAxis,System.Double)">
            <summary>
            Method implementation for Generate Labels in ChartAxis
            </summary>
            <param name="axis">The axis.</param>
            <param name="smallTicksPerInterval">The small ticks per interval.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TimeSpanAxisHelper.GenerateVisibleLabels(Syncfusion.UI.Xaml.Charts.ChartAxisBase2D,System.Object,System.Object,System.Object)">
            <summary>
            Generates the visible labels.
            </summary>
            <param name="axis">The axis.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TimeSpanAxisHelper.GenerateVisibleLabels3D(Syncfusion.UI.Xaml.Charts.ChartAxis,System.Object,System.Object,System.Object)">
            <summary>
            Generates the visible labels.
            </summary>
            <param name="axis">The axis.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TimeSpanAxisHelper.CalculateVisibleRange(Syncfusion.UI.Xaml.Charts.ChartAxisBase2D,System.Object,System.Windows.Size)">
            <summary>
            Calculates the visible range.
            </summary>
            <param name="axis">The axis.</param>
            <param name="interval">The interval.</param>
            <param name="avalableSize">Size of the available.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.BarSeries">
            <summary>
            BarSeries represents its datapoint using a set of horizontal rectangles.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.BarSegment"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ColumnSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.StackingBarSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.StackingColumnSeries"/> 
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.XyDataSeries">
            <summary>
            Class implementation for XyDataseries 
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.CartesianSeries">
            <summary>
            Class implementation for CartesianSeries
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.AdornmentSeries">
            <summary>
            Class implementation for AdornmentSeries
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartSeries">
            <summary>
            Class implementation for ChartSeries
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeries.StrokeProperty">
            <summary>
            Using a DependencyProperty as the backing store for Stroke.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeries.StrokeThicknessProperty">
            <summary>
            Using a DependencyProperty as the backing store for StrokeThickness.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeries.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>. In simplest terms, this means the method is called just before a UI element displays in an application. For more information, see Remarks.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeries.GetDataPointIndex(System.Double,System.Double)">
            <summary>
             This method used to get the SfChart data index at an SfChart co-ordinates
             </summary>
             <param name="index"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeries.GetDataPointIndex(System.Windows.Point)">
            <summary>
             This method used to get the chart data index at an SfChart co-ordinates
             </summary>
             <param name="index"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeries.GeneratePixels">
            <summary>
             This method used to generate bitmap segment pixels.
             </summary>
             <param name="mousePos"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeries.IsHitTestSeries">
            <summary>
            Method used to return the hittest series while mouse action.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeries.ConvertColor(System.Windows.Media.Color)">
            <summary>
            Method used to gets the byte value of given color.
            </summary>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeries.OnBitmapSelection(System.Collections.Generic.List{System.Int32},System.Windows.Media.Brush,System.Boolean)">
            <summary>
            Method is used to select/reset the bitmap segment.
            </summary>
            <param name="pixels"></param>
            <param name="brush"></param>
            <param name="isSelected"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeries.Area">
            <summary>
            Get or Set Area property 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeries.Stroke">
            <summary>
            Gets or Sets the brush to paint outline of the series.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeries.StrokeThickness">
            <summary>
            Gets or Sets stroke thickness for series.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.AdornmentSeries.AdornmentsInfoProperty">
            <summary>
            Identifies the AdornmentsInfo dependency property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AdornmentSeries.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>. In simplest terms, this means the method is called just before a UI element displays in an application. For more information, see Remarks.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AdornmentSeries.CreateSegments">
            <summary>
            An abstract method which will be called over to create segments.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AdornmentSeries.GeneratePoints">
            <summary>
            Method implementation  for GeneratePoints for Adornments
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AdornmentSeries.CreateAdornment(Syncfusion.UI.Xaml.Charts.AdornmentSeries,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Method implementation for Create Adornments
            </summary>
            <param name="series"></param>
            <param name="xVal"></param>
            <param name="yVal"></param>
            <param name="xPos"></param>
            <param name="yPos"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AdornmentSeries.AddColumnAdornments(System.Double[])">
            <summary>
            Method implementation for Add ColumnAdornments in Chart
            </summary>
            <param name="values"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AdornmentSeries.AddAdornmentAtXY(System.Double,System.Double,System.Int32)">
            <summary>
            Method implementation for Add Adornments at XY
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="pointindex"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AdornmentSeries.AddAreaAdornments(System.Collections.Generic.IList{System.Double}[])">
            <summary>
            Method implementation for Add AreaAdornments in ChartAdornments
            </summary>
            <param name="values"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AdornmentSeries.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when DataSource property changed 
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AdornmentSeries.ClearUnUsedAdornments(System.Int32)">
            <summary>
            Method implementation for Clear Unused Adornments
            </summary>
            <param name="startIndex"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AdornmentSeries.AdornmentsInfo">
            <summary>
            Gets or Sets ChartAdornmentInfo. This allows us to customize the appearance of a data point by displaying labels, shapes and connector lines.
            </summary>
            <value>
            The <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfo"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ISupportAxes2D.YAxis">
            <summary>
             Get or Set YAxis property
             </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ISupportAxes2D.XAxis">
            <summary>
            Get or Set XAxis property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CartesianSeries.XAxisProperty">
            <summary>
            Using a DependencyProperty as the backing store for XAxis.  This enables animation, styling, binding, etc... 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CartesianSeries.YAxisProperty">
            <summary>
            Using a DependencyProperty as the backing store for YAxis.  This enables animation, styling, binding, etc... 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CartesianSeries.OnYAxisChanged(Syncfusion.UI.Xaml.Charts.ChartAxis,Syncfusion.UI.Xaml.Charts.ChartAxis)">
            <summary>
            Called when instance created for YAxis Changed 
            </summary>
            <param name="oldAxis"></param>
            <param name="newAxis"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CartesianSeries.OnXAxisChanged(Syncfusion.UI.Xaml.Charts.ChartAxis,Syncfusion.UI.Xaml.Charts.ChartAxis)">
            <summary>
            Called when instance created for XAxis changed
            </summary>
            <param name="oldAxis"></param>
            <param name="newAxis"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CartesianSeries.OnVisibleRangeChanged(Syncfusion.UI.Xaml.Charts.VisibleRangeChangedEventArgs)">
            <summary>
            Called when VisibleRange property changed
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CartesianSeries.UpdateOnSeriesBoundChanged(System.Windows.Size)">
            <summary>
            Update series bound
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CartesianSeries.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>. In simplest terms, this means the method is called just before a UI element displays in an application. For more information, see Remarks.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CartesianSeries.CalculateSegments">
            <summary>
            Calculate Segments
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CartesianSeries.CreateTrendline">
            <summary>
            Create trend line for series
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CartesianSeries.Trendlines">
            <summary>
            Get or Set Trendlines property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CartesianSeries.XRange">
            <summary>
            Get or Set  XRange property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CartesianSeries.YRange">
            <summary>
            Get YRange property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CartesianSeries.XAxis">
            <summary>
            Get or Set XAxis property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CartesianSeries.YAxis">
            <summary>
            Get or Set YAxis property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CartesianSeries.IsTransposed">
            <summary>
            Gets or Sets Orientation for Chart Series 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.XyDataSeries.YBindingPathProperty">
            <summary>
            Using a DependencyProperty as the backing store for YBindingPath.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XyDataSeries.#ctor">
            <summary>
            Called when instance created for XyDataSeries 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XyDataSeries.GeneratePoints">
            <summary>
            Method for Generate Points for XYDataSeries
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XyDataSeries.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when DataSource property changed
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XyDataSeries.ValidateYValues">
            <summary>
            Validate the datapoints for segment implementation.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XyDataSeries.ReValidateYValues(System.Collections.Generic.List{System.Int32}[])">
            <summary>
            Validate the datapoints for segment implementation.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XyDataSeries.GetDataPoint(System.Int32)">
            <summary>
             This method used to get the chart data at an index.
             </summary>
             <param name="index"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XyDataSeries.GeneratePixels">
            <summary>
             This method used to get the chart data at an index.
             </summary>
             <param name="mousePos"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XyDataSeries.GenerateColumnPixels">
            <summary>
            This method is used to gets the selected data point segment pixel positions
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XyDataSeries.GenerateBarPixels">
            <summary>
            This method used to gets the selected data point segment pixel positions 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.XyDataSeries.YBindingPath">
            <summary>
            Gets or Sets the property path to retrieve y data from ItemsSource.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.XyDataSeries.YValues">
            <summary>
            Get or Set YValues
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.GetDataPointIndex(System.Windows.Point)">
            <summary>
             This method used to get the chart data index at an SfChart co-ordinates
             </summary>
             <param name="index"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.UpdateUnderLayingModel(System.String,System.Int32,System.Object)">
            <summary>
            Updates the under laying model.
            </summary>
            <param name="path">The path.</param>
            <param name="index">The index.</param>
            <param name="updatedData">The updated data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.RaiseDragStart(Syncfusion.UI.Xaml.Charts.ChartDragStartEventArgs)">
            <summary>
            Raises the drag start.
            </summary>
            <param name="args">The <see cref="T:Syncfusion.UI.Xaml.Charts.ChartDragStartEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.RaiseDragEnd(Syncfusion.UI.Xaml.Charts.ChartDragEndEventArgs)">
            <summary>
            Raises the drag end.
            </summary>
            <param name="args">The <see cref="T:Syncfusion.UI.Xaml.Charts.ChartDragEndEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.RaiseDragDelta(Syncfusion.UI.Xaml.Charts.DragDelta)">
            <summary>
            Raises the drag delta.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.RaiseDragEnter(Syncfusion.UI.Xaml.Charts.XySegmentEnterEventArgs)">
            <summary>
            Raises the drag enter.
            </summary>
            <param name="args">The <see cref="T:Syncfusion.UI.Xaml.Charts.XySegmentEnterEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.RaisePreviewEnd(Syncfusion.UI.Xaml.Charts.XyPreviewEndEventArgs)">
            <summary>
            Raises the preview end.
            </summary>
            <param name="args">The <see cref="T:Syncfusion.UI.Xaml.Charts.XyPreviewEndEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.ResetDraggingElements(System.String,System.Boolean)">
            <summary>
            Resets the dragging elements.
            </summary>
            <param name="reason">The reason.</param>
            <param name="dragEndEvent">if set to <c>true</c> [drag end event].</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.UpdateDragSpliter(System.Windows.FrameworkElement,Syncfusion.UI.Xaml.Charts.ChartSegment,System.String)">
            <summary>
            Updates the drag spliter.
            </summary>
            <param name="rect">The rect.</param>
            <param name="position">The position.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.ResetDragSpliter">
            <summary>
            Resets the drag spliter.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.ActivateDragging(System.Windows.Point,System.Object)">
            <summary>
            Activates the dragging.
            </summary>
            <param name="mousePos">The mouse position.</param>
            <param name="element">The element.</param>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.SegmentEnter">
            <summary>
            Occurs when [segment enter].
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.DragStart">
            <summary>
            Occurs when [drag start].
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.DragDelta">
            <summary>
            Occurs when [drag delta].
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.DragEnd">
            <summary>
            Occurs when [drag end].
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.XySegmentDraggingBase.PreviewDragEnd">
            <summary>
            Occurs when [preview drag end].
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ISegmentSelectable">
             <summary>
             Defines members and methods necessary to customize the display of selected segment in a <see cref="T:Syncfusion.UI.Xaml.Charts.ChartSeriesBase"/>.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ISegmentSelectable.SegmentSelectionBrush">
            <summary>
            Get or Set SegmentSelectionBrush property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ISegmentSelectable.SelectedIndex">
            <summary>
            Get or Set SelectionIndex property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.BarSeries.SegmentSelectionBrushProperty">
            <summary>
            Using a DependencyProperty as the backing store for SegmentSelectionBrush.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BarSeries.CreateSegments">
            <summary>
            Creates the segments of BarSeries.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BarSeries.SegmentSelectionBrush">
            <summary>
            Gets or Sets the selection brush
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BarSeries.SelectedIndex">
            <summary>
            Gets or Sets SelectedIndex.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BarSeries.CustomTemplate">
            <summary>
            Gets or sets the user defined data template for BarSeries
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartBehavior">
            <summary>
            ChartBehavior is an abstract base class for behaviors which can be added to <see cref="T:Syncfusion.UI.Xaml.Charts.SfChart"/> 
            </summary>
            <remarks>
            You can handle the <see cref="T:Syncfusion.UI.Xaml.Charts.SfChart"/> events directly in Chart behavior,which will be helpful in designing the Chart application in MVVM pattern.
            You can add a custom behavior to the <see cref="T:Syncfusion.UI.Xaml.Charts.SfChart"/> by inheriting a class from the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartBehavior"/>.
            You can also add ui elements to the Chart by making use of the top layer canvas returned from <see cref="P:Syncfusion.UI.Xaml.Charts.ChartBehavior.AdorningCanvas"/> property,which can be used to place the ui
            elements at desired positions in <see cref="T:Syncfusion.UI.Xaml.Charts.SfChart"/>.  
            </remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ChartCrossHairBehavior"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehavior.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehavior.OnLayoutUpdated">
            <summary>
            Called when layout updated
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehavior.DetachElement(System.Windows.UIElement)">
            <summary>
            Method implementation for DetachElement
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehavior.UpdateArea">
            <summary>
            Method implementation for UpdateArea in Chart
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehavior.GetYValuesBasedOnIndex(System.Double,Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Return collection of double values from the given ChartSeries
            </summary>
            <param name="x"></param>
            <param name="series"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehavior.AttachElements">
            <summary>
            Method implementation for AttachElements
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehavior.DetachElements">
            <summary>
            Method implementation for DetachElements
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehavior.OnSizeChanged(System.Windows.SizeChangedEventArgs)">
            <summary>
            Called when Size Changed
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehavior.OnDragEnter(System.Windows.DragEventArgs)">
            <summary>
            Called when Drag action enter into the ChartArea
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehavior.OnDragLeave(System.Windows.DragEventArgs)">
            <summary>
            Called when Drag action leave from the area
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehavior.OnDragOver(System.Windows.DragEventArgs)">
            <summary>
            Called when Drag action over in the Area
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehavior.OnDrop(System.Windows.DragEventArgs)">
            <summary>
            Called when drop the cursor in ChartArea
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehavior.OnGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Called when GotFocus in UIElement
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehavior.OnLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Called when Lost the focus in Chart
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehavior.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
            <summary>
            Called when MouseWheel on Chart
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehavior.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when MouseEnter in to Chart
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehavior.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when MouseLeave from Chart
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehavior.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when MouseMove in chart
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehavior.OnKeyUp(System.Windows.Input.KeyEventArgs)">
            <summary>
            Called when Pointer key up in Chart
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehavior.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Called when pointer key down in ChartArea
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehavior.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when MouseLeftButtonDown in Chart
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehavior.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when OnMouse
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehavior.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)">
            <summary>
            Called when ManipulationStarted
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehavior.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)">
            <summary>
            Called when ManipulationCompleted
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehavior.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)">
            <summary>
            Called when ManipulationDelta is changed
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartBehavior.AdorningCanvas">
            <summary>
            Gets the top layer Canvas.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartBehavior.BottomAdorningCanvas">
            <summary>
            Gets the bottom layer Canvas.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartBehavior.ChartArea">
            <summary>
            Gets the owner Chart
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartCrossHairBehavior">
            <summary>
            ChartCrossHairBehavior enables viewing of informations related to Chart coordinates, at mouse over position or at touch contact point inside a Chart.
            </summary>
            <remarks>
            ChartCrossHairBehavior displays a vertical line, horizontal line and a popup like control displaying information about the data point
            at touch contact point or at mouse over position. You can also customize the look of cross hair and information displayed in a label.
            </remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartCrossHairBehavior.VerticalAxisLabelAlignmentProperty">
            <summary>
            Using a DependencyProperty as the backing store for MyProperty.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartCrossHairBehavior.HorizontalAxisLabelAlignmentProperty">
            <summary>
             Using a DependencyProperty as the backing store for HorizontalAxisLabelAlignment.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartCrossHairBehavior.HorizontalLineStyleProperty">
            <summary>
            Using a DependencyProperty as the backing store for LineStyle.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartCrossHairBehavior.VerticalLineStyleProperty">
            <summary>
            Using a DependencyProperty as the backing store for LineStyle.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCrossHairBehavior.#ctor">
            <summary>
            Called when instance created for ChartCrossHairBehaviour
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCrossHairBehavior.AttachElements">
            <summary>
            Method implementation for AttachElements
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCrossHairBehavior.DetachElements">
            <summary>
            Method implementation for DetachElements
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCrossHairBehavior.OnSizeChanged(System.Windows.SizeChangedEventArgs)">
            <summary>
            Called when Size Changed
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCrossHairBehavior.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when MouseMove in chart
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCrossHairBehavior.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when MouseLeave from Chart
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCrossHairBehavior.OnLayoutUpdated">
            <summary>
            Called when chart layout updated from chart
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCrossHairBehavior.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when OnMouse
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCrossHairBehavior.SetPosition(System.Windows.Point)">
            <summary>
            Method implementation for Set positions for given point
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCrossHairBehavior.GenerateLabel(Syncfusion.UI.Xaml.Charts.ChartPointInfo,Syncfusion.UI.Xaml.Charts.ChartAxis)">
            <summary>
            Method implementation for GenerateLabel for axis
            </summary>
            <param name="pointInfo"></param>
            <param name="axis"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCrossHairBehavior.AddLabel(Syncfusion.UI.Xaml.Charts.ChartPointInfo,Syncfusion.UI.Xaml.Charts.ChartAlignment,Syncfusion.UI.Xaml.Charts.ChartAlignment,System.Windows.DataTemplate)">
            <summary>
            Method implementatin for 
            </summary>
            <param name="obj"></param>
            <param name="verticalAlignment"></param>
            <param name="horizontalAlignment"></param>
            <param name="template"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCrossHairBehavior.AddLabel(System.Object,Syncfusion.UI.Xaml.Charts.ChartAlignment,Syncfusion.UI.Xaml.Charts.ChartAlignment,System.Windows.DataTemplate,System.Double,System.Double)">
            <summary>
            Method implementation for add labels for CrossHair
            </summary>
            <param name="obj"></param>
            <param name="verticalAlignemnt"></param>
            <param name="horizontalAlignment"></param>
            <param name="template"></param>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCrossHairBehavior.AddElement(System.Windows.UIElement)">
            <summary>
            Method implementation for Add elements in UIElement
            </summary>
            <param name="element"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCrossHairBehavior.IsActivated">
            <summary>
            Get or Set IsActivated
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCrossHairBehavior.VerticalAxisLabelAlignment">
            <summary>
            Gets or Sets the alignment for the label appearing in horizontal axis.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCrossHairBehavior.HorizontalAxisLabelAlignment">
            <summary>
            Gets or Sets the alignment for the label appearing in vertical axis.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCrossHairBehavior.PointInfos">
            <summary>
            Gets the collection of ChartPointInfo
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCrossHairBehavior.HorizontalLineStyle">
             <summary>
            Gets or Sets the style for horizontal line.
             </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCrossHairBehavior.VerticalLineStyle">
             <summary>
            Gets or Sets the style for vertical line.
             </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior">
            <summary>
            ChartSelectionBehavior enables the selection of segments in a Chart.
            </summary>
            <remarks>
            The selected segment can be displayed with a different color specified using SegmentSelectionBrush property available in corresponding series.
            ChartSelectionBehavior is applicable only to certain series such as <see cref="T:Syncfusion.UI.Xaml.Charts.ColumnSeries"/>,<see cref="T:Syncfusion.UI.Xaml.Charts.BarSeries"/>,
            <see cref="T:Syncfusion.UI.Xaml.Charts.RangeColumnSeries"/>,<see cref="T:Syncfusion.UI.Xaml.Charts.StackingBarSeries"/>,<see cref="T:Syncfusion.UI.Xaml.Charts.StackingColumnSeries"/>,<see cref="T:Syncfusion.UI.Xaml.Charts.ScatterSeries"/>,
            <see cref="T:Syncfusion.UI.Xaml.Charts.BubbleSeries"/>,<see cref="T:Syncfusion.UI.Xaml.Charts.PieSeries"/>.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when OnMouse
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when MouseLeftButtonDown in Chart
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior.GetSeriesSelectionBrush(Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Method used to get selection brush for series selection.
            </summary>
            <param name="series"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when MouseMoved in Chart
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior.OnMouseMoveSelection(Syncfusion.UI.Xaml.Charts.ChartSeriesBase,System.Object)">
            <summary>
            Method used to set SelectedIndex while mouse move in segemnt/adornment.
            </summary>
            <param name="series"></param>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior.OnMouseDownSelection(Syncfusion.UI.Xaml.Charts.ChartSeriesBase,System.Object)">
            <summary>
            Method used to set SelectedIndex while mouse down in segemnt/adornemnt.
            </summary>
            <param name="series"></param>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior.OnBitmapSeriesMouseMoveSelection(System.Windows.FrameworkElement,System.Windows.Input.MouseEventArgs)">
            <summary>
            Method used to select bitmap series in mouse move
            </summary>
            <param name="element"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior.OnBitmapSeriesMouseDownSelection(System.Windows.FrameworkElement,System.Windows.Input.MouseEventArgs)">
            <summary>
            Method used to select bitmap series in mouse down
            </summary>
            <param name="element"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior.OnSelectionChanging(Syncfusion.UI.Xaml.Charts.ChartSelectionChangingEventArgs)">
            <summary>
            Invoked whenever the SelectionChanging event have raised.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior.OnSelectionChanged(Syncfusion.UI.Xaml.Charts.ChartSelectionChangedEventArgs)">
            <summary>
            Invoked whenever the SelectionChanged event have raised.
            </summary>
            <param name="args"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior">
            <summary>
            ChartTrackBallBehavior enables tracking of data points nearer to mouse over position or at touch contact point in a Chart.
            </summary>
            <remarks>
            ChartTrackBallBehavior displays a vertical line,a tracker ball symbol and a popup like control displaying information about the data point, at mouse move positions/ at touch contact positions over a <see cref="T:Syncfusion.UI.Xaml.Charts.ChartSeriesBase"/>.
            </remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.AxisLabelAlignmentProperty">
            <summary>
            Using a DependencyProperty as the backing store for AxisLabelAlignment.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.EnableAnimationProperty">
            <summary>
            Using a DependencyProperty as the backing store for EnableAnimation.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.LineStyleProperty">
            <summary>
             Using a DependencyProperty as the backing store for LineStyle.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.ShowLineProperty">
            <summary>
             Using a DependencyProperty as the backing store for ShowLine.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.LabelVerticalAlignmentProperty">
            <summary>
            Using a DependencyProperty as the backing store for VerticalAlignment.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.LabelHorizontalAlignmentProperty">
            <summary>
            Using a DependencyProperty as the backing store for HorizontalAlignment.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.ChartTrackBallStyleProperty">
            <summary>
            Using a DependencyProperty as the backing store for SymbolTemplate.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.#ctor">
            <summary>
            Called when instance created for ChartrackBallBehaviour
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.AttachElements">
            <summary>
            Method implementation for AttachElements
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.DetachElements">
            <summary>
            Method implementation for DetachElements
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.OnSizeChanged(System.Windows.SizeChangedEventArgs)">
            <summary>
            Called when Size Changed
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.ClearItems">
            <summary>
            Method implementation for Clearitems in ChartTrackBallbehaviour
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.OnLayoutUpdated">
            <summary>
            Called when layout updated in chart
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when MouseMove in chart
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when MouseLeave from Chart
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when OnMouse
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.OnPointerPositionChanged(System.Windows.Point)">
            <summary>
            Called when Pointer position Changed
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.OnPointerPositionChanged">
             <summary>
            Called when Pointer position Changed in Chart
             </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.GetYValuesBasedOnValue(System.Double,Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Return collection of double values from the given ChartSeries
            </summary>
            <param name="x"></param>
            <param name="series"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.GenerateLabels">
            <summary>
            Method implementation for GenerateLabels 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.AddLabel(Syncfusion.UI.Xaml.Charts.ChartPointInfo,Syncfusion.UI.Xaml.Charts.ChartAlignment,Syncfusion.UI.Xaml.Charts.ChartAlignment,System.Windows.DataTemplate)">
            <summary>
            Mathod implementation for Add labels in Chart
            </summary>
            <param name="obj"></param>
            <param name="verticalAlignment"></param>
            <param name="horizontalAlignment"></param>
            <param name="template"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.AddLabel(System.Object,Syncfusion.UI.Xaml.Charts.ChartAlignment,Syncfusion.UI.Xaml.Charts.ChartAlignment,System.Windows.DataTemplate,System.Double,System.Double)">
            <summary>
            Method implementation for AddLabels in Chart
            </summary>
            <param name="obj"></param>
            <param name="verticalAlignemnt"></param>
            <param name="horizontalAlignment"></param>
            <param name="template"></param>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.AddTrackBall(Syncfusion.UI.Xaml.Charts.ChartPointInfo)">
            <summary>
            Method implementation for Add Trackball to Corresponding chartpoint
            </summary>
            <param name="pointInfo"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.GenerateTrackBalls">
            <summary>
            Method implementation for generate TrackBalls
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.AddElement(System.Windows.UIElement)">
            <summary>
            Method implementation for Add UIElements 
            </summary>
            <param name="element"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.PointInfos">
            <summary>
            Gets the collection of ChartPointInfo.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.IsActivated">
            <summary>
            Get or Set IsActivated
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.AxisLabelAlignment">
            <summary>
            Gets or Sets the alignment for the label appearing in axis.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.EnableAnimation">
            <summary>
            Gets or Sets the EnableAnimation
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.LineStyle">
            <summary>
            Gets or Sets the line style
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.ShowLine">
            <summary>
            Gets or Sets a value indicating whether to show/hide line.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.LabelVerticalAlignment">
            <summary>
            Gets or Sets vertical alignment for label.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.LabelHorizontalAlignment">
            <summary>
            Gets or Sets horizontal alignment for label.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.ChartTrackBallStyle">
            <summary>
            Gets  or Sets the style for ChartTrackBallControl.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartTrackBallBehavior.UseSeriesPalette">
            <summary>
            Changes the color for the labels according to the series color.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartTrackBallColorConverter">
            <summary>
            Sets the fill color for the track ball control.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTrackBallColorConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the source data before passing it to the target for display in the UI.
            </summary>
            <returns>
            The value to be passed to the target dependency property.
            </returns>
            <param name="value">The source data being passed to the target.</param><param name="targetType">The <see cref="T:System.Type"/> of data expected by the target dependency property.</param><param name="parameter">An optional parameter to be used in the converter logic.</param><param name="culture">The culture of the conversion.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTrackBallColorConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the target data before passing it to the source object.  This method is called only in <see cref="F:System.Windows.Data.BindingMode.TwoWay"/> bindings.
            </summary>
            <returns>
            The value to be passed to the source object.
            </returns>
            <param name="value">The target data being passed to the source.</param><param name="targetType">The <see cref="T:System.Type"/> of data expected by the source object.</param><param name="parameter">An optional parameter to be used in the converter logic.</param><param name="culture">The culture of the conversion.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartTrackBallControl">
            <summary>
            Defines the control Template for the trackball
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTrackBallControl.#ctor(Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Called when instance created for ChartTrackBall
            </summary>
            <param name="series"></param>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTrackBallControl.SeriesProperty">
            <summary>
            Using a DependencyProperty as the backing store for Series.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTrackBallControl.StrokeProperty">
            <summary>
            Using a DependencyProperty as the backing store for Stroke.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTrackBallControl.StrokeThicknessProperty">
            <summary>
            Using a DependencyProperty as the backing store for StrokeThickness.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartTrackBallControl.Series">
            <summary>
            Get or Set Series property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartTrackBallControl.Stroke">
            <summary>
            Get or Set strokeproperty
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartTrackBallControl.StrokeThickness">
            <summary>
            Get or Set StrokeThickness property
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior">
            <summary>
            ChartZoomPanBehavior enables zooming and panning operations over a Chart.
            </summary>
            <remarks>
            Zooming and panning operations can be initiated and can be restored backed to
            the original position by performing zoom out operation or by enabling <see cref="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.ResetOnDoubleTap"/> property. 
            <para>Chart can also be zoomed, without adding ChartZoomPanBehavior, by
            specifying following properties <see cref="!:ChartAxis.ZoomFactor"/> and <see cref="!:ChartAxis.ZoomPosition"/> for the ChartAxis. By specifying zooming mode
            using <see cref="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.ZoomMode"/> property, zooming operation
            can be performed along horizontal or along vertical or along both directions in
            a Chart.</para>
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.#ctor">
            <summary>
            Called when instance created for ChartZoomPanBehavior
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.ZoomModeProperty">
            <summary>
            Using a DependencyProperty as the backing store for ZoomMode.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.EnablePanningProperty">
            <summary>
            Using a DependencyProperty as the backing store for EnablePanning.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.StrokeThicknessProperty">
            <summary>
            Using a DependencyProperty as the backing store for MyProperty.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.MaximumZoomLevelProperty">
            <summary>
            Using a DependencyProperty as the backing store for MaximumZoomLevel.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.StrokeProperty">
            <summary>
            Using a DependencyProperty as the backing store for Stroke.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.FillProperty">
            <summary>
            Using a DependencyProperty as the backing store for Fill.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.EnableSelectionZoomingProperty">
            <summary>
             Using a DependencyProperty as the backing store for EnableSelectionZooming.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.ResetOnDoubleTapProperty">
            <summary>
            Using a DependencyProperty as the backing store for ResetOnDoubleTap.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.EnableMouseWheelZoomingProperty">
            <summary>
            Using a DependencyProperty as the backing store for EnableMouseWheelZooming.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.AttachElements">
            <summary>
            Method implementation for AttachElements
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when MouseLeftButtonDown in Chart
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when MouseMove in chart
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.RaiseSelectionZoomDeltaEvent">
            <summary>
            Called when selection zooming occurs.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when MouseLeave from Chart
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when OnMouse
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)">
            <summary>
            Called when ManipulationStarted
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)">
            <summary>
            Called when ManipulationDelta is changed
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.RaisePanChangingEvent(Syncfusion.UI.Xaml.Charts.ChartAxisBase2D,System.Double,System.Double)">
            <summary>
            Called when panning takes place.
            </summary>
            <param name="axis"></param>
            <param name="preZoomPosition"></param>
            <param name="newZoomPosition"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.RaisePanChangedEvent(Syncfusion.UI.Xaml.Charts.ChartAxisBase2D)">
            <summary>
            Called when panning is completed.
            </summary>
            <param name="axis"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.Zoom(System.Double,Syncfusion.UI.Xaml.Charts.ChartAxisBase2D)">
            <summary>
            Zooms the specified cumulative scale.
            </summary>
            <param name="cumulativeScale">The cumulative scale.</param>
            <param name="axis">The axis.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.ZoomToFactor(Syncfusion.UI.Xaml.Charts.ChartAxisBase2D,System.Double,System.Double)">
            <summary>
            Zooming applied in the chartaxis upto zoom factor in the zoom position.
            </summary>
            <param name="chartAxis">ChartAxisBase2D instance</param>
            <param name="zoomPosition">Zoom Position</param>
            <param name="zoomFactor">Zoom Factor</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.ZoomByRange(Syncfusion.UI.Xaml.Charts.ChartAxisBase2D,System.Double,System.Double)">
            <summary>
            Zooming applied in the chartaxis based start and end range.
            </summary>
            <param name="chartAxis">ChartAxisBase2D instance</param>
            <param name="start">Start Range</param>
            <param name="end">End Range</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.ZoomByRange(Syncfusion.UI.Xaml.Charts.ChartAxisBase2D,System.DateTime,System.DateTime)">
            <summary>
            Zooming applied in the chartaxis based start and end datetime range.
            </summary>
            <param name="chartAxis">ChartAxisBase2D instance</param>
            <param name="start">Start DateTime Range</param>
            <param name="end">End DateTime Range</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.Zoom(System.Double,System.Double,Syncfusion.UI.Xaml.Charts.ChartAxisBase2D)">
            <summary>
            Return bool value from the given ChartAxis
            </summary>
            <param name="cumulativeScale"></param>
            <param name="origin"></param>
            <param name="axis"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.RaiseZoomChangedEvent(System.Double,System.Double,Syncfusion.UI.Xaml.Charts.ChartAxisBase2D)">
            <summary>
            Event is raised when zooming is completed.
            </summary>
            <param name="zoomFactor"></param>
            <param name="zoomPosition"></param>
            <param name="axis"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.RaiseZoomChangingEvent(System.Double,System.Double,Syncfusion.UI.Xaml.Charts.ChartAxisBase2D)">
            <summary>
            Event is raised when zooming takes place. 
            </summary>
            <param name="zoomPosition"></param>
            <param name="zoomFactor"></param>
            <param name="axis"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.Reset">
            <summary>
            Resets the zoom factor and zoom position for all the axis.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.ZoomIn">
            <summary>
            Zoom in the chart
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.ZoomOut">
            <summary>
            Zoom out the chart 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.Zoom(System.Windows.Rect)">
            <summary>
            Zooms based on the rect.
            </summary>
            <param name="zoomRect"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.Zoom(System.Double)">
            <summary>
            Zooms based on the factor.
            </summary>
            <param name="zoomFactor"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.RaiseResetZoomingEvent(Syncfusion.UI.Xaml.Charts.ChartAxisBase2D)">
            <summary>
            Event is raised when zoom is reset.
            </summary>
            <param name="axis"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.CalZoomFactors(System.Double,System.Double,System.Double,System.Double,System.Double@,System.Double@)">
            <summary>
            Calculates ZoomFactor and ZoomPosition using the cumulative scale..
            </summary>
            <param name="cumulativeScale">Cumulative scale since the starting of the manipulation</param>
            <param name="origin">center of manipulation</param>
            <param name="currentZoomFactor">Current axis's ZoomFactor</param>
            <param name="currentZoomPos">Current axis's ZoomPosition</param>
            <param name="calcZoomPos">Calculated ZoomPosition</param>
            <param name="calcZoomFactor">Calculated ZoomFactor</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.ZoomRelativeToCursor">
            <summary>
            Gets or sets a value indicating whether [zoom relative to mouse pointer] and this is applicable only for mouse wheel zooming.
            </summary>
            <value>
            <c>true</c> if [zoom relative to mouse pointer]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.EnablePinchZooming">
            <summary>
            Gets or sets a value indicating whether [enable pinch zooming].
            </summary>
            <value>
              <c>true</c> if [enable pinch zooming]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.ZoomMode">
            <summary>
            Gets or Sets the zoom mode.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.EnablePanning">
            <summary>
            Enables/Disables panning. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.StrokeThickness">
            <summary>
            Gets or Sets stroke thickness for selection rectangle.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.MaximumZoomLevel">
            <summary>
            Gets or Sets Maximum Zoom Level.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.Stroke">
            <summary>
            Gets or Sets stroke for selection rectangle.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.Fill">
            <summary>
            Gets or Sets the background for selection rectangle.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.EnableSelectionZooming">
             <summary>
            Gets or Sets a value indicating whether to enable zooming chart using selection rectangle.
             </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.ResetOnDoubleTap">
            <summary>
            Gets or Sets whether to reset zooming.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior.EnableMouseWheelZooming">
            <summary>
            Gets or Sets whether mouse wheel zooming is enabled.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ZoomEventArgs">
            <summary>
            Class implementation for zooming event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ZoomEventArgs.PreviousPosition">
            <summary>
            Gets or Sets the previous zoomposition.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ZoomEventArgs.CurrentPosition">
            <summary>
            Gets or Sets the current zoom position.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ZoomEventArgs.OldRange">
            <summary>
            Gets or Sets the old visible range.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ZoomEventArgs.PreviousFactor">
            <summary>
            Gets or Sets the previous zoomfactor.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ZoomEventArgs.CurrentFactor">
            <summary>
            Gets or Sets the current zoomfactor.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ZoomEventArgs.Axis">
            <summary>
            Gets or Sets the ChartAxis.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ZoomChangingEventArgs">
            <summary>
            Class implementation for ZoomChanging event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ZoomChangingEventArgs.Cancel">
            <summary>
            Gets or Sets a bool value to determine whether to cancel the event.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ZoomChangedEventArgs">
            <summary>
            Class implementation for ZoomChanged event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ZoomChangedEventArgs.NewRange">
            <summary>
            Gets or Sets the new visible range .
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.SelectionZoomingEventArgs">
            <summary>
            Class implementation for selection zooming event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SelectionZoomingEventArgs.ZoomRect">
            <summary>
            Gets or Sets the bounds of the rectangle.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.SelectionZoomingStartEventArgs">
            <summary>
            Class implementation for SelectionZoomingStart event arguments.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.SelectionZoomingDeltaEventArgs">
            <summary>
            Class implementation for SelectionZoomingDelta event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SelectionZoomingDeltaEventArgs.Cancel">
            <summary>
            Gets or Sets a value to determine whether to cancel the event.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.SelectionZoomingEndEventArgs">
            <summary>
            Class implementation for SelectionZoomingEnd event arguments.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.PanningEventArgs">
            <summary>
            Class implementation for panning event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PanningEventArgs.NewZoomPosition">
            <summary>
            Gets or Sets the new zoom position.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PanningEventArgs.Axis">
            <summary>
            Gets or Sets the ChartAxis.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.PanChangingEventArgs">
            <summary>
            Class implementation for PanChanging event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PanChangingEventArgs.OldZoomPosition">
            <summary>
            Gets or Sets the previous zoom position.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PanChangingEventArgs.Cancel">
            <summary>
            Gets or Sets bool value to detemine whether to cancel the event.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.PanChangedEventArgs">
            <summary>
            Class implementation for PanChanged event arguments.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ResetZoomEventArgs">
            <summary>
            Class implementation for ResetZooming event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ResetZoomEventArgs.PreviousZoomRange">
            <summary>
            Gets or Sets the previous visible range.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ResetZoomEventArgs.Axis">
            <summary>
            Gets or Sets the ChartAxis.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.CategoryAxis">
            <summary>
            Class implementation for CategoryAxis
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CategoryAxis.IntervalProperty">
            <summary>
            Using a DependencyProperty as the backing store for Interval.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CategoryAxis.OnIntervalChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when interval property changed 
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CategoryAxis.GetLabelContent(System.Double)">
            <summary>
            Method implementation for Get LabelContent for given position
            </summary>
            <param name="position"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CategoryAxis.CalculateActualInterval(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Windows.Size)">
            <summary>
            Calculates actual interval
            </summary>
            <param name="range"></param>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CategoryAxis.ApplyRangePadding(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Double)">
            <summary>
            Apply padding based on interval
            </summary>
            <param name="range"></param>
            <param name="interval"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CategoryAxis.GenerateVisibleLabels">
            <summary>
            Method implementation for Generate Visiblie labels for CategoryAxis
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CategoryAxis.Interval">
            <summary>
            Gets or Sets a value that determines the interval between labels. If this property is not set, interval will be calculated automatically.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.DateTimeAxis">
            <summary>
            Class implementation for DateTimeAxis
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.RangeAxisBase">
            <summary>
            Class implementation for RangeAxisBase
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.RangeAxisBase.SmallTicksPerIntervalProperty">
            <summary>
            Using a DependencyProperty as the backing store for SmallTicksPerInterval.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.RangeAxisBase.SmallTickLineSizeProperty">
            <summary>
            Using a DependencyProperty as the backing store for SmallTickLineSize.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.RangeAxisBase.SmallTickLinesPositionProperty">
            <summary>
             Using a DependencyProperty as the backing store for SmallTickLinesPosition.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeAxisBase.AddSmallTicksPoint(System.Double)">
            <summary>
            Method implementation for Add SamllTicksPoint
            </summary>
            <param name="position"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeAxisBase.AddSmallTicksPoint(System.Double,System.Double)">
            <summary>
            Method implementation for Add smallTicks to axis
            </summary>
            <param name="postion"></param>
            <param name="logarithmicbase"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeAxisBase.GenerateVisibleLabels">
            <summary>
            Method implementation for Generate Labels in ChartAxis
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeAxisBase.IncludeAnnotationRange">
            <summary>
            Gets or Sets the IncludeAnnotationRange property.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeAxisBase.SmallTicksPerInterval">
            <summary>
            Gets or Sets small tick’s interval
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeAxisBase.SmallTickLineSize">
            <summary>
            Gets or Sets small tick line size
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeAxisBase.SmallTickLinesPosition">
            <summary>
            Gets or Sets small tick lines position
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxis.CalculateNonWorkingDays(Syncfusion.UI.Xaml.Charts.DoubleRange)">
            <summary>
            Calculate the NonWorking days for the  range
            </summary>
            <param name="range"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxis.CalcNonWorkingHours(System.DateTime,System.DateTime,System.String,System.Double)">
            <summary>
            Calculate the non working hours between two dates
            </summary>
            <param name="startDate"></param>
            <param name="endDate"></param>
            <param name="workingDays"></param>
            <param name="nonWorkingHoursPerDay"></param>
            <returns></returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DateTimeAxis.MinimumProperty">
            <summary>
            Using a DependencyProperty as the backing store for Minimum.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DateTimeAxis.MaximumProperty">
            <summary>
            Using a DependencyProperty as the backing store for Minimum.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DateTimeAxis.IntervalProperty">
            <summary>
             Using a DependencyProperty as the backing store for Interval.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxis.GenerateVisibleLabels">
            <summary>
            Method implementation for Create VisibleLabels for DateTime axis
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxis.OnMaximumChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when Maximum property changed
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxis.OnMinimumChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when minimum property Changed
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxis.OnIntervalChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when Interval property changed
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxis.CalculateActualInterval(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Windows.Size)">
            <summary>
            Calculates actual interval
            </summary>
            <param name="range"></param>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxis.CalculateActualRange">
            <summary>
            Calculates actual range
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxis.ApplyRangePadding(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Double)">
            <summary>
            Apply padding based on interval
            </summary>
            <param name="range"></param>
            <param name="interval"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxis.GetLabelContent(System.Double)">
            <summary>
            Return object value from the given double value
            </summary>
            <param name="position"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxis.CalculateWeekEndDayCount(System.String,System.DateTime,System.DateTime)">
            <summary>
            calculate the count of day which is occur with in start and end date
            </summary>
            <param name="dayName"></param>
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeAxis.CalculateVisibleRange(System.Windows.Size)">
            <summary>
            Calculates the visible range.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DateTimeAxis.EnableBusinessHours">
            <summary>
            Gets or sets a value indicating whether [enable business hours].
            </summary>
            <value>
              <c>true</c> if [enable business hours]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DateTimeAxis.OpenTime">
            <summary>
            Gets or sets the open working time.
            </summary>
            <value>
            The open working time.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DateTimeAxis.CloseTime">
            <summary>
            Gets or sets the close working time.
            </summary>
            <value>
            The close working time.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DateTimeAxis.WorkingDays">
            <summary>
            Gets or sets the work days.
            </summary>
            <value>
            The work days.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DateTimeAxis.Minimum">
            <summary>
            Get or Set Minimum property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DateTimeAxis.Maximum">
            <summary>
            Get or Set Maximum property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DateTimeAxis.Interval">
            <summary>
            Get or Set IntervalProperty
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.LogarithmicAxis">
            <summary>
            Class implementation for LogarithmicAxis
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis.#ctor">
            <summary>
            Called when instance created for LogarithmicAxis 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LogarithmicAxis.IntervalProperty">
            <summary>
            Using a DependencyProperty as the backing store for Interval.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LogarithmicAxis.MinimumProperty">
            <summary>
            Using a DependencyProperty as the backing store for Minimum.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LogarithmicAxis.MaximumProperty">
            <summary>
            Using a DependencyProperty as the backing store for Minimum.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LogarithmicAxis.LogarithmicBaseProperty">
            <summary>
            Using a DependencyProperty as the backing store for LogarithmicBase.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis.CalculateNiceInterval(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Windows.Size)">
            <summary>
            Calculates nice interval
            </summary>
            <param name="actualRange"></param>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis.GenerateVisibleLabels">
            <summary>
            Method implementation for Generate Labels in ChartAxis
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis.AddSmallTicksPoint(System.Double,System.Double)">
            <summary>
            Method implementation for Add SmallTicks for axis
            </summary>
            <param name="position"></param>
            <param name="logarithmicBase"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis.OnMaximumChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when maximum changed
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis.OnMinimumChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when minimum property changed
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis.OnIntervalChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when Interval changed
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis.CalculateActualInterval(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Windows.Size)">
            <summary>
            Calculates actual interval
            </summary>
            <param name="range"></param>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis.CalculateActualRange">
            <summary>
            Calculates actual range
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis.CalculateBaseActualRange">
            <summary>
            Calculate base actual range.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis.GetYValues(Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Get the Actual YValues from chart series.
            </summary>
            <param name="chartSeries"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis.GetRange(System.Collections.Generic.List{System.Double},System.Double)">
            <summary>
            Get the range if date values contain 0 or double.NaN
            </summary>
            <param name="values"></param>
            <param name="rangeEnd"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis.ApplyRangePadding(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Double)">
            <summary>
            Apply padding based on interval
            </summary>
            <param name="range"></param>
            <param name="interval"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis.GetLabelContent(System.Double)">
            <summary>
            Return the object Value from the given double value
            </summary>
            <param name="position"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LogarithmicAxis.CalculateVisibleRange(System.Windows.Size)">
            <summary>
            Calculates the visible range.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LogarithmicAxis.Interval">
            <summary>
            Get or Set IntervalProperty
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LogarithmicAxis.Minimum">
            <summary>
            Get or Set Minimum property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LogarithmicAxis.Maximum">
            <summary>
            Get or Set Maximum property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LogarithmicAxis.LogarithmicBase">
            <summary>
            Gets or Sets logarithmic base.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.NumericalAxis">
            <summary>
            Class implementation for RangeAxisBase
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.NumericalAxis.IntervalProperty">
            <summary>
            Using a DependencyProperty as the backing store for Interval.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.NumericalAxis.MinimumProperty">
            <summary>
             Using a DependencyProperty as the backing store for Minimum.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.NumericalAxis.MaximumProperty">
            <summary>
            Using a DependencyProperty as the backing store for Minimum.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.NumericalAxis.StartRangeFromZeroProperty">
            <summary>
            Using a DependencyProperty as the backing store for StartRangeFromZero.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.NumericalAxis.GenerateVisibleLabels">
            <summary>
            Method implementation for Generate Labels in ChartAxis
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.NumericalAxis.OnMaximumChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called Maximum property changed
            </summary>
            <param name="d"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.NumericalAxis.OnMaximumChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when Maximum property changed
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.NumericalAxis.OnMinimumChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            called when Minimum property changed
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.NumericalAxis.OnIntervalChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when interval changed
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.NumericalAxis.CalculateActualInterval(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Windows.Size)">
            <summary>
            Calculates actual interval
            </summary>
            <param name="range"></param>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.NumericalAxis.CalculateActualRange">
            <summary>
            Calculates actual range
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.NumericalAxis.CalculateVisibleRange(System.Windows.Size)">
            <summary>
            Calculates the visible range.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.NumericalAxis.ApplyRangePadding(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Double)">
            <summary>
            Apply padding based on interval
            </summary>
            <param name="range"></param>
            <param name="interval"></param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.NumericalAxis.Interval">
            <summary>
            Get or Set IntervalProperty
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.NumericalAxis.Minimum">
            <summary>
            Get or Set Minimum property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.NumericalAxis.Maximum">
            <summary>
            Get or Set Maximum property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.NumericalAxis.StartRangeFromZero">
            <summary>
            Gets or Sets a value that indicates whether to start range from zero when IsAutoSetRange is enabled.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.TimeSpanAxis">
            <summary>
            Class implementation for TimeSpanAxis
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.TimeSpanAxis.IntervalProperty">
            <summary>
            Using a DependencyProperty as the backing store for Interval.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.TimeSpanAxis.MinimumProperty">
            <summary>
            Using a DependencyProperty as the backing store for Minimum.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.TimeSpanAxis.MaximumProperty">
            <summary>
             Using a DependencyProperty as the backing store for Minimum.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TimeSpanAxis.GenerateVisibleLabels">
            <summary>
            Method implementation for Generate Labels in ChartAxis
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TimeSpanAxis.OnMaximumChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when Maximum property changed 
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TimeSpanAxis.OnMinimumChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Method implementation for Minimum property changed
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TimeSpanAxis.OnIntervalChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when Interval property changed
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TimeSpanAxis.CalculateActualInterval(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Windows.Size)">
            <summary>
            Calculates actual interval
            </summary>
            <param name="range"></param>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TimeSpanAxis.CalculateActualRange">
            <summary>
            Calculates actual range
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TimeSpanAxis.ApplyRangePadding(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Double)">
            <summary>
            Apply padding based on interval
            </summary>
            <param name="range"></param>
            <param name="interval"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TimeSpanAxis.GetLabelContent(System.Double)">
            <summary>
            Return Object from the given double value 
            </summary>
            <param name="position"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TimeSpanAxis.CalculateVisibleRange(System.Windows.Size)">
            <summary>
            Calculates the visible range.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.TimeSpanAxis.Interval">
            <summary>
            Get or Set Interval property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.TimeSpanAxis.Minimum">
             <summary>
            get or set  Minimum property
             </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.TimeSpanAxis.Maximum">
            <summary>
            Get or Set Maximum property
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase">
            <summary>
            Class implementation for AccumulationSeriesBase
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.YBindingPathProperty">
            <summary>
             Using a DependencyProperty as the backing store for YBindingPath.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.ExplodeRadiusProperty">
            <summary>
            Using a DependencyProperty as the backing store for ExplodeRadius.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.ExplodeIndexProperty">
            <summary>
            Using a DependencyProperty as the backing store for ExplodeIndex.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.ExplodeAllProperty">
            <summary>
            Using a DependencyProperty as the backing store for ExplodeAll.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.SegmentSelectionBrushProperty">
            <summary>
             Using a DependencyProperty as the backing store for SegmentSelectionBrush.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.#ctor">
            <summary>
            Called when instance created for AccumulationSeriesBase
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.GetDataPoint(System.Int32)">
            <summary>
             This method used to get the chart data at an index.
             </summary>
             <param name="index"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.GetDataPointIndex(System.Windows.Point)">
            <summary>
             This method used to get the chart data index at an SfChart co-ordinates
             </summary>
             <param name="index"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when DataSource property get changed
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.GeneratePoints">
            <summary>
            Method implementation for Generate points for Indicator
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.SetExplodeIndex(System.Int32)">
            <summary>
            Method implementation for ExplodeIndex
            </summary>
            <param name="i"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.SetExplodeRadius">
            <summary>
            Virtual Method for ExplodeRadius
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.SetExplodeAll">
            <summary>
            Virtual method for ExplodeAll
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.ValidateYValues">
            <summary>
            Validate the datapoints for segment implementation.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.ReValidateYValues(System.Collections.Generic.List{System.Int32}[])">
            <summary>
            Validate the datapoints for segment implementation.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.YBindingPath">
            <summary>
            Gets or Sets the property path to retrieve y data from ItemsSource.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.ExplodeRadius">
            <summary>
            Get or Set ExplodeRadius property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.ExplodeIndex">
            <summary>
            Get or Set ExplodeIndexProperty
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.ExplodeAll">
            <summary>
            Get or Set ExplodeAllProperty
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.SegmentSelectionBrush">
            <summary>
            Get or Set SegmentSelectionBrush property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.YValues">
            <summary>
            Get or Set YValues property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AccumulationSeriesBase.SelectedIndex">
            <summary>
            Gets or Sets SelectedIndex.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartDataPointInfo">
            <summary>
            Define the members that used in SfChart data.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartDataPointInfo.Index">
            <summary>
            Define the index of the data point.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartDataPointInfo.XData">
            <summary>
            Define the x-axis data of the series data point.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartDataPointInfo.YData">
            <summary>
            Define the y-axis data of the XY data series data point.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartDataPointInfo.Item">
            <summary>
            Define the model object of the chart data point.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartDataPointInfo.High">
            <summary>
            Define the high value of the range/financial series data point.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartDataPointInfo.Low">
            <summary>
            Define the low value of the range/financial series data point.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartDataPointInfo.Open">
            <summary>
            Define the Open value of the financial series data point.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartDataPointInfo.Close">
            <summary>
            Define the close value of the financial series data point.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartDataPointInfo.Series">
            <summary>
            Define the series which holds this data point
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.CircularSeriesBase">
            <summary>
            Class implementation for CircularSeriesBase
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CircularSeriesBase.LabelPositionProperty">
            <summary>
            Using a DependencyProperty as the backing store for LabelPosition.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CircularSeriesBase.EnableSmartLabels">
            <summary>
            Gets or sets a value indicating whether [enable smart labels].
            </summary>
            <value>
              <c>true</c> if [enable smart labels]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CircularSeriesBase.ConnectorType">
            <summary>
            Gets or sets the connector mode.
            </summary>
            <value>
            The connector mode.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CircularSeriesBase.LabelPosition">
            <summary>
            Gets or Sets label position for pie segment
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CircularSeriesBase.StartAngle">
            <summary>
            Gets or sets the start angle in degrees, for clockwise/counterclockwise rotation..
            </summary>
            <value>
            The start angle.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CircularSeriesBase.EndAngle">
            <summary>
            Gets or sets the end angle in degrees, for clockwise/counterclockwise rotation..
            </summary>
            <value>
            The start angle.
            </value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.DoughnutSeries">
            <summary>
            DoughnutSeries displays data as a proportion of the whole.DoughnutSeries are most commonly used to make comparisons among a set of given data.
            </summary>
            <remarks>
            DoughnutSeries does not have any axis. The segments in DoughnutSeries can be exploded to a certain distance from the center using <see>
                                                                                                                                                  <cref>DoughnutSeries.ExplodeIndex</cref>
                                                                                                                                              </see>
                or <see>
                       <cref>DoughnutSeries.ExplodeAll</cref>
                   </see>
                property.
            The segments can be filled with a custom set of colors using <see cref="P:Syncfusion.UI.Xaml.Charts.ChartColorModel.CustomBrushes"/> property.
            </remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.DoughnutSegment"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.PieSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.PieSegment"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DoughnutSeries.DoughnutCoefficientProperty">
            <summary>
            Using a DependencyProperty as the backing store for DoughnutCoefficient.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoughnutSeries.#ctor">
            <summary>
            Called when instance created for DoughnutSeries
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoughnutSeries.GetDoughnutSeriesCount">
            <summary>
            Gets the doughnut series count.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoughnutSeries.CreateSegments">
            <summary>
            Creates the doughnut segments.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoughnutSeries.CreateAdornment(Syncfusion.UI.Xaml.Charts.AdornmentSeries,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Method implementation for Create Adornments
            </summary>
            <param name="series"></param>
            <param name="xVal"></param>
            <param name="yVal"></param>
            <param name="angle"></param>
            <param name="radius"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoughnutSeries.CreateTransformer(System.Windows.Size,System.Boolean)">
            <summary>
            Return IChartTransformer value from the given size
            </summary>
            <param name="size"></param>
            <param name="create"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoughnutSeries.SetExplodeIndex(System.Int32)">
            <summary>
            Method implementation for ExplodeIndex
            </summary>
            <param name="i"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoughnutSeries.Animate">
            <summary>
            Virtual Method for Animate
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoughnutSeries.SetExplodeRadius">
            <summary>
            Virtual Method for ExplodeRadius
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoughnutSeries.SetExplodeAll">
            <summary>
            Virtual method for ExplodeAll
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DoughnutSeries.DoughnutCoefficient">
            <summary>
            Gets or Sets coefficient, which determines the radius of doughnut series.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DoughnutSeries.DoughnutSize">
            <summary>
            Gets and Sets the Size, which determines the outer circle radius of doughnut series. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.CreateSegments">
            <summary>
            Creates the segments of ErrorBarSeries
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.ErrorBarSeries_ActualRangeChanged(System.Object,Syncfusion.UI.Xaml.Charts.ActualRangeChangedEventArgs)">
            <summary>
            Actual Range Event hooked here for the suppose of DateTimeAxis with Auto type errorbar calculation
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.GetSdErrorValue(System.Collections.Generic.IList{System.Double})">
            <summary>
            Calculate StandardDeviation and StandardError value
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.GetPercentageErrorBarValue(System.Double,System.Double)">
            <summary>
            Get Percentage ErrorBar Value
            </summary>
            <param name="value"></param>
            <param name="errorValue"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.GetPlusValue(System.Double,System.Double,System.Boolean)">
            <summary>
            Calculate the Plus value of line
            </summary>
            <param name="value"></param>
            <param name="errorvalue"></param>
            <param name="axischeck"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.GetMinusValue(System.Double,System.Double,System.Boolean)">
            <summary>
            Calculate the Minus Value of line
            </summary>
            <param name="value"></param>
            <param name="errorvalue"></param>
            <param name="axischeck"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.GeneratePoints">
            <summary>
            Method for Generate Points for XYDataSeries
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when DataSource property changed
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.CloneSeries(System.Windows.DependencyObject)">
            <summary>
            Clone method
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.HorizontalErrorPath">
            <summary>
            Gets and Sets Horizontal Error Member path. This property defines the member of the ItemsSource collection, which need to bind as Horizontal error value and its will be working only in Custom Type of ErrorBar..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.VerticalErrorPath">
            <summary>
            Gets and Sets Vertical Error Member path. This property defines the member of the ItemsSource collection, which need to bind as vertical error value and its will be working in Custom Type of ErrorBar..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.HorizontalLineStyle">
            <summary>
            Gets and Sets Horizontal Line Style.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.VerticalLineStyle">
            <summary>
            Gets and Sets Vertical Line Style.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.HorizontalCapLineStyle">
            <summary>
            Gets and Sets Horizontal Cap Line Style.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.VerticalCapLineStyle">
            <summary>
            Gets and Sets Vertical Cap Line Style.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.HorizontalErrorValue">
            <summary>
            Gets and Sets Horizontal Error Value. This property will be working only in Fixed and Percentage type.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.VerticalErrorValue">
            <summary>
            Gets and Sets Vertical Error Value. This property will be working only in Fixed and Percentage type
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.Mode">
            <summary>
            Gets or Sets the ErrorBar Mode, This property is to customize the horizontal and vertical error bars.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ErrorBarSeries.Type">
            <summary>
            Gets or Sets the ErrorBar Type, This property of type ErrorBarType, which is used to set the type of Error need to plot.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.FastBarBitmapSeries">
             <summary>
             FastBarBitmapSeries is another version of BarSeries which uses different technology for rendering line in order to boost performance.
             </summary>
             <remarks>
             It uses WriteableBitmap for rendering; Its advantage is that it will render the series with large quantity of data in a fraction of milliseconds.
            </remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FastHiLoBitmapSeries"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FastBarBitmapSeries.SegmentSelectionBrushProperty">
            <summary>
             Using a DependencyProperty as the backing store for SegmentSelectionBrush.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastBarBitmapSeries.IsHitTestSeries">
            <summary>
            Method used to return the hittest series while mouse action.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastBarBitmapSeries.RaiseSelectionChanging(System.Int32,System.Int32)">
            <summary>
            Method is used to raise SelectionChanging event
            </summary>
            <param name="newIndex"></param>
            <param name="oldIndex"></param>
            <param name="series"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastBarBitmapSeries.RaiseSelectionChangedEvent">
            <summary>
            Called when selection changed in load time
            </summary>
            <param name="segment"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastBarBitmapSeries.GetDataPointIndex(System.Windows.Point)">
            <summary>
             This method used to get the chart data index at an SfChart co-ordinates
             </summary>
             <param name="index"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastBarBitmapSeries.SelectedIndexChanged(System.Int32,System.Int32)">
            <summary>
            Method used to set SegmentSelectionBrush to SelectedIndex segment
            </summary>
            <param name="newIndex"></param>
            <param name="oldIndex"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastBarBitmapSeries.CreateSegments">
            <summary>
            Creates the segments of FastBarBitmapSeries
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastBarBitmapSeries.SegmentSelectionBrush">
            <summary>
            Gets or Sets selection brush.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastBarBitmapSeries.SelectedIndex">
            <summary>
            Gets or Sets SelectedIndex.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.FastCandleBitmapSeries">
             <summary>
             FastCandleBitmapSeries is another version of CandleSeries which uses different technology for rendering line in order to boost performance.
             </summary>
             <remarks>
             It uses WriteableBitmap for rendering; Its advantage is that it will render the series with large quantity of data in a fraction of milliseconds.
            </remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FastHiLoBitmapSeries"/>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase">
            <summary>
            Class implementation for FinancialSeriesBase
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.HighProperty">
            <summary>
            Using a DependencyProperty as the backing store for High.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.LowProperty">
            <summary>
            Using a DependencyProperty as the backing store for Low.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.OpenProperty">
            <summary>
            Using a DependencyProperty as the backing store for Open.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.CloseProperty">
            <summary>
            Using a DependencyProperty as the backing store for Close.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.BearFillColorProperty">
            <summary>
             Using a DependencyProperty as the backing store for BearFillColor.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.BullFillColorProperty">
            <summary>
            Using a DependencyProperty as the backing store for BullFillColor.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.GetDataPoint(System.Windows.Point)">
            <summary>
            This method used to get the chart data at a mouse position.
            </summary>
            <param name="mousePos"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.GetDataPoint(System.Int32)">
            <summary>
             This method used to get the chart data at an index.
             </summary>
             <param name="index"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when DataSource property changed 
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.GeneratePoints">
            <summary>
            Method implementation  for GeneratePoints for Adornments
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.ReValidateYValues(System.Collections.Generic.List{System.Int32}[])">
            <summary>
            Validate the datapoints for segment implementation.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.ValidateYValues">
            <summary>
            Validate the datapoints for segment implementation.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.High">
            <summary>
            Gets or Sets the property path to retrieve High data from ItemsSource.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.Low">
            <summary>
            Gets or Sets the property path to retrieve Low data from ItemsSource.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.Open">
            <summary>
            Gets or Sets the property path to retrieve open data from ItemsSource.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.Close">
            <summary>
            Gets or Sets the property path to retrieve close data from ItemsSource.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.BearFillColor">
            <summary>
            Get or Set BearFillProperty
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.BullFillColor">
            <summary>
            Gets or Set BullFillColorProperty
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.OpenValues">
            <summary>
            Gets or Sets OpenValues property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.HighValues">
            <summary>
            Gets or Sets HighValues
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.LowValues">
            <summary>
            Gets or Sets LowValues property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.CloseValues">
            <summary>
            Gets or Set CloseValues
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FinancialSeriesBase.Segment">
            <summary>
            Gets or Sets Segments property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FastCandleBitmapSeries.SegmentSelectionBrushProperty">
            <summary>
             Using a DependencyProperty as the backing store for SegmentSelectionBrush.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastCandleBitmapSeries.GetDataPointIndex(System.Windows.Point)">
            <summary>
             This method used to get the chart data index at an SfChart co-ordinates
             </summary>
             <param name="index"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastCandleBitmapSeries.RaiseSelectionChanging(System.Int32,System.Int32)">
            <summary>
            Method is used to raise SelectionChanging event
            </summary>
            <param name="newIndex"></param>
            <param name="oldIndex"></param>
            <param name="series"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastCandleBitmapSeries.RaiseSelectionChangedEvent">
            <summary>
            Called when selection changed in load time
            </summary>
            <param name="segment"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastCandleBitmapSeries.SelectedIndexChanged(System.Int32,System.Int32)">
            <summary>
            Method used to set SegmentSelectionBrush to SelectedIndex segment
            </summary>
            <param name="newIndex"></param>
            <param name="oldIndex"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastCandleBitmapSeries.GeneratePixels">
            <summary>
             This method used to get the chart data at an index.
             </summary>
             <param name="mousePos"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastCandleBitmapSeries.CreateSegments">
            <summary>
            Creates the segments of FastCandleBitmapSeries
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastCandleBitmapSeries.SegmentSelectionBrush">
            <summary>
            Gets or Sets selection brush.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastCandleBitmapSeries.SelectedIndex">
            <summary>
            Gets or Sets SelectedIndex.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSeries">
             <summary>
             FastColumnBitmapSeries is another version of ColumnSeries which uses different technology for rendering line in order to boost performance.
             </summary>
             <remarks>
             It uses WriteableBitmap for rendering; Its advantage is that it will render the series with large quantity of data in a fraction of milliseconds.
            </remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FastHiLoBitmapSeries"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSeries.SegmentSelectionBrushProperty">
            <summary>
             Using a DependencyProperty as the backing store for SegmentSelectionBrush.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSeries.IsHitTestSeries">
            <summary>
            Method used to return the hittest series while mouse action.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSeries.GetDataPointIndex(System.Windows.Point)">
            <summary>
             This method used to get the chart data index at an SfChart co-ordinates
             </summary>
             <param name="index"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSeries.RaiseSelectionChanging(System.Int32,System.Int32)">
            <summary>
            Method is used to raise SelectionChanging event
            </summary>
            <param name="newIndex"></param>
            <param name="oldIndex"></param>
            <param name="series"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSeries.RaiseSelectionChangedEvent">
            <summary>
            Called when selection changed in load time
            </summary>
            <param name="segment"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSeries.SelectedIndexChanged(System.Int32,System.Int32)">
            <summary>
            Method used to set SegmentSelectionBrush to SelectedIndex segment
            </summary>
            <param name="newIndex"></param>
            <param name="oldIndex"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSeries.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when DataSource property changed
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSeries.CreateSegments">
            <summary>
            Creates the segments of FastColumnBitmapSeries
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSeries.SegmentSelectionBrush">
            <summary>
            Gets or Sets selection brush.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSeries.SelectedIndex">
            <summary>
            Gets or Sets SelectedIndex.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.FastHiLoOpenCloseBitmapSeries">
             <summary>
             FastHiLoOpenCloseBitmapSeries is another version of HiLoOpenCloseSeries which uses different technology for rendering line in order to boost performance.
             </summary>
             <remarks>
             It uses WriteableBitmap for rendering; Its advantage is that it will render the series with large quantity of data in a fraction of milliseconds.
            </remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FastHiLoBitmapSeries"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FastHiLoOpenCloseBitmapSeries.SegmentSelectionBrushProperty">
            <summary>
             Using a DependencyProperty as the backing store for SegmentSelectionBrush.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoOpenCloseBitmapSeries.GetDataPointIndex(System.Windows.Point)">
            <summary>
             This method used to get the chart data index at an SfChart co-ordinates
             </summary>
             <param name="index"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoOpenCloseBitmapSeries.RaiseSelectionChanging(System.Int32,System.Int32)">
            <summary>
            Method is used to raise SelectionChanging event
            </summary>
            <param name="newIndex"></param>
            <param name="oldIndex"></param>
            <param name="series"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoOpenCloseBitmapSeries.RaiseSelectionChangedEvent">
            <summary>
            Called when selection changed in load time
            </summary>
            <param name="segment"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoOpenCloseBitmapSeries.SelectedIndexChanged(System.Int32,System.Int32)">
            <summary>
            Method used to set SegmentSelectionBrush to SelectedIndex segment
            </summary>
            <param name="newIndex"></param>
            <param name="oldIndex"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoOpenCloseBitmapSeries.GeneratePixels">
            <summary>
             This method used to get the chart data at an index.
             </summary>
             <param name="mousePos"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoOpenCloseBitmapSeries.CreateSegments">
            <summary>
            Creates the segments of FastHiLoOpenCloseBitmapSeries
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastHiLoOpenCloseBitmapSeries.SegmentSelectionBrush">
            <summary>
            Gets or Sets selection brush.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastHiLoOpenCloseBitmapSeries.SelectedIndex">
            <summary>
            Gets or Sets SelectedIndex.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.FastHiLoBitmapSeries">
             <summary>
             FastHiLoSeries is another version of HiLoSeries which uses different technology for rendering line in order to boost performance.
             </summary>
             <remarks>
             It uses WriteableBitmap for rendering; Its advantage is that it will render the series with large quantity of data in a fraction of milliseconds.
            </remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FastHiLoOpenCloseBitmapSeries"/>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.RangeSeriesBase">
            <summary>
            Class implementation for RangeSeriesBase
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.RangeSeriesBase.HighProperty">
            <summary>
            Using a DependencyProperty as the backing store for HighValues.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.RangeSeriesBase.LowProperty">
            <summary>
            Using a DependencyProperty as the backing store for LowValues.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeSeriesBase.#ctor">
            <summary>
            Called when instance created for RangeSeriesBase
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeSeriesBase.GetDataPoint(System.Int32)">
            <summary>
             This method used to get the chart data at an index.
             </summary>
             <param name="index"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeSeriesBase.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when DataSource property changed 
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeSeriesBase.GeneratePoints">
            <summary>
            Method implementation  for GeneratePoints for Adornments
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeSeriesBase.ValidateYValues">
            <summary>
            Validate the datapoints for segment implementation.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeSeriesBase.ReValidateYValues(System.Collections.Generic.List{System.Int32}[])">
            <summary>
            Validate the datapoints for segment implementation.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeSeriesBase.High">
            <summary>
            Gets or Sets the property path to retrieve High data from ItemsSource.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeSeriesBase.Low">
            <summary>
            Gets or Sets the property path to retrieve Low data from ItemsSource.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeSeriesBase.HighValues">
            <summary>
            Get or Set HighValues property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeSeriesBase.LowValues">
            <summary>
            Get or Set LowValues property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeSeriesBase.Segment">
            <summary>
            Get or Set Segment property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FastHiLoBitmapSeries.SegmentSelectionBrushProperty">
            <summary>
             Using a DependencyProperty as the backing store for SegmentSelectionBrush.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoBitmapSeries.GetDataPointIndex(System.Windows.Point)">
            <summary>
             This method used to get the chart data index at an SfChart co-ordinates
             </summary>
             <param name="index"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoBitmapSeries.RaiseSelectionChanging(System.Int32,System.Int32)">
            <summary>
            Method is used to raise SelectionChanging event
            </summary>
            <param name="newIndex"></param>
            <param name="oldIndex"></param>
            <param name="series"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoBitmapSeries.RaiseSelectionChangedEvent">
            <summary>
            Called when selection changed in load time
            </summary>
            <param name="segment"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoBitmapSeries.SelectedIndexChanged(System.Int32,System.Int32)">
            <summary>
            Method used to set SegmentSelectionBrush to SelectedIndex segment
            </summary>
            <param name="newIndex"></param>
            <param name="oldIndex"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoBitmapSeries.GeneratePixels">
            <summary>
             This method used to gets the segment pixel positions at data point.
             </summary>
             <param name="mousePos"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoBitmapSeries.GetDataPoint(System.Windows.Point)">
            <summary>
            This method used to get the chart data at a mouse position.
            </summary>
            <param name="mousePos"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoBitmapSeries.CreateSegments">
            <summary>
            Creates the segments of FastHiLoSeries.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastHiLoBitmapSeries.SegmentSelectionBrush">
            <summary>
            Gets or Sets selection brush.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastHiLoBitmapSeries.SelectedIndex">
            <summary>
            Gets or Sets SelectedIndex.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FastScatterBitmapSeries.SegmentSelectionBrushProperty">
            <summary>
             Using a DependencyProperty as the backing store for SegmentSelectionBrush.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastScatterBitmapSeries.IsHitTestSeries">
            <summary>
            Method used to return the hittest series while mouse action.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastScatterBitmapSeries.GetDataPointIndex(System.Windows.Point)">
            <summary>
             This method used to get the chart data index at an SfChart co-ordinates
             </summary>
             <param name="index"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastScatterBitmapSeries.RaiseSelectionChanging(System.Int32,System.Int32)">
            <summary>
            Method is used to raise SelectionChanging event
            </summary>
            <param name="newIndex"></param>
            <param name="oldIndex"></param>
            <param name="series"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastScatterBitmapSeries.RaiseSelectionChangedEvent">
            <summary>
            Called when selection changed in load time
            </summary>
            <param name="segment"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastScatterBitmapSeries.SelectedIndexChanged(System.Int32,System.Int32)">
            <summary>
            Method used to set SegmentSelectionBrush to SelectedIndex segment
            </summary>
            <param name="newIndex"></param>
            <param name="oldIndex"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastScatterBitmapSeries.GeneratePixels">
            <summary>
             This method used to get the chart data at an index.
             </summary>
             <param name="mousePos"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastScatterBitmapSeries.GetDataPoint(System.Windows.Point)">
            <summary>
            This method used to gets the chart data point at a position.
            </summary>
            <param name="mousePos"></param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastScatterBitmapSeries.ScatterWidth">
            <summary>
            Gets or Sets scatter segment’s width.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastScatterBitmapSeries.ScatterHeight">
            <summary>
            Gets or Sets scatter segment’s height.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastScatterBitmapSeries.SegmentSelectionBrush">
            <summary>
            Gets or Sets selection brush.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastScatterBitmapSeries.SelectedIndex">
            <summary>
            Gets or Sets SelectedIndex.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.StackingSeriesBase">
            <summary>
            Class implementation for StackingSeriesBase
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingSeriesBase.GetStackedYValue(System.Int32)">
            <summary>
            Return double value from the given index
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingSeriesBase.FindNearestChartPoint(System.Windows.Point,System.Double@,System.Double@,System.Double@)">
            <summary>
            Finds the nearest point in ChartSeries relative to the mouse point/touch position.
            </summary>
            <param name="point">The co-ordinate point representing the current mouse point /touch position.</param>
            <param name="x">x-value of the nearest point.</param>
            <param name="y">y-value of the nearest point</param>
            <param name="stackedYValue"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingSeriesBase.GetCumulativeStackValues(Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Returns the stacked value of the series.
            </summary>
            <param name="series">ChartSeries</param>
            <returns>StackedYValues class instance</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingSeriesBase.GeneratePixels">
            <summary>
            This method used to get the segment pixel positions
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingSeriesBase.GenerateStackingColumnPixels">
            <summary>
            This method is used to gets the selected data point segment pixel positions
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingSeriesBase.GenerateStackingBarPixels">
            <summary>
            This method is used to gets the selected data point segment pixel positions
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StackingSeriesBase.GroupingLabel">
            <summary>
            Get or Set GroupingLabel for Stacking Series.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StackingSeriesBase.YRangeStartValues">
            <summary>
            Get or Set YRangeStartValues property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StackingSeriesBase.YRangeEndValues">
            <summary>
            Get or Set YRangeEndvalues property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FastStackingColumnBitmapSeries.SegmentSelectionBrushProperty">
            <summary>
             Using a DependencyProperty as the backing store for SegmentSelectionBrush.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastStackingColumnBitmapSeries.IsHitTestSeries">
            <summary>
            Method used to return the hittest series while mouse action.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastStackingColumnBitmapSeries.GetDataPointIndex(System.Windows.Point)">
            <summary>
             This method used to get the chart data index at an SfChart co-ordinates
             </summary>
             <param name="index"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastStackingColumnBitmapSeries.RaiseSelectionChanging(System.Int32,System.Int32)">
            <summary>
            Method is used to raise SelectionChanging event
            </summary>
            <param name="newIndex"></param>
            <param name="oldIndex"></param>
            <param name="series"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastStackingColumnBitmapSeries.RaiseSelectionChangedEvent">
            <summary>
            Called when selection changed in load time
            </summary>
            <param name="segment"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastStackingColumnBitmapSeries.SelectedIndexChanged(System.Int32,System.Int32)">
            <summary>
            Method used to set SegmentSelectionBrush to SelectedIndex segment
            </summary>
            <param name="newIndex"></param>
            <param name="oldIndex"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastStackingColumnBitmapSeries.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when DataSource property changed
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastStackingColumnBitmapSeries.CreateSegments">
            <summary>
            Creates the segments of FastStackingColumnBitmapSeries
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastStackingColumnBitmapSeries.SegmentSelectionBrush">
            <summary>
            Gets or Sets selection brush.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastStackingColumnBitmapSeries.SelectedIndex">
            <summary>
            Gets or Sets SelectedIndex.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.FastStepLineBitmapSeries">
             <summary>
             FastStepLineBitmapSeries is another version of StepLineSeries which uses different technology for rendering Stepline in order to boost performance.
             </summary>
             <remarks>
             It uses WriteableBitmap for rendering; Its advantage is that it will render the series with large quantity of data in a fraction of milliseconds.
            </remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FastStepLineBitmapSegment"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FastStepLineBitmapSeries.SegmentSelectionBrushProperty">
            <summary>
             Using a DependencyProperty as the backing store for SegmentSelectionBrush.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastStepLineBitmapSeries.GetDataPointIndex(System.Windows.Point)">
            <summary>
             This method used to get the chart data index at an SfChart co-ordinates
             </summary>
             <param name="index"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastStepLineBitmapSeries.RaiseSelectionChanging(System.Int32,System.Int32)">
            <summary>
            Method is used to raise SelectionChanging event
            </summary>
            <param name="newIndex"></param>
            <param name="oldIndex"></param>
            <param name="series"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastStepLineBitmapSeries.RaiseSelectionChangedEvent">
            <summary>
            Called when selection changed in load time
            </summary>
            <param name="segment"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastStepLineBitmapSeries.SelectedIndexChanged(System.Int32,System.Int32)">
            <summary>
            Method used to set SegmentSelectionBrush to SelectedIndex segment
            </summary>
            <param name="newIndex"></param>
            <param name="oldIndex"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastStepLineBitmapSeries.GetDataPoint(System.Windows.Point)">
            <summary>
            This method used to gets the chart data point at a position.
            </summary>
            <param name="mousePos"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastStepLineBitmapSeries.CreateSegments">
            <summary>
            Creates the segments of FastStepLineBitmapSeries.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastStepLineBitmapSeries.EnableAntiAliasing">
            <summary>
            Gets or Sets a value that determines whether to anti-alias Stepline.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastStepLineBitmapSeries.SegmentSelectionBrush">
            <summary>
            Gets or Sets selection brush.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastStepLineBitmapSeries.SelectedIndex">
            <summary>
            Gets or Sets SelectedIndex.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.FunnelSeries">
            <summary>
            FunnelSeries displays its path using a set of data's.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FunnelSegment"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.PyramidSegment"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.PyramidSeries"/>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.TriangularSeriesBase">
            <summary>
            Class implementation for TriangularSeriesBase
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.TriangularSeriesBase.GapRatioProperty">
            <summary>
            Using a DependencyProperty as the backing store for GapRatio.  This enables animation, styling, binding, etc... 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.TriangularSeriesBase.ExplodeOffsetProperty">
            <summary>
            Using a DependencyProperty as the backing store for ExplodeOffset.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.TriangularSeriesBase.GapRatio">
            <summary>
            Gets or Sets GapRatio.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.TriangularSeriesBase.ExplodeOffset">
            <summary>
            Get or Set ExplodeOffset property
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FunnelSeries.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FunnelSeries.FunnelModeProperty">
            <summary>
            Using a DependencyProperty as the backing store for FunnelMode.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FunnelSeries.MinWidthProperty">
            <summary>
            Using a DependencyProperty as the backing store for MinWidth.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FunnelSeries.CreateSegments">
            <summary>
            Creates the segments of FunnelSeries.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FunnelSeries.CreateAdornment(Syncfusion.UI.Xaml.Charts.AdornmentSeries,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates the adornment of FunnelSeries.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FunnelSeries.CreateTransformer(System.Windows.Size,System.Boolean)">
            <summary>
            Method implementation for Create Transform
            </summary>
            <param name="size"></param>
            <param name="create"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FunnelSeries.UpdateSegments(System.Int32,System.Collections.Specialized.NotifyCollectionChangedAction)">
            <summary>
            Updates the segment at the specified index
            </summary>
            <param name="index">The index of the segment.</param>
            <param name="action">The action that caused the segments collection changed event</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FunnelSeries.CalculateValueIsHeightSegments(System.Collections.Generic.IList{System.Double},System.Collections.Generic.List{System.Double},System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            To calculate the segments if the pyramid mode is vlaueisHeight.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FunnelSeries.SelectedIndexChanged(System.Int32,System.Int32)">
            <summary>
            Method used to set SegmentSelectionBrush to selectedindex chartsegment
            </summary>
            <param name="newIndex"></param>
            <param name="oldIndex"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FunnelSeries.CalculateValueIsWidthSegments(System.Collections.Generic.IList{System.Double},System.Collections.Generic.List{System.Double},System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            To calculate the segments if the pyramid mode is valueisWidth.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FunnelSeries.SetExplodeIndex(System.Int32)">
            <summary>
            Method implementation for ExplodeIndex
            </summary>
            <param name="i"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FunnelSeries.FunnelMode">
            <summary>
            Gets or Sets the property FunnelMode.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FunnelSeries.MinWidth">
            <summary>
            Gets or sets the minwidth property.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.PolarRadarSeriesBase">
            <summary>
            Class implementation for PolarRadarSeriesBase
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.PolarRadarSeriesBase.YBindingPathProperty">
            <summary>
            Using a DependencyProperty as the backing store for YBindingPath.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.PolarRadarSeriesBase.IsClosedProperty">
            <summary>
            Using a DependencyProperty as the backing store for IsClosed.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.PolarRadarSeriesBase.DrawTypeProperty">
            <summary>
            Using a DependencyProperty as the backing store for DrawType.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.PolarRadarSeriesBase.XAxisProperty">
            <summary>
            Using a DependencyProperty as the backing store for XAxis.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.PolarRadarSeriesBase.YAxisProperty">
            <summary>
            Using a DependencyProperty as the backing store for YAxis.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PolarRadarSeriesBase.#ctor">
            <summary>
            Called when instance created for PolarRadarSeriesBase
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PolarRadarSeriesBase.OnYAxisChanged(Syncfusion.UI.Xaml.Charts.ChartAxis,Syncfusion.UI.Xaml.Charts.ChartAxis)">
            <summary>
            Called when YAxis property changed
            </summary>
            <param name="oldAxis"></param>
            <param name="newAxis"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PolarRadarSeriesBase.OnXAxisChanged(Syncfusion.UI.Xaml.Charts.ChartAxis,Syncfusion.UI.Xaml.Charts.ChartAxis)">
            <summary>
            Called when XAxis property changed
            </summary>
            <param name="oldAxis"></param>
            <param name="newAxis"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PolarRadarSeriesBase.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when DataSource property changed 
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PolarRadarSeriesBase.GeneratePoints">
            <summary>
            Method implementation  for GeneratePoints for Adornments
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PolarRadarSeriesBase.timer_Tick(System.Object,System.Object)">
            <summary>
            Timer Tick Handler for closing the Tooltip
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PolarRadarSeriesBase.ValidateYValues">
            <summary>
            Validate the datapoints for segment implementation.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PolarRadarSeriesBase.ReValidateYValues(System.Collections.Generic.List{System.Int32}[])">
            <summary>
            Validate the datapoints for segment implementation.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PolarRadarSeriesBase.YBindingPath">
            <summary>
            Get or Set YBindingPathProperty
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PolarRadarSeriesBase.IsClosed">
            <summary>
            Gets or sets a value that indicates whether the first and last segments are connected.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PolarRadarSeriesBase.DrawType">
            <summary>
            Gets or Sets DrawType.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PolarRadarSeriesBase.YValues">
            <summary>
            Get or Set YValues property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PolarRadarSeriesBase.Segment">
            <summary>
            Get or Set Segment property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PolarRadarSeriesBase.XRange">
            <summary>
            Get or Set XRange property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PolarRadarSeriesBase.YRange">
            <summary>
            Get or Set YRange property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PolarRadarSeriesBase.XAxis">
            <summary>
            Get or Set XAxis property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PolarRadarSeriesBase.YAxis">
            <summary>
            Get or Set YAxisProperty
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.PyramidSeries">
            <summary>
            PyramidSeries displays data as a proportion of the whole.PyramidSeries are most commonly used to make comparisons among a set of given data.
            </summary>
            <remarks>
            PyramidSeries does not have any axis. The segments in PyramidSeries can be explode to a certain distance from the center using <see>
                                                                                                                                               <cref>PyramidSeries.ExplodeIndex</cref>
                                                                                                                                           </see>
                property.
            The segments can be filled with a custom set of colors using <see cref="P:Syncfusion.UI.Xaml.Charts.ChartColorModel.CustomBrushes"/> property.
            </remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.PyramidSegment"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FunnelSegment"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FunnelSeries"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.PyramidSeries.PyramidModeProperty">
            <summary>
            Using a DependencyProperty as the backing store for PyramidMode.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PyramidSeries.#ctor">
            <summary>
            Called when instance created for PyramidSeries
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PyramidSeries.CreateSegments">
            <summary>
            Creates the segment of PyramidSeries.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PyramidSeries.CreateAdornment(Syncfusion.UI.Xaml.Charts.AdornmentSeries,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates the adornment of PyramidSeries.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PyramidSeries.UpdateSegments(System.Int32,System.Collections.Specialized.NotifyCollectionChangedAction)">
            <summary>
            Creates the adornment of PyramidSeries.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PyramidSeries.CreateTransformer(System.Windows.Size,System.Boolean)">
            <summary>
            Return IChartTranform value based upon the given size
            </summary>
            <param name="size"></param>
            <param name="create"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PyramidSeries.CalculateLinearSegments(System.Double,System.Double,System.Int32,System.Collections.Generic.List{System.Double})">
            <summary>
            To calculate the segments if the pyramid mode is linear
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PyramidSeries.CalculateSurfaceSegments(System.Double,System.Int32,System.Double,System.Collections.Generic.List{System.Double})">
            <summary>
            To calculate the segments if the pyramid mode is surface
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PyramidSeries.GetSurfaceHeight(System.Double,System.Double)">
            <summary>
            To get the SurfaceHeight for PyramidSeries.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PyramidSeries.SetExplodeIndex(System.Int32)">
            <summary>
            Method implementation for ExplodeIndex
            </summary>
            <param name="i"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PyramidSeries.PyramidMode">
            <summary>
            Gets or Sets PyramidMode.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase.UpdateUnderLayingModel(System.String,System.Int32,System.Object)">
            <summary>
            Updates the under laying model.
            </summary>
            <param name="path">The path.</param>
            <param name="index">The index.</param>
            <param name="updatedData">The updated data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase.GetSnapToPoint(System.Double)">
            <summary>
            Gets the snap to point.
            </summary>
            <param name="actualValue">The actual value.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase.UpdateDragSpliterHigh(System.Windows.Shapes.Rectangle)">
            <summary>
            Updates the drag spliter high.
            </summary>
            <param name="rect">The rect.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase.UpdateDragSpliterLow(System.Windows.Shapes.Rectangle)">
            <summary>
            Updates the drag spliter low.
            </summary>
            <param name="rect">The rect.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase.ResetSegmentDragTooltipInfo">
            <summary>
            Resets the segment drag tooltip information.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase.SegmentEnter">
            <summary>
            Occurs when [segment enter].
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase.DragStart">
            <summary>
            Occurs when [drag start].
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase.DragDelta">
            <summary>
            Occurs when [drag delta].
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase.DragEnd">
            <summary>
            Occurs when [drag end].
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.RangeSegmentDraggingBase.PreviewDragEnd">
            <summary>
            Occurs when [preview drag end]..
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.StackingAreaSeries">
            <summary>
             StackingAreaSeries is typically preferred in cases of multiple series of type <see cref="T:Syncfusion.UI.Xaml.Charts.AreaSeries"/>.
             Each Series is then stacked vertically one above the other.
             If there exists only single series ,it will resemble like a simple <see cref="T:Syncfusion.UI.Xaml.Charts.AreaSeries"/> chart.
             </summary>
             <seealso cref="T:Syncfusion.UI.Xaml.Charts.StackingAreaSegment"/>
             <seealso cref="T:Syncfusion.UI.Xaml.Charts.StackingColumnSeries"/>
             <seealso cref="T:Syncfusion.UI.Xaml.Charts.StackingBarSeries"/>
             <seealso cref="T:Syncfusion.UI.Xaml.Charts.AreaSeries"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.StackingAreaSeries.SegmentSelectionBrushProperty">
            <summary>
            Using a DependencyProperty as the backing store for SegmentSelectionBrush.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingAreaSeries.SelectedIndexChanged(System.Int32,System.Int32)">
            <summary>
            Method used to set SegmentSelectionBrush to SelectedIndex segment
            </summary>
            <param name="newIndex"></param>
            <param name="oldIndex"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingAreaSeries.GetDataPoint(System.Windows.Point)">
            <summary>
            This method used to gets the chart data point at a position.
            </summary>
            <param name="mousePos"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingAreaSeries.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when DataSource property changed
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingAreaSeries.CreateSegments">
            <summary>
            Creates the segments of StackingAreaSeries
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingAreaSeries.RaiseSelectionChanging(System.Int32,System.Int32)">
            <summary>
            Method is used to raise SelectionChanging event
            </summary>
            <param name="newIndex"></param>
            <param name="oldIndex"></param>
            <param name="series"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingAreaSeries.RaiseSelectionChangedEvent">
            <summary>
            Called when selection changed in load time
            </summary>
            <param name="segment"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StackingAreaSeries.SelectedIndex">
            <summary>
            Gets or Sets SelectedIndex.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StackingAreaSeries.SegmentSelectionBrush">
            <summary>
            Gets or Sets the selection brush
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingArea100Series.CreateSegments">
            <summary>
            Creates the segments of StackingArea100Series
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.StackingBarSeries">
            <summary>
             StackingBarSeries is typically preferred in cases of multiple series of type <see cref="T:Syncfusion.UI.Xaml.Charts.BarSeries"/>.
             Each Series is then stacked horizontally side by side to each other.
             If there exists olyn single series, it will resemble like a simple <see cref="T:Syncfusion.UI.Xaml.Charts.BarSeries"/> chart.
             </summary>
             <seealso cref="T:Syncfusion.UI.Xaml.Charts.StackingBarSegment"/>
             <seealso cref="T:Syncfusion.UI.Xaml.Charts.StackingColumnSeries"/>
             <seealso cref="T:Syncfusion.UI.Xaml.Charts.StackingAreaSeries"/>
             <seealso cref="T:Syncfusion.UI.Xaml.Charts.BarSeries"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.StackingBarSeries.SegmentSelectionBrushProperty">
            <summary>
            Using a DependencyProperty as the backing store for SegmentSelectionBrush.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingBarSeries.GetDataPointIndex(System.Windows.Point)">
            <summary>
             This method used to get the chart data index at an SfChart co-ordinates
             </summary>
             <param name="index"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingBarSeries.CreateSegments">
            <summary>
            Creates the segments of StackingBarSeries.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StackingBarSeries.SegmentSelectionBrush">
            <summary>
            Gets or Sets selection brush
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StackingBarSeries.SelectedIndex">
            <summary>
            Gets or Sets SelectedIndex.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StackingBarSeries.CustomTemplate">
            <summary>
            Gets or sets the user defined data template for StackingBarSeries
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingBar100Series.CreateSegments">
            <summary>
            Creates the segments of StackingBar100Series.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.StackingColumnSeries">
            <summary>
            StackingColumnSeries is typically preferred in cases of multiple series of type <see cref="T:Syncfusion.UI.Xaml.Charts.ColumnSeries"/>.
            Each series is then stacked vertically one above the other.
            If there exists only single series, it will resemble like a simple <see cref="T:Syncfusion.UI.Xaml.Charts.ColumnSeries"/> chart.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.StackingColumnSegment"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.StackingBarSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.StackingAreaSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ColumnSeries"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.StackingColumnSeries.SegmentSelectionBrushProperty">
            <summary>
            Using a DependencyProperty as the backing store for SegmentSelectionBrush.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.StackingColumnSeries.CustomTemplateProperty">
            <summary>
            Using a DependencyProperty as the backing store for Template.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingColumnSeries.GetDataPointIndex(System.Windows.Point)">
            <summary>
             This method used to get the chart data index at an SfChart co-ordinates
             </summary>
             <param name="index"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingColumnSeries.CreateSegments">
            <summary>
            creates the segments of StackingColumnSeries.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StackingColumnSeries.SegmentSelectionBrush">
            <summary>
            Gets or Sets selection brush
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StackingColumnSeries.SelectedIndex">
            <summary>
            Gets or Sets SelectedIndex.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StackingColumnSeries.CustomTemplate">
            <summary>
            Gets or sets the user defined data template for StackingColumnSeries
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingColumn100Series.CreateSegments">
            <summary>
            Creates the segments of StackingColumn100Series
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.StackingValues">
            <summary>
            Class implementation for StackingValues
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StackingValues.StartValues">
            <summary>
            Get or Set StartValues property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StackingValues.EndValues">
            <summary>
            Get or Set EndValues property
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.StepAreaSeries">
             <summary>
             StepAreaSeries connects its data points,using a continuous line with its underlying areas being filled in.
             </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.AreaSegment"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.SplineAreaSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.StackingAreaSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.RangeAreaSeries"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.StepAreaSeries.SegmentSelectionBrushProperty">
            <summary>
            Using a DependencyProperty as the backing store for SegmentSelectionBrush.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StepAreaSeries.SelectedIndexChanged(System.Int32,System.Int32)">
            <summary>
            Method used to set SegmentSelectionBrush to SelectedIndex segment
            </summary>
            <param name="newIndex"></param>
            <param name="oldIndex"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StepAreaSeries.GetDataPoint(System.Windows.Point)">
            <summary>
            This method used to gets the chart data point at a position.
            </summary>
            <param name="mousePos"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StepAreaSeries.RaiseSelectionChanging(System.Int32,System.Int32)">
            <summary>
            Method is used to raise SelectionChanging event
            </summary>
            <param name="newIndex"></param>
            <param name="oldIndex"></param>
            <param name="series"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StepAreaSeries.RaiseSelectionChangedEvent">
            <summary>
            Called when selection changed in load time
            </summary>
            <param name="segment"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StepAreaSeries.CreateSegments">
            <summary>
            Creates the segments of StepAreaSeries.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StepAreaSeries.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Event to show tooltip
            </summary>
            <param name="e"> Event Arguments</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StepAreaSeries.SelectedIndex">
            <summary>
            Gets or Sets SelectedIndex.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StepAreaSeries.SegmentSelectionBrush">
            <summary>
            Gets or Sets the selection brush
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.StepLineSeries">
            <summary>
            StepLineSeries displays its data points using line segments.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.StepAreaSeries"/>    
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.StepLineSeries.CustomTemplateProperty">
            <summary>
            Using a DependencyProperty as the backing store for Template.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.StepLineSeries.SegmentSelectionBrushProperty">
            <summary>
            Using a DependencyProperty as the backing store for SegmentSelectionBrush.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StepLineSeries.SelectedIndexChanged(System.Int32,System.Int32)">
            <summary>
            Method used to set SegmentSelectionBrush to selectedindex chartsegment
            </summary>
            <param name="newIndex"></param>
            <param name="oldIndex"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StepLineSeries.GetDataPoint(System.Windows.Point)">
            <summary>
            This method used to gets the chart data point at a position.
            </summary>
            <param name="mousePos"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StepLineSeries.CreateSegments">
            <summary>
            Creates the segments of StepLineSeries.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StepLineSeries.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Event to show tooltip
            </summary>
            <param name="e"> Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StepLineSeries.ClearUnUsedStepLineSegment(System.Int32)">
            <summary>
            Removes the unused segments
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StepLineSeries.CustomTemplate">
            <summary>
            Gets or sets the user defined data template for StepLineSeries
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StepLineSeries.SelectedIndex">
            <summary>
            Gets or Sets SelectedIndex.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StepLineSeries.SegmentSelectionBrush">
            <summary>
            Gets or Sets the selection brush
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartDragPointinfo.OnPropertyChanged(System.String)">
            <summary>
            Called when Property changed 
            </summary>
            <param name="name"></param>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.ChartDragPointinfo.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ArrowLine.X1Property">
            <summary>
                Identifies the X1 dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ArrowLine.Y1Property">
            <summary>
                Identifies the Y1 dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ArrowLine.X2Property">
            <summary>
                Identifies the X2 dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ArrowLine.Y2Property">
            <summary>
                Identifies the Y2 dependency property.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ArrowLine.X1">
            <summary>
                Gets or sets the x-coordinate of the ArrowLine start point.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ArrowLine.Y1">
            <summary>
                Gets or sets the y-coordinate of the ArrowLine start point.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ArrowLine.X2">
            <summary>
                Gets or sets the x-coordinate of the ArrowLine end point.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ArrowLine.Y2">
            <summary>
                Gets or sets the y-coordinate of the ArrowLine end point.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ZoomingToolBar.SetItemSource">
            <summary>
            Set Items for ToolBar
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ZoomingToolBar.ChangedOrientation">
            <summary>
            Change the ItemsPanel orientation 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LabelBarStyle.LabelHorizontalAlignment">
            <summary>
            Gets or Sets the HorizontalAlignment of the labels inside the label bar
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LabelBarStyle.Background">
            <summary>
            Gets or Sets the Background the label bar
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LabelBarStyle.SelectedLabelBrush">
            <summary>
            Gets or Sets the color of the labels inside the selected region.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeNavigatorRowDefinition.Height">
            <summary>
            Gets or Sets height of this row.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeNavigatorRowDefinition.Unit">
            <summary>
            Gets or Sets unit of the value specified in Height.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeNavigatorRowDefinition.BorderThickness">
            <summary>
            Gets or Sets thickness of the border.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeNavigatorRowDefinition.BorderStroke">
            <summary>
            Gets or Sets border stroke.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.Orientation">
            <summary>
            Gets or Sets the Orientation for the Scroll Bar
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.Maximum">
            <summary>
            Gets or Sets Maximum Value for Scroll Bar
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.Minimum">
            <summary>
            Gets or Sets Minimum Value for Scroll Bar
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.ViewSizePort">
            <summary>
            Gets or Sets ViewSizePort Value for Scroll Bar
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.SmallChange">
            <summary>
            Gets or Sets SmallChange Value for Scroll Bar Thumb Change When the Small Increase and Decrease Button is Clicked.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.LargeChange">
            <summary>
            Gets or Sets LargeChange Value for Scroll Bar Thumb Change When the Large Increase and Decrease Button is Clicked.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.Scale">
            <summary>
            Gets a value that determines how far the scroll content is scaled. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.RangeStart">
            <summary>
            Gets or Sets RangeStart Value for Scroll Bar.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.RangeEnd">
            <summary>
            Gets or Sets RangeEnd Value for Scroll Bar.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.ScrollButtonVisibility">
            <summary>
            Gets or Sets the visibility of scroll buttons.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ResizableScrollBar.EnableTouchMode">
            <summary>
            Enable or Disable the EnableTouchMode.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfRangeNavigator.ZoomFactor">
            <summary>
            Gets or Sets zoom factor. Value must fall within 0 to 1. It determines delta of visible range.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfRangeNavigator.ZoomPosition">
            <summary>
            Gets or Sets zoom position. Value must fall within 0 to 1. It determines starting value of visible range
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfRangeNavigator.ViewRangeStart">
            <summary>
            Gets or Sets Navigator's Start Thumb value, Value can be DateTime if Minimum and Maximum are set as DateTime values.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfRangeNavigator.ViewRangeEnd">
            <summary>
            Gets or Sets Navigator's End Thumb value, Value can be DateTime if Minimum and Maximum are set as DateTime values.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfRangeNavigator.Content">
            <summary>
            Gets or Sets the content that needs to be hosted inside the Navigator, the content can be any UI element.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.ItemsSourceProperty">
            <summary>
             Identifies the ItemsSource dependency property.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.Intervals">
            <summary>
            Gets or sets intervals collection to render labels of SfDateTimeRangeNavigator.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.Minimum">
            <summary>
            Gets or Sets the Minimum Starting Range of the SfDateTimeRangeNavigator.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.Maximum">
            <summary>
            Gets or Sets the Maximum Ending Range of the SfDateTimeRangeNavigator.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.ItemsSource">
            <summary>
            Gets or sets an object source used to render range.
            </summary>
            <value>The DataSource value.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.SelectedData">
            <summary>
            Gets an IEnumerable source for the particular selected region
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.ShowToolTip">
            <summary>
            Gets or Sets to show ToolTip.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.LeftToolTipTemplate">
            <summary>
            Gets or sets template for the left side ToolTip.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.RightToolTipTemplate">
            <summary>
            Gets or sets template for the right side ToolTip.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.ToolTipLabelFormat">
            <summary>
            Gets or sets label format for ToolTip.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.XBindingPath">
            <summary>
            Gets or Sets the property path of the x data in ItemsSource.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.LowerLevelBarStyle">
            <summary>
            Gets or Sets the styles for the lowerlabelbar of SfDateTimeRangeNavigator.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.HigherLevelBarStyle">
            <summary>
            Gets or Sets the styles for the higherlabelbar of SfDateTimeRangeNavigator.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.HigherLabelStyle">
            <summary>
            Gets or sets the higher label style.
            </summary>
            <value>
            The higher label style.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.LowerLabelStyle">
            <summary>
            Gets or sets the lower label style.
            </summary>
            <value>
            The lower label style.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfDateTimeRangeNavigator.ShowGridLines">
            <summary>
            Gets or Sets a value that indicates whether to show grid lines inside the content.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Interval.IntervalType">
            <summary>
            Gets or sets interval type in which the navigator values should be displayed.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChartResizableBar.DragCompleted(System.Object,System.Windows.Controls.Primitives.DragCompletedEventArgs)">
            <summary>
            Middles the thumb drag completed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Controls.Primitives.DragCompletedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChartResizableBar.SetZoomingChanges(System.Double,System.Double)">
            <summary>
            Zoom factor and zoom position is set.
            </summary>
            <param name="newZoomPosition"></param>
            <param name="newZoomFactor"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChartResizableBar.RaiseZoomChangingEvent(System.Double,System.Double)">
            <summary>
            Raised when zooming occurs.
            </summary>
            <param name="newPosition"></param>
            <param name="newFactor"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChartResizableBar.RaiseZoomChangedEvent(System.Double,System.Double)">
            <summary>
            Raised when zooming is done.
            </summary>
            <param name="prevPosition"></param>
            <param name="prevFactor"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChartResizableBar.RaisePanChangedevent(System.Double)">
            <summary>
            Raised when panning is changed.
            </summary>
            <param name="zoomPosition"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChartResizableBar.RaisePanChangingEvent(System.Double,System.Double)">
            <summary>
            Raised when panning occurs.
            </summary>
            <param name="prevPosition"></param>
            <param name="newPosition"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChartResizableBar.ZoomPosition">
            <summary>
            Gets or Sets zoom position. Value must fall within 0 to 1. It determines starting value of visible range
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChartResizableBar.ThumbLabelTemplate">
            <summary>
            Gets or Sets Template For Visible Range Label View.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChartResizableBar.ThumbLabelVisibility">
            <summary>
            Gets or Sets Bool Value To Enable Or Disable The Visible Range Label View.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChartResizableBar.ZoomFactor">
            <summary>
            Gets or Sets zoom factor. Value must fall within 0 to 1. It determines delta of visible range.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.DoughnutSegment">
            <summary>
            Class implementation for DoughnutSegment
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DoughnutSegment.IsExplodedProperty">
            <summary>
            Using a DependencyProperty as the backing store for IsExploded.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoughnutSegment.#ctor(System.Double,System.Double,Syncfusion.UI.Xaml.Charts.DoughnutSeries)">
            <summary>
            Called when instance created for DoughnutSegment
            </summary>
            <param name="startAngle"></param>
            <param name="endAngle"></param>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoughnutSegment.IsPointInDoughnutSegment(System.Double,System.Double)">
            <summary>
            Method used to check the given co-ordinates lies in doughnut segment or not
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoughnutSegment.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>
            retuns UIElement
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoughnutSegment.SetVisualBindings(System.Windows.Shapes.Shape)">
            <summary>
            Method Implementation for set  Binding to CgartSegments properties
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoughnutSegment.GetRenderedVisual">
            <summary>
            Gets the UIElement used for rendering this segment.
            </summary>
            <returns>reurns UIElement</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoughnutSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="transformer">Represents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoughnutSegment.OnSizeChanged(System.Windows.Size)">
            <summary>
            Called whenever the segment's size changed. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="size"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DoughnutSegment.IsExploded">
            <summary>
            Gets or Sets a value that indicates whether this segment is exploded.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DoughnutSegment.StartAngle">
            <summary>
            Gets the start angle of the <see cref="T:Syncfusion.UI.Xaml.Charts.DoughnutSegment"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DoughnutSegment.EndAngle">
            <summary>
            Gets the end angle of the <see cref="T:Syncfusion.UI.Xaml.Charts.PieSegment"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DoughnutSegment.AngleOfSlice">
            <summary>
            Gets the actual angle the <see cref="T:Syncfusion.UI.Xaml.Charts.PieSegment"/> 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DoughnutSegment.XData">
            <summary>
            Gets the X-Value of the <see cref="T:Syncfusion.UI.Xaml.Charts.PieSegment"/>
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DoughnutSegment.YData">
            <summary>
            Gets the Y-Value of the <see cref="T:Syncfusion.UI.Xaml.Charts.PieSegment"/>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ErrorBarSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="transformer">Reresents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ErrorBarSegment.OnSizeChanged(System.Windows.Size)">
            <summary>
            Called whenever the segment's size changed. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.FastBarBitmapSegment">
            <summary>
            Represents chart fast bar bitmap segment.
            </summary>
            <remarks>Class instance is created automatically by WinRT Chart building system.</remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FastBarBitmapSeries"/>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.FastCandleBitmapSegment">
            <summary>
            Represents chart fast candle bitmap segment.
            </summary>
            <remarks>Class instance is created automatically by WinRT Chart building system.</remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastCandleBitmapSegment.GetSegmentBrush(System.Int32)">
            <summary>
            Gets the segment color based on data point
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSegment">
            <summary>
            Represents chart fast hilo bitmap segment.
            </summary>
            <remarks>Class instance is created automatically by WINRT Chart building system.</remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSegment.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSegment.#ctor(Syncfusion.UI.Xaml.Charts.ChartSeries)">
            <summary>
            Called when instance created for FastColumnSegment
            </summary>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSegment.#ctor(System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},Syncfusion.UI.Xaml.Charts.ChartSeries)">
            <summary>
            Called when instance created for FastColumnSegment with following arguments
            </summary>
            <param name="x1Values"></param>
            <param name="y1Values"></param>
            <param name="x2Values"></param>
            <param name="y2Values"></param>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSegment.SetVisualBindings(System.Windows.Shapes.Shape)">
            <summary>
            Method Implementation for set  Binding to CgartSegments properties
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSegment.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>
            retuns UIElement
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSegment.SetData(System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double})">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="x1Values"></param>
            <param name="y1Values"></param>
            <param name="x2Values"></param>
            /// <param name="y2Values"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSegment.GetRenderedVisual">
            <summary>
            Gets the UIElement used for rendering this segment.
            </summary>
            <returns>reurns UIElement</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="transformer">Reresents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastColumnBitmapSegment.OnSizeChanged(System.Windows.Size)">
            <summary>
            Called whenever the segment's size changed. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.FastHiLoOpenCloseSegment">
            <summary>
            Represents chart fast hilo open close bitmap segment.
            </summary>
            <remarks>Class instance is created automatically by WINRT Chart building system.</remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FastLineBitmapSegment"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FastHiLoSegment"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoOpenCloseSegment.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoOpenCloseSegment.#ctor(Syncfusion.UI.Xaml.Charts.AdornmentSeries)">
            <summary>
            Called when instance created for FastHiLoOpenCloseSegment
            </summary>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoOpenCloseSegment.#ctor(System.Collections.Generic.List{System.Double},System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},Syncfusion.UI.Xaml.Charts.AdornmentSeries)">
            <summary>
            Called when instance created for FastHiLoOpenCloseSegment with following arguments
            </summary>
            <param name="xValues"></param>
            <param name="highValues"></param>
            <param name="lowValues"></param>
            <param name="openValues"></param>
            <param name="closeValues"></param>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoOpenCloseSegment.SetData(System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double})">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="xValues"></param>
            <param name="yHiValues"></param>
            <param name="yLowValues"></param>
            /// <param name="yOpenValues"></param>
            /// <param name="yCloseValues"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoOpenCloseSegment.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>
            retuns UIElement
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoOpenCloseSegment.SetVisualBindings(System.Windows.Shapes.Shape)">
            <summary>
            Method Implementation for set  Binding to CgartSegments properties
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoOpenCloseSegment.GetRenderedVisual">
            <summary>
            Gets the UIElement used for rendering this segment.
            </summary>
            <returns>reurns UIElement</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoOpenCloseSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="transformer">Reresents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoOpenCloseSegment.GetSegmentBrush(System.Int32)">
            <summary>
            Gets the segment color based on data point
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoOpenCloseSegment.OnSizeChanged(System.Windows.Size)">
            <summary>
            Called whenever the segment's size changed. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.FastHiLoSegment">
            <summary>
            Represents chart fast hilo bitmap segment.
            </summary>
            <remarks>Class instance is created automatically by WINRT Chart building system.</remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoSegment.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoSegment.#ctor(Syncfusion.UI.Xaml.Charts.ChartSeries)">
            <summary>
            Called when instance created for FastHiLoSegment
            </summary>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoSegment.#ctor(System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},Syncfusion.UI.Xaml.Charts.AdornmentSeries)">
            <summary>
            Called when instance created for FastHiLoSegment
            </summary>
            <param name="xValues"></param>
            <param name="hiValues"></param>
            <param name="loValues"></param>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoSegment.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>
            retuns UIElement
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoSegment.SetData(System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double})">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="xVals"></param>
            <param name="hiVals"></param>
            <param name="lowVals"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoSegment.SetVisualBindings(System.Windows.Shapes.Shape)">
            <summary>
            Method Implementation for set  Binding to CgartSegments properties
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoSegment.GetRenderedVisual">
            <summary>
            Gets the UIElement used for rendering this segment.
            </summary>
            <returns>reurns UIElement</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="transformer">Reresents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastHiLoSegment.OnSizeChanged(System.Windows.Size)">
            <summary>
            Called whenever the segment's size changed. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.FastScatterBitmapSegment">
            <summary>
            Represents chart fast scatter bitmap segment.
            </summary>
            <remarks>Class instance is created automatically by WINRT Chart building system.</remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FastScatterBitmapSeries"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastScatterBitmapSegment.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastStackingColumnSegment.#ctor(System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},Syncfusion.UI.Xaml.Charts.ChartSeries)">
            <summary>
            Called when instance created for FastStackingColumnSegment with following arguments
            </summary>
            <param name="x1Values"></param>
            <param name="y1Values"></param>
            <param name="x2Values"></param>
            <param name="y2Values"></param>
            <param name="series"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.FastStepLineBitmapSegment">
            <summary>
            Represents chart fast stepline bitmap segment.
            </summary>
            <remarks>Class instance is created automatically by WINRT Chart building system.</remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FastStepLineBitmapSeries"/>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.FunnelSegment">
            <summary>
            Represents chart funnel segment.
            </summary>
            <remarks>Class instance is created automatically by WINRT Chart building system.</remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FunnelSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.PyramidSegment"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.PyramidSeries"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FunnelSegment.height">
            WP-1076[Data marker label position support for funnel series]
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FunnelSegment.#ctor(System.Double,System.Double,Syncfusion.UI.Xaml.Charts.FunnelSeries,System.Boolean)">
            <summary>
            Defines the funnel path
            </summary>
            <param name="y"></param>
            <param name="height"></param>
            <param name="funnelSeries"></param>
            <param name="isExploded"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FunnelSegment.#ctor(System.Double,System.Double,System.Double,System.Double,Syncfusion.UI.Xaml.Charts.FunnelSeries,System.Boolean)">
            <summary>
            Defines the funnel path
            </summary>
            <param name="y"></param>
            <param name="height"></param>
            <param name="widthTop"></param>
            <param name="widthBottom"></param>
            <param name="funnelSeries"></param>
            <param name="isExploded"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FunnelSegment.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>
            retuns UIElement
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FunnelSegment.SetVisualBindings(System.Windows.Shapes.Shape)">
            <summary>
            Method Implementation for set  Binding to CgartSegments properties
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FunnelSegment.GetRenderedVisual">
            <summary>
            Gets the UIElement used for rendering this segment.
            </summary>
            <returns>reurns UIElement</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FunnelSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="transformer">Reresents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FunnelSegment.OnSizeChanged(System.Windows.Size)">
            <summary>
            Called whenever the segment's size changed. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FunnelSegment.IsExploded">
            <summary>
            get or Set Isexploded property
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.PyramidSegment">
            <summary>
            Represents chart pyramid segment.
            </summary>
            <remarks>Class instance is created automatically by WINRT Chart building system.</remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.PyramidSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FunnelSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FunnelSegment"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.PyramidSegment.height">
            WP-1076[Data marker label position support for pyramid series]
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PyramidSegment.#ctor(System.Double,System.Double,System.Double,Syncfusion.UI.Xaml.Charts.PyramidSeries,System.Boolean)">
            <summary>
            Defines the pyramid path
            </summary>
            <param name="y"></param>
            <param name="height"></param>
            <param name="explodedOffset"></param>
            <param name="series"></param>
            <param name="isExploded"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PyramidSegment.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>
            retuns UIElement
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PyramidSegment.SetVisualBindings(System.Windows.Shapes.Shape)">
            <summary>
            Method Implementation for set  Binding to PyramidSegments properties
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PyramidSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="transformer">Reresents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PyramidSegment.GetRenderedVisual">
            <summary>
            Gets the UIElement used for rendering this segment.
            </summary>
            <returns>reurns UIElement</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PyramidSegment.OnSizeChanged(System.Windows.Size)">
            <summary>
            Called whenever the segment's size changed. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PyramidSegment.XData">
            <summary>
            Gets the X-Value of the <see cref="T:Syncfusion.UI.Xaml.Charts.PieSegment"/>
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PyramidSegment.YData">
            <summary>
            Gets the Y-Value of the <see cref="T:Syncfusion.UI.Xaml.Charts.PieSegment"/>
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.RangeColumnSegment">
            <summary>
            Represents chart range column segment.
            </summary>
            <remarks>Class instance is created automatically by WINRT Chart building system.</remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.RangeColumnSeries"/>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ColumnSegment">
            <summary>
            Represents chart column segment.
            </summary>
            <remarks>Class instance is created automatically by WINRT Chart building system.</remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ColumnSeries"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ColumnSegment.Left">
            <summary>
            Variables declarations
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ColumnSegment.Top">
            <summary>
            Variables declarations
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ColumnSegment.Bottom">
            <summary>
            Variables declarations
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ColumnSegment.Right">
            <summary>
            Variables declarations
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ColumnSegment.RectSegment">
            <summary>
            RectSegment property declarations
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnSegment.#ctor(System.Double,System.Double,System.Double,System.Double,Syncfusion.UI.Xaml.Charts.ColumnSeries)">
            <summary>
            Defines the Column Rectangle
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnSegment.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Called when instance created for ColumnSegment
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnSegment.SetData(System.Double[])">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="Values"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnSegment.SetVisualBindings(System.Windows.Shapes.Shape)">
            <summary>
            method implementation for Set Bindings to properties in ColumnSegement
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnSegment.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>
            retuns UIElement
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnSegment.GetRenderedVisual">
            <summary>
            Gets the UIElement used for rendering this segment.
            </summary>
            <returns>reurns UIElement</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="transformer">Represents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnSegment.OnSizeChanged(System.Windows.Size)">
            <summary>
            Called whenever the segment's size changed. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ColumnSegment.XData">
            <summary>
            Get or Set XData property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ColumnSegment.YData">
            <summary>
            Get or Set YData property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ColumnSegment.Width">
            <summary>
            Get or Set Width property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ColumnSegment.Height">
            <summary>
            Get or Set Height property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ColumnSegment.RectX">
            <summary>
            Get or Set RectX property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ColumnSegment.RectY">
            <summary>
            Get or Set RectY property
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeColumnSegment.#ctor(System.Double,System.Double,System.Double,System.Double,Syncfusion.UI.Xaml.Charts.RangeColumnSeries,System.Object)">
            <summary>
            Called when instance created for RangeColumnSegment
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="series"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.StackingBarSegment">
            <summary>
            Represents chart stacking bar segment.
            </summary>
            <remarks>Class instance is created automatically by WINRT Chart building system.</remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.StackingBarSeries"/>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.BarSegment">
            <summary>
            Represents chart bar segment.
            </summary>
            <remarks>Class instance is created automatically by WINRT Chart building system.</remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.BarSeries"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.BarSegment.Left">
            <summary>
            Variables declarations
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.BarSegment.Top">
            <summary>
            Variables declarations
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.BarSegment.Bottom">
            <summary>
            Variables declarations
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.BarSegment.Right">
            <summary>
            Variables declarations
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.BarSegment.barSegment">
            <summary>
            barSegment variable declaration
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.BarSegment.SegmentCanvas">
            <summary>
            Variable declaration for SegmentCanvas
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.BarSegment.segmentSize">
            <summary>
            Variable declaration for segment width and height
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BarSegment.#ctor">
            <summary>
            Constructor 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BarSegment.#ctor(System.Double,System.Double,System.Double,System.Double,Syncfusion.UI.Xaml.Charts.BarSeries)">
            <summary>
            Defines a Column Rect and Range
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BarSegment.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Called when instance created for BarSegment with following Parameters
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BarSegment.SetData(System.Double[])">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="Values"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BarSegment.SetVisualBindings(System.Windows.Shapes.Shape)">
            <summary>
            Method Implementation for set  Binding to CgartSegments properties
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BarSegment.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>
            retuns UIElement
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BarSegment.GetRenderedVisual">
            <summary>
            Gets the UIElement used for rendering this segment.
            </summary>
            <returns>reurns UIElement</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BarSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="transformer">Reresents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BarSegment.OnSizeChanged(System.Windows.Size)">
            <summary>
            Called whenever the segment's size changed. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BarSegment.XData">
            <summary>
            Gets the x data of this segment
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BarSegment.YData">
            <summary>
            Gets the y data of this segment
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BarSegment.Width">
            <summary>
            Gets or sets the width of this segment
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BarSegment.Height">
            <summary>
            Gets or sets the height of this segment
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BarSegment.RectX">
            <summary>
            Gets or sets the RectX property of bar segment
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BarSegment.RectY">
            <summary>
            Gets or sets the RectY property of bar segment
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingBarSegment.#ctor(System.Double,System.Double,System.Double,System.Double,Syncfusion.UI.Xaml.Charts.StackingBarSeries)">
            <summary>
            Called when instance created for StackingBarSegment
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="series"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.StepAreaSegment">
            <summary>
            Class implementation for StepAreaSegment
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StepAreaSegment.#ctor(System.Collections.Generic.List{System.Windows.Point},Syncfusion.UI.Xaml.Charts.StepAreaSeries)">
            <summary>
            Called when instance created for StepAreaSegment
            </summary>
            <param name="pointsCollection"></param>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StepAreaSegment.SetData(System.Collections.Generic.List{System.Windows.Point})">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="StepAreaPoints"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StepAreaSegment.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>
            retuns UIElement
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StepAreaSegment.GetRenderedVisual">
            <summary>
            Gets the UIElement used for rendering this segment.
            </summary>
            <returns>reurns UIElement</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StepAreaSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="transformer">Reresents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StepAreaSegment.SetVisualBindings(System.Windows.Shapes.Shape)">
            <summary>
            Method Implementation for set  Binding to CgartSegments properties
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StepAreaSegment.OnSizeChanged(System.Windows.Size)">
            <summary>
            Called whenever the segment's size changed. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.StepLineSegment">
            <summary>
            Represents chart StepLine segment.
            </summary>
            <remarks>Class instance is created automatically by WINRT Chart building system.</remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.StepLineSeries"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.StepLineSegment.poly">
            <summary>
            Poly property declaration
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StepLineSegment.#ctor(System.Windows.Point,System.Windows.Point,System.Windows.Point,Syncfusion.UI.Xaml.Charts.StepLineSeries)">
            <summary>
            Called when instance created for SteplineSegment
            </summary>
            <param name="point1"></param>
            <param name="stepPoint"></param>
            <param name="point2"></param>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StepLineSegment.SetData(System.Collections.Generic.List{System.Windows.Point})">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="linePoints"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StepLineSegment.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>
            retuns UIElement
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StepLineSegment.GetRenderedVisual">
            <summary>
            Gets the UIElement used for rendering this segment.
            </summary>
            <returns>reurns UIElement</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StepLineSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="transformer">Reresents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StepLineSegment.OnSizeChanged(System.Windows.Size)">
            <summary>
            Called whenever the segment's size changed. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StepLineSegment.X1">
            <summary>
            Represents x1 point of this segment
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StepLineSegment.X2">
            <summary>
            Represents x2 point of this segment
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StepLineSegment.Y1">
            <summary>
            Represents y1 point of this segment
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StepLineSegment.Y2">
            <summary>
            Represents y2 point of this segment
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StepLineSegment.X3">
            <summary>
            Represents stepx point of this segment
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StepLineSegment.Y3">
            <summary>
            Represents stepy point of this segment
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StepLineSegment.X1Data">
            <summary>
            Gets or sets x1 values of this segment
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StepLineSegment.XData">
            <summary>
            Gets or sets x values of this segment
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StepLineSegment.Y1Data">
            <summary>
            Gets or sets y1 values of this segment
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StepLineSegment.YData">
            <summary>
            Gets or sets y values
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.SplineSegment">
            <summary>
            Represents chart Spline segment.
            </summary>
            <remarks>Class instance is created automatically by WINRT Chart building system.</remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.SplineSeries"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineSegment.#ctor(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point,Syncfusion.UI.Xaml.Charts.SplineSeries)">
            <summary>
            Called when instance created for SplineSegment
            </summary>
            <param name="point1"></param>
            <param name="point2"></param>
            <param name="point3"></param>
            <param name="point4"></param>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineSegment.SetData(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point)">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="point1"></param>
            <param name="point2"></param>
            <param name="point3"></param>
            <param name="point4"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineSegment.GetYRange(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            return doubleRange values from the given values
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="x3"></param>
            <param name="y3"></param>
            <param name="x4"></param>
            <param name="y4"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineSegment.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>
            retuns UIElement
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineSegment.SetVisualBindings(System.Windows.Shapes.Shape)">
            <summary>
            Method Implementation for set  Binding to CgartSegments properties
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineSegment.GetRenderedVisual">
            <summary>
            Gets the UIElement used for rendering this segment.
            </summary>
            <returns>reurns UIElement</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="transformer">Reresents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineSegment.OnSizeChanged(System.Windows.Size)">
            <summary>
            Called whenever the segment's size changed. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SplineSegment.P1">
            <summary>
            Represents start point of this segment
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SplineSegment.Q1">
            <summary>
            Represents first bezier point of this segment
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SplineSegment.Q2">
            <summary>
            Represents second bezier point of this segment
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SplineSegment.P2">
            <summary>
            Represents third bezier point of this segment
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SplineSegment.X1Data">
            <summary>
            Gets or sets x1 values of this segment
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SplineSegment.XData">
            <summary>
            Gets or sets x values of this segment
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SplineSegment.YData">
            <summary>
            Gets or sets the y values
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SplineSegment.Y1Data">
            <summary>
            Gets or sets the y1 values
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SplineSegment.Data">
            <summary>
            Gets or sets SegmentGeometry property of this segment 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTooltip.GetEnableAnimation(System.Windows.UIElement)">
            <summary>
            Get the Enable Animation 
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTooltip.SetEnableAnimation(System.Windows.UIElement,System.Boolean)">
            <summary>
            Set the Enable Animation
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTooltip.GetHorizontalAlignment(System.Windows.UIElement)">
            <summary>
            Get the HorizontalAlignment
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTooltip.SetHorizontalAlignment(System.Windows.UIElement,System.Windows.HorizontalAlignment)">
            <summary>
            Set the HorizontalAlignment
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTooltip.GetVerticalAlignment(System.Windows.UIElement)">
            <summary>
            Get the VerticalAlignment
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTooltip.SetVerticalAlignment(System.Windows.UIElement,System.Windows.VerticalAlignment)">
            <summary>
            Set the VerticalAlignment
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTooltip.GetTooltipMargin(System.Windows.UIElement)">
            <summary>
            Get TooltipMargin value
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTooltip.SetTooltipMargin(System.Windows.UIElement,System.Windows.Thickness)">
            <summary>
            Set TooltipMargin value
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTooltip.GetShowDuration(System.Windows.DependencyObject)">
            <summary>
            Get ShowDuration value
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTooltip.SetShowDuration(System.Windows.DependencyObject,System.Int32)">
            <summary>
            Set ShowDuration value
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTooltip.GetInitialShowDelay(System.Windows.DependencyObject)">
            <summary>
            Get InitialShowDelay value
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTooltip.SetInitialShowDelay(System.Windows.DependencyObject,System.Int32)">
            <summary>
            Set InitialShowDelay value
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTooltip.GetHorizontalOffset(System.Windows.DependencyObject)">
            <summary>
            Get HorizontalOffset value
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTooltip.SetHorizontalOffset(System.Windows.DependencyObject,System.Double)">
            <summary>
            Set HorizontalOffset value
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTooltip.GetVerticalOffset(System.Windows.DependencyObject)">
            <summary>
            Get VerticalOffset value
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTooltip.SetVerticalOffset(System.Windows.DependencyObject,System.Double)">
            <summary>
            Set VerticalOffset value
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTrendlinePanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the Arrange pass of Silverlight layout. Classes can override this method to define their own Arrange pass behavior.
            </summary>
            <returns>
            The actual size that is used after the element is arranged in layout.
            </returns>
            <param name="finalSize">The final area within the parent that this object should use to arrange itself and its children.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SparklineBase.TransformToVisible(System.Double,System.Double)">
            <summary>
            Creates the screen point from data point.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SparklineBase.GeneratePoints(System.String)">
            <summary>
            Generate the points from the items source
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SparklineBase.SetIndividualPoints(System.Int32,System.Object,System.Boolean,System.String)">
            <summary>
            set the individual points to the existing collection
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SparklineBase.UpdateArea">
            <summary>
            To update the sparkline
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SparklineBase.SetBinding(System.Windows.Shapes.Shape)">
            <summary>
            To set the visual binding for the element
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SparklineBase.RenderSegments">
            <summary>
            To render the visual segments
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SparklineBase.EnableAnimation">
            <summary>
            Gets or sets a value to animate the sparkline on loading and whenever ItemsSource change.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SparklineBase.Interior">
            <summary>
            Gets or Sets the brush to paint the interior of the sparkline.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SparklineBase.RangeBandBrush">
            <summary>
            Gets or sets the range band brush.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SparklineBase.BandRangeEnd">
            <summary>
            Gets or sets the maximum range band value in Y axis.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SparklineBase.BandRangeStart">
            <summary>
            Gets or sets the minimum range band value in Y axis.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SparklineBase.MinimumYValue">
            <summary>
            Gets or sets the minimum value for Y axis.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SparklineBase.MaximumYValue">
            <summary>
            Gets or sets the maximum value for Y axis.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SparklineBase.StrokeThickness">
            <summary>
            Gets or Sets stroke thickness for segments
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SparklineBase.Stroke">
            <summary>
            Gets or Sets the brush to paint outline of the sparkline.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SparklineBase.ItemsSource">
            <summary>
            Gets or sets an IEnumerable source used to generate sparkline.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SparklineBase.YBindingPath">
            <summary>
            Gets or Sets the property path to retrieve y data from ItemsSource.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SparklineBase.EmptyPointValue">
            <summary>
            Gets or Sets a value that determines how to calculate value for empty point.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ColumnBase.HighlightSegment">
            <summary>
            Gets or sets value whether to highlight segment on mouse move.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.MarkerBase.XBindingPath">
            <summary>
            Gets or Sets the property path of the x data in ItemsSource.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.MarkerBase.AxisStyle">
            <summary>
            Gets or sets the axis line style.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.MarkerBase.ShowAxis">
            <summary>
            Gets or Sets a value whether to show/hide axis
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.MarkerBase.AxisOrigin">
            <summary>
            Gets or Sets axis origin
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.MarkerBase.TrackBallStyle">
            <summary>
            Gets or sets the track ball style.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.MarkerBase.LineStyle">
            <summary>
            Gets or Sets line style for track ball.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.MarkerBase.ShowTrackBall">
            <summary>
            Gets or sets a value for show track ball.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.MarkerBase.MarkerVisibility">
            <summary>
            Gets or sets the marker visibility.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.MarkerBase.MarkerTemplateSelector">
            <summary>
            Gets or Sets marker template selector to customize the each markers
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfColumnSparkline.XBindingPath">
            <summary>
            Gets or Sets the property path of the x data in ItemsSource.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfColumnSparkline.AxisStyle">
            <summary>
            Gets or sets the axis line style.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfColumnSparkline.ShowAxis">
            <summary>
            Gets or Sets show axis
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfColumnSparkline.AxisOrigin">
            <summary>
            Gets or Sets axis origin
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfColumnSparkline.SegmentTemplateSelector">
            <summary>
            Gets or sets the segment template selector to customize the each segments.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfWinLossSparkline.NegativePointBrush">
            <summary>
            Gets or Sets the brush to paint the interior of the negative segment(s).
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfWinLossSparkline.NeutralBrush">
            <summary>
            Gets or Sets the brush to paint the interior of the neutral segment(s).
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.TemplateSelector.MaximumY">
            <summary>
            Gets the maximum Y axis value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.TemplateSelector.MinimumY">
            <summary>
            Gets the minimum Y axis value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.TemplateSelector.Sparkline">
            <summary>
            Gets the sparkline.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.TemplateSelector.DataCount">
            <summary>
            Gets the data count.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.TemplateSelector.MinimumX">
            <summary>
            Gets the minimum X axis value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SegmentTemplateSelector.FirstPointBrush">
            <summary>
            Gets or Sets the brush to paint the first point of the sparkline.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SegmentTemplateSelector.LastPointBrush">
            <summary>
            Gets or Sets the brush to paint the last point of the sparkline.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SegmentTemplateSelector.NegativePointBrush">
            <summary>
            Gets or Sets the brush to paint the negative points of the sparkline.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SegmentTemplateSelector.HighPointBrush">
            <summary>
            Gets or Sets the brush to paint the high points of the sparkline.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SegmentTemplateSelector.LowPointBrush">
            <summary>
            Gets or Sets the brush to paint the low point(s) of the sparkline.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.MarkerTemplateSelector.MarkerBrush">
            <summary>
            Gets or Sets the brush to paint the markers of the sparkline.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.MarkerTemplateSelector.MarkerTemplate">
            <summary>
            Gets or sets the marker template.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.MarkerTemplateSelector.MarkerHeight">
            <summary>
            Gets or sets height of the marker.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.MarkerTemplateSelector.MarkerWidth">
            <summary>
            Gets or sets width of the marker.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TrendlineBase.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>. In simplest terms, this means the method is called just before a UI element displays in an application. For more information, see Remarks.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TrendlineBase.UpdateLegendIconTemplate(System.Boolean)">
            <summary>
            Update Legend Ion Template method
            </summary>
            <param name="iconChanged"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TrendlineBase.UpdateElements">
            <summary>
            Update Trendline elements method
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TrendlineBase.UpdatePolynomialTrendSource">
            <summary>
            Update Polynomial trend source
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TrendlineBase.GaussJordanEliminiation(System.Double[0:,0:],System.Double[])">
            <summary>
            Calculate Gauss Jordan Eliminiation value
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TrendlineBase.CalculatePolynomialTrendLine">
            <summary>
            Calculate Polynomial Trendline with order
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TrendlineBase.CreatePolynomialSegments">
            <summary>
            Create the polynomial segments
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TrendlineBase.UpdateLogarithmicTrendSource">
            <summary>
            Update Logarithmic Trend Source
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TrendlineBase.CalculateLogarithmicTrendline">
            <summary>
            Caluculate Logarithmic Value and Draw Trendline
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TrendlineBase.UpdateExponentialTrendSource">
            <summary>
            Update Exponential Trend Source
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TrendlineBase.CalculateExponentialTrendline">
            <summary>
            Calculate Exponential Value and Draw Trendline
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TrendlineBase.UpdatePowerTrendSource">
            <summary>
            Update Power TrendSource
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TrendlineBase.CalculatePowerTrendline">
            <summary>
            Calculate Power Value and Draw Trendline
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TrendlineBase.UpdateTrendSource">
            <summary>
            Update Linear Trend Source
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TrendlineBase.CalculateLinearTrendline">
            <summary>
            Calculate Linear Value and Draw Trendline
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TrendlineBase.CalculateSumXAndYValue">
            <summary>
            Calculate Sum of x and y values
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TrendlineBase.CalculateTrendXSegment(System.Int32)">
            <summary>
            Calculate Trend Segment X values
            </summary>
            <param name="n"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TrendlineBase.GetLinearYValue(System.Double)">
            <summary>
            Get Linear Y Value
            </summary>
            <param name="xValue"></param>
            <returns>Segment y values</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TrendlineBase.GetLogarithmicYValue(System.Double)">
            <summary>
            Get Logarithmic Y Value
            </summary>
            <param name="xValue"></param>
            <returns>Segment y values</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TrendlineBase.GetExponentialYValue(System.Double)">
            <summary>
            Get Exponential Y Value
            </summary>
            <param name="xValue"></param>
            <returns>Segment y values</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TrendlineBase.GetPowerYValue(System.Double)">
            <summary>
            Get Power Y Value
            </summary>
            <param name="xValue"></param>
            <returns>Segment y values </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TrendlineBase.GetPolynomialYValue(System.Double[],System.Double)">
            <summary>
            Get polynomial y value
            </summary>
            <param name="a"></param>
            <param name="x"></param>
            <returns>Segment y values</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TrendlineBase.CreateSpline">
            <summary>
            Create Spline Segment of Trendline
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TrendlineBase.NaturalSpline(System.Collections.Generic.List{System.Double},System.Collections.Generic.List{System.Double},System.Double[]@)">
            <summary>
            Coefficient Of Natural Spline Segment
            </summary>
            <param name="xValues"></param>
            <param name="yValues"></param>
            <param name="ys2"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TrendlineBase.GetBezierControlPoints(System.Windows.Point,System.Windows.Point,System.Double,System.Double,System.Windows.Point@,System.Windows.Point@)">
            <summary>
            Returns the controlPoints of the curve
            </summary>
            <param name="point1"></param>
            <param name="point2"></param>
            <param name="ys1"></param>
            <param name="ys2"></param>
            <param name="controlPoint1"></param>
            <param name="controlPoint2"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.TrendlineBase.IsTrendlineVisible">
            <summary>
            Gets or Sets visibility for trendline.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.TrendlineBase.VisibilityOnLegend">
            <summary>
            Gets or Sets a value that determines whether to create a legend item for this trendline. By default, legend item will be visible for this trendline.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.UI.Xaml.Charts.TrendlineBase.LegendIconTemplate" -->
        <member name="P:Syncfusion.UI.Xaml.Charts.TrendlineBase.LegendIcon">
            <summary>
            Gets or Sets ChartLegendIcon to be displayed in associated legend item.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.TrendlineBase.Label">
            <summary>
            Gets or Sets the label that will be displayed in the associated legend item.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.TrendlineBase.Type">
            <summary>
            Gets or Sets the type of the trendline.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.TrendlineBase.Stroke">
            <summary>
            Gets or Sets the brush to paint the stroke of the trendline.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.TrendlineBase.StrokeThickness">
            <summary>
            Gets or Sets the StrokeThickness of the trendline.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.TrendlineBase.StrokeDashArray">
            <summary>
            Gets or sets a collection of Double values that indicates the pattern of
            dashes and gaps that is used to outline shapes.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.UI.Xaml.Charts.TrendlineBase.ForwardForecast" -->
        <member name="P:Syncfusion.UI.Xaml.Charts.TrendlineBase.BackwardForecast">
             <summary>
             Gets or Sets the BackwardForecast of the trendline.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.TrendlineBase.PolynomialOrder">
            <summary>
            Gets or Sets the Polynomial Order of the trendline , it caluclate the order based equation and we are able to given order as 2 to 6 only.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.IRangeAxis`1">
            <summary>
            Inteface implementation for IRangeAxis
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.IRangeAxis`1.Minimum">
            <summary>
            Get or Set Minimum property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.IRangeAxis`1.Maximum">
            <summary>
            Get or Set Maximum property
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.IChartAxis">
            <summary>
            Interface implementation for IChartAxis
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.IChartAxis.VisibleLabels">
            <summary>
            Get or Set VisibleLabels property
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.IChartSeries">
            <summary>
            Interface implementation for IChartSeries
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.IChartSeries.ItemsSource">
            <summary>
            Get or Set ItemsSource property
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.Clear(System.Windows.Media.Imaging.WriteableBitmap)">
            <summary>
            Clears the BitmapContext, filling the underlying bitmap with zeros
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.DrawLineBresenham(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color,System.Collections.Generic.List{System.Int32})">
            <summary>
            Draws a colored line by connecting two points using the Bresenham algorithm.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.DrawLineBresenham(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color,System.Collections.Generic.List{System.Int32},System.Windows.Rect)">
            <summary>
            Draws a colored line by connecting two points using the Bresenham algorithm.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.DrawLineDDA(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color)">
            <summary>
            Draws a colored line by connecting two points using a DDA algorithm (Digital Differential Analyzer).
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.DrawLineDDA(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a colored line by connecting two points using a DDA algorithm (Digital Differential Analyzer).
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.DrawLine(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color)">
            <summary>
            Draws a colored line by connecting two points using an optimized DDA.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.DrawLine(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a colored line by connecting two points using an optimized DDA.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.DrawLine(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a colored line by connecting two points using an optimized DDA. 
            Uses the pixels array and the width directly for best performance.
            </summary>
            <param name="context">The context containing the pixels as int RGBA value.</param>
            <param name="pixelWidth">The width of one scanline in the pixels array.</param>
            <param name="pixelHeight">The height of the bitmap.</param>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.DrawLineAa(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color,System.Collections.Generic.List{System.Int32})">
            <summary> 
            Draws an anti-aliased line, using an optimized version of Gupta-Sproull algorithm 
            From http://nokola.com/blog/post/2010/10/14/Anti-aliased-Lines-And-Optimizing-Code-for-Windows-Phone-7e28093First-Look.aspx
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <param name="color">The color for the line.</param>
            </summary> 
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.DrawLineAa(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary> 
            Draws an anti-aliased line, using an optimized version of Gupta-Sproull algorithm 
            From http://nokola.com/blog/post/2010/10/14/Anti-aliased-Lines-And-Optimizing-Code-for-Windows-Phone-7e28093First-Look.aspx
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <param name="color">The color for the line.</param>
            </summary> 
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.DrawLineAa(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{System.Int32},System.Windows.Rect)">
            <summary> 
            Draws an anti-aliased line, using an optimized version of Gupta-Sproull algorithm 
            From http://nokola.com/blog/post/2010/10/14/Anti-aliased-Lines-And-Optimizing-Code-for-Windows-Phone-7e28093First-Look.aspx
            <param name="context">The context containing the pixels as int RGBA value.</param>
            <param name="pixelWidth">The width of one scanline in the pixels array.</param>
            <param name="pixelHeight">The height of the bitmap.</param>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <param name="color">The color for the line.</param>
            </summary> 
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.Slope(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Slope Calculation Method
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.Intersect(System.Double,System.Double,System.Double)">
            <summary>
            Intersect Calculation Method(c = y- mx)
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="slope"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.DrawPolyline(System.Windows.Media.Imaging.WriteableBitmap,System.Int32[],System.Windows.Media.Color)">
            <summary>
            Draws a polyline. Add the first point also at the end of the array if the line should be closed.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="points">The points of the polyline in x and y pairs, therefore the array is interpreted as (x1, y1, x2, y2, ..., xn, yn).</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.DrawPolyline(System.Windows.Media.Imaging.WriteableBitmap,System.Int32[],System.Int32)">
            <summary>
            Draws a polyline. Add the first point also at the end of the array if the line should be closed.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="points">The points of the polyline in x and y pairs, therefore the array is interpreted as (x1, y1, x2, y2, ..., xn, yn).</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.DrawTriangle(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color)">
            <summary>
            Draws a triangle.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the 1st point.</param>
            <param name="y1">The y-coordinate of the 1st point.</param>
            <param name="x2">The x-coordinate of the 2nd point.</param>
            <param name="y2">The y-coordinate of the 2nd point.</param>
            <param name="x3">The x-coordinate of the 3rd point.</param>
            <param name="y3">The y-coordinate of the 3rd point.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.DrawTriangle(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a triangle.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the 1st point.</param>
            <param name="y1">The y-coordinate of the 1st point.</param>
            <param name="x2">The x-coordinate of the 2nd point.</param>
            <param name="y2">The y-coordinate of the 2nd point.</param>
            <param name="x3">The x-coordinate of the 3rd point.</param>
            <param name="y3">The y-coordinate of the 3rd point.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.DrawRectangle(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color)">
            <summary>
            Draws a rectangle.
            x2 has to be greater than x1 and y2 has to be greater than y1.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the bounding rectangle's left side.</param>
            <param name="y1">The y-coordinate of the bounding rectangle's top side.</param>
            <param name="x2">The x-coordinate of the bounding rectangle's right side.</param>
            <param name="y2">The y-coordinate of the bounding rectangle's bottom side.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.DrawRectangle(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a rectangle.
            x2 has to be greater than x1 and y2 has to be greater than y1.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the bounding rectangle's left side.</param>
            <param name="y1">The y-coordinate of the bounding rectangle's top side.</param>
            <param name="x2">The x-coordinate of the bounding rectangle's right side.</param>
            <param name="y2">The y-coordinate of the bounding rectangle's bottom side.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.FillRectangle(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color,System.Collections.Generic.List{System.Int32})">
            <summary>
            Draws a filled rectangle.
            x2 has to be greater than x1 and y2 has to be greater than y1.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the bounding rectangle's left side.</param>
            <param name="y1">The y-coordinate of the bounding rectangle's top side.</param>
            <param name="x2">The x-coordinate of the bounding rectangle's right side.</param>
            <param name="y2">The y-coordinate of the bounding rectangle's bottom side.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.FillRectangle(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            Draws a filled rectangle.
            x2 has to be greater than x1 and y2 has to be greater than y1.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the bounding rectangle's left side.</param>
            <param name="y1">The y-coordinate of the bounding rectangle's top side.</param>
            <param name="x2">The x-coordinate of the bounding rectangle's right side.</param>
            <param name="y2">The y-coordinate of the bounding rectangle's bottom side.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.FillPolygon(System.Windows.Media.Imaging.WriteableBitmap,System.Int32[],System.Windows.Media.Color,System.Collections.Generic.List{System.Int32})">
            <summary>
            Draws a filled polygon. Add the first point also at the end of the array if the line should be closed.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="points">The points of the polygon in x and y pairs, therefore the array is interpreted as (x1, y1, x2, y2, ..., xn, yn).</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.FillPolygon(System.Windows.Media.Imaging.WriteableBitmap,System.Int32[],System.Windows.Media.Color,System.Collections.Generic.List{System.Int32},System.Windows.Rect)">
            <summary>
            Draws a filled polygon. Add the first point also at the end of the array if the line should be closed.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="points">The points of the polygon in x and y pairs, therefore the array is interpreted as (x1, y1, x2, y2, ..., xn, yn).</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.DrawEllipse(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color)">
            <summary>
            A Fast Bresenham Type Algorithm For Drawing Ellipses http://homepage.smc.edu/kennedy_john/belipse.pdf 
            x2 has to be greater than x1 and y2 has to be greater than y1.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the bounding rectangle's left side.</param>
            <param name="y1">The y-coordinate of the bounding rectangle's top side.</param>
            <param name="x2">The x-coordinate of the bounding rectangle's right side.</param>
            <param name="y2">The y-coordinate of the bounding rectangle's bottom side.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.DrawEllipse(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            A Fast Bresenham Type Algorithm For Drawing Ellipses http://homepage.smc.edu/kennedy_john/belipse.pdf 
            x2 has to be greater than x1 and y2 has to be greater than y1.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the bounding rectangle's left side.</param>
            <param name="y1">The y-coordinate of the bounding rectangle's top side.</param>
            <param name="x2">The x-coordinate of the bounding rectangle's right side.</param>
            <param name="y2">The y-coordinate of the bounding rectangle's bottom side.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.DrawEllipseCentered(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color)">
            <summary>
            A Fast Bresenham Type Algorithm For Drawing Ellipses http://homepage.smc.edu/kennedy_john/belipse.pdf
            Uses a different parameter representation than DrawEllipse().
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="xc">The x-coordinate of the ellipses center.</param>
            <param name="yc">The y-coordinate of the ellipses center.</param>
            <param name="xr">The radius of the ellipse in x-direction.</param>
            <param name="yr">The radius of the ellipse in y-direction.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.DrawEllipseCentered(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            A Fast Bresenham Type Algorithm For Drawing Ellipses http://homepage.smc.edu/kennedy_john/belipse.pdf 
            Uses a different parameter representation than DrawEllipse().
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="xc">The x-coordinate of the ellipses center.</param>
            <param name="yc">The y-coordinate of the ellipses center.</param>
            <param name="xr">The radius of the ellipse in x-direction.</param>
            <param name="yr">The radius of the ellipse in y-direction.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.FillEllipseCentered(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color,System.Collections.Generic.List{System.Int32})">
            <summary>
            Uses a different parameter representation than DrawEllipse().
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="xc">The x-coordinate of the ellipses center.</param>
            <param name="yc">The y-coordinate of the ellipses center.</param>
            <param name="xr">The radius of the ellipse in x-direction.</param>
            <param name="yr">The radius of the ellipse in y-direction.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.FillEllipseCentered(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            Uses a different parameter representation than DrawEllipse().
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="xc">The x-coordinate of the ellipses center.</param>
            <param name="yc">The y-coordinate of the ellipses center.</param>
            <param name="xr">The radius of the ellipse in x-direction.</param>
            <param name="yr">The radius of the ellipse in y-direction.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.GetEllipseCentered(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            Uses a different parameter representation than GetEllipse().
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="xc">The x-coordinate of the ellipses center.</param>
            <param name="yc">The y-coordinate of the ellipses center.</param>
            <param name="xr">The radius of the ellipse in x-direction.</param>
            <param name="yr">The radius of the ellipse in y-direction.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.WriteableBitmapExtensions.GetRectangle(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            Uses a different parameter representation than GetRectangle().
            </summary>
            <param name="bmp"></param>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="pixels"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ClassReferenceAttribute.AssemblyResolver(System.Object,System.ResolveEventArgs)">
            <summary>
            Assemblies the resolver.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.ResolveEventArgs"/> instance containing the event data.</param>
            <returns>Assembly object.</returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartColorBar.DockPositionProperty">
            <summary>
             Using a DependencyProperty as the backing store for DockPosition.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartColorBar.ColorBar_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Invoke when color bar loaded
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartColorBar.ChangeOrientation">
            <summary>
            Chage orientation for color bar items 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartColorBar.UpdateColorBarItemsSource">
            <summary>
            Update color bar items source
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartColorBar.ShowLabel">
            <summary>
            Get or Set whether range lable shown in color bar
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ColorBarItem.Orientation">
            <summary>
            Get or Set orientation for color bar item
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ColorBarItem.Background">
            <summary>
            Get or set background for color bar icon
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ColorBarItem.Label">
            <summary>
            Get or Set Label for color bar icon
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ColorBarItem.IconHeight">
            <summary>
            Get or Set height for color bar icon 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ColorBarItem.IconWidth">
            <summary>
            Get or Set width for color bar icon 
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.ColorBarItem.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MeshGenerator.PlaneXYZ(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Draw mesh for axis X,Y,Z plane
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MeshGenerator.PlaneZ(System.Double,System.Double)">
            <summary>
            Draw mesh for axis Z plane
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MeshGenerator.PlaneY(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Draw mesh for axis Y plane
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MeshGenerator.BuildWall(System.Double,System.Double,System.Double)">
            <summary>
            Draw mesh for Wall
            </summary>
            <param name="sideA"></param>
            <param name="sideB"></param>
            <param name="sideC"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MeshGenerator.AddTexturedQuad(System.Windows.Media.Media3D.MeshGeometry3D,System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Point3D)">
            <summary>
            add position and triangle index for wall 
            </summary>
            <param name="geomerty"></param>
            <param name="p1"></param>
            <param name="p2"></param>
            <param name="p3"></param>
            <param name="p4"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MeshGenerator.GetNormalize(System.Windows.Media.Media3D.Point3D,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
             <summary>
            Normalize the points to 3D world 
             </summary>
             <param name="pt"></param>
             <param name="xmin"></param>
             <param name="xmax"></param>
             <param name="ymin"></param>
             <param name="ymax"></param>
             <param name="zmin"></param>
             <param name="zmax"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MeshGenerator.DrawMaterial(System.Collections.Generic.List{System.Windows.Media.Brush},System.Boolean)">
            <summary>
            Draw material for surface chart
            </summary>
            <param name="brushes"></param>
            <param name="isGradient"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MeshGenerator.MakeWireframe(System.Windows.Media.Media3D.MeshGeometry3D,System.Double)">
            <summary>
            Create wireframe mesh
            </summary>
            <param name="mesh"></param>
            <param name="thickness"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MeshGenerator.GetMin(System.String,System.Windows.Media.Media3D.Point3D[0:,0:])">
            <summary>
            Get Minimum valuue for given pointer array
            </summary>
            <param name="value"></param>
            <param name="point3Ds"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MeshGenerator.GetMax(System.String,System.Windows.Media.Media3D.Point3D[0:,0:])">
            <summary>
            Get the maximum value of given pointer array
            </summary>
            <param name="value"></param>
            <param name="point3Ds"></param>
            <returns></returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SurfaceBase.ColorModelProperty">
            <summary>
            Using a DependencyProperty as the backing store for ColorModel.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SurfaceBase.PaletteProperty">
            <summary>
            Using a DependencyProperty as the backing store for Pallete.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SurfaceBase.HeaderProperty">
            <summary>
            Using a DependencyProperty as the backing store for Header.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SurfaceBase.UpdateArea">
            <summary>
            Update the surface area
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceBase.EnableRotation">
            <summary>
            Get or Set value whether rotate the surface chart
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceBase.ShowLeftWall">
            <summary>
            Get or Set value whether show the left wall 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceBase.ShowBottomWall">
            <summary>
            Get or Set value whether show the bottom wall 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceBase.ShowBackWall">
            <summary>
            Get or Set value whether show the back wall 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceBase.LeftWallBrush">
            <summary>
            Get or Set brush for left wall 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceBase.BottomWallBrush">
            <summary>
            Get or Set brush for bottom wall
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceBase.BackWallBrush">
            <summary>
            Get or Set brush for Back wall
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceBase.WallThickness">
            <summary>
            Get or Set thickness for surface walls
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceBase.ColorModel">
            <summary>
            Get or Set color model for surface
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceBase.Palette">
            <summary>
            Get or Set Palette for surface chart
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceBase.Rotate">
            <summary>
            Get or Set rotate angle value for surface chart
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceBase.Tilt">
            <summary>
            Get or Set tilt angle value for surface chart
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceBase.Header">
            <summary>
            Gets or Sets title for Surface chart
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.UpdateArea">
            <summary>
            Update the surface chart area
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.CalculateViewSize">
            <summary>
            Calculate the mesh rendered size 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.CreateViewMatrix">
            <summary>
            Calculate the matrix3d for rendered size
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.InitializeDefaultAxes">
            <summary>
            Initialize default axis 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.UpdateData">
            <summary>
            Update surface chart data points
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.GetPoints">
            <summary>
            Get Point array from items source
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.UpdateRange">
            <summary>
            Update surface chart axis range
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.UpdateColorBar">
            <summary>
            update colors and its items source 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.UpdateAxis(System.Windows.Size)">
            <summary>
            Update surface axis layout
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.DrawWall">
            <summary>
            Draw surface chart walls
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.SetLight">
            <summary>
            Set Light for surface chart
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.DrawAxisElements">
            <summary>
            Draw Axis and its elements
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.DrawAxis(Syncfusion.UI.Xaml.Charts.SurfaceAxis)">
            <summary>
            Draw axis 
            </summary>
            <param name="axis"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.UpdateGridLines">
            <summary>
            Update Axis gridlines
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.DrawGridlines(Syncfusion.UI.Xaml.Charts.SurfaceAxis)">
            <summary>
            Draw gridlines as a mesh
            </summary>
            <param name="axis"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.DrawAxisGridlines(Syncfusion.UI.Xaml.Charts.SurfaceAxis,System.Double,System.Double,System.Windows.Media.Media3D.MeshGeometry3D)">
            <summary>
            Draw grilines based on axis
            </summary>
            <param name="axis"></param>
            <param name="value"></param>
            <param name="offset"></param>
            <param name="gridframe"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.CreateSurface">
            <summary>
            Draw surface types
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.UpdateViewport">
            <summary>
            Update viewport child
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.UpdateColorBarArrangeRect">
            <summary>
            Arrange color bar 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.CreateCamera">
            <summary>
            Create projection camera types
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.PositionCamera(System.Windows.Media.Media3D.ProjectionCamera)">
            <summary>
            Positioning the camera based on Rotate and Tilt value
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Capture mouse position and change mouse cursor
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Calculate the Rotate and Tilt value from mouse position
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
             Reset mouse position and cursor
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.GetDataType(Syncfusion.UI.Xaml.Charts.IPropertyAccessor,System.Collections.IEnumerable)">
            <summary>
            Get data type for given itemsource 
            </summary>
            <param name="propertyAccessor"></param>
            <param name="itemsSource"></param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.Data">
            <summary>
            Passing surface data through Data property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.ItemsSource">
            <summary>
            Get or Set items source for surface chart
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.XAxis">
            <summary>
            Get or Set Primary Axis for surface chart
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.YAxis">
            <summary>
            Get or Set Secondary Axis for surface chart
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.ZAxis">
            <summary>
            Get or Set Depth Axis for surface chart
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.ColorBar">
            <summary>
            Get or Set color bar for surface chart
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.ApplyGradientBrush">
            <summary>
            Get or Set linear gradient brush for given palette 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.XBindingPath">
            <summary>
            Gets or Sets the property path to retrieve x data from ItemsSource. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.YBindingPath">
            <summary>
            Gets or Sets the property path to retrieve y data from ItemsSource. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.ZBindingPath">
            <summary>
            Gets or Sets the property path to retrieve z data from ItemsSource. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.RowSize">
            <summary>
            Get or Set Row size for items source
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.ColumnSize">
            <summary>
            Get or Set column size for items source
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.WireframeStroke">
            <summary>
            Get or Set stroke for wireframe line 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.WireframeStrokeThickness">
            <summary>
            Get or Set stroke thickness for wireframe line
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.Type">
            <summary>
            Get or Set type for surface chart
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.CameraProjection">
            <summary>
            Get or Set Camera for Surface chart
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfSurfaceChart.ZoomLevel">
            <summary>
            Get or Set zoom view level for 3D viewport
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SurfaceAxis.HeaderProperty">
            <summary>
            Using a DependencyProperty as the backing store for Header.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SurfaceAxis.HeaderTemplateProperty">
            <summary>
             Using a DependencyProperty as the backing store for HeaderTemplate.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SurfaceAxis.LabelFormatProperty">
            <summary>
            Using a DependencyProperty as the backing store for LabelFormat.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SurfaceAxis.LabelTemplateProperty">
            <summary>
            Using a DependencyProperty as the backing store for LabelTemplate.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SurfaceAxis.SmallTicksPerIntervalProperty">
            <summary>
            Using a DependencyProperty as the backing store for SmallTicksPerInterval.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SurfaceAxis.MinimumProperty">
            <summary>
             Using a DependencyProperty as the backing store for Minimum.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SurfaceAxis.MaximumProperty">
            <summary>
            Using a DependencyProperty as the backing store for Minimum.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SurfaceAxis.AxisLineStyleProperty">
            <summary>
             Using a DependencyProperty as the backing store for AxisLineStyle.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SurfaceAxis.OrientationProperty">
            <summary>
            Using a DependencyProperty as the backing store for Orientation.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SurfaceAxis.TickLineSizeProperty">
            <summary>
            Using a DependencyProperty as the backing store for TickSize.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SurfaceAxis.MajorTickLineStyleProperty">
            <summary>
            Using a DependencyProperty as the backing store for MajorTickLineStyle.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SurfaceAxis.MinorTickLineStyleProperty">
            <summary>
            Using a DependencyProperty as the backing store for MinorTickLineStyle.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SurfaceAxis.EdgeLabelsDrawingModeProperty">
            <summary>
            Using a DependencyProperty as the backing store for EdgeLabelsDrawingMode.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SurfaceAxis.CalculateActualInterval(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Windows.Size)">
            <summary>
            Calculate interval for surface axis
            </summary>
            <param name="range"></param>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SurfaceAxis.ApplyRangePadding(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Double,Syncfusion.UI.Xaml.Charts.NumericalPadding)">
            <summary>
            Apply range padding 
            </summary>
            <param name="range"></param>
            <param name="interval"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SurfaceAxis.CalculateNiceInterval(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Windows.Size)">
            <summary>
            Calculate the nice interval
            </summary>
            <param name="actualRange"></param>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SurfaceAxis.GetActualDesiredIntervalsCount(System.Windows.Size)">
            <summary>
            Returns the maximum desired intervals count.
            </summary>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceAxis.Header">
            <summary>
            Get or Set header for surface axis
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceAxis.HeaderTemplate">
            <summary>
            Get or Set header template for surface axis
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceAxis.LabelFormat">
            <summary>
            Get or Set axis label format for surface axis
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceAxis.LabelTemplate">
            <summary>
            Get or Set axis label template for surface axis
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceAxis.SmallTicksPerInterval">
            <summary>
            Get or Set small tics per interval
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceAxis.Minimum">
            <summary>
            Get or Set Minimum property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceAxis.Maximum">
            <summary>
            Get or Set Maximum property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceAxis.VisibleLabels">
            <summary>
            Get visible labels for surface axis
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceAxis.AxisLineStyle">
            <summary>
            Get or Set style for axis line
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceAxis.TickLineSize">
            <summary>
            Get or Set size for tick line
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceAxis.MajorTickLineStyle">
            <summary>
            Gets or Sets major tick line style.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceAxis.MinorTickLineStyle">
            <summary>
            Gets or Sets minor tick line style.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceAxis.Interval">
            <summary>
            Get or Set interval for suface axis
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceAxis.ShowGridLines">
            <summary>
            Get or Set whether showing gridlines for surface axis
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceAxis.GridLineStroke">
            <summary>
            Get or Set brush for gridline
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceAxis.GridLineThickness">
            <summary>
            Get or Set thickness for gridline
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ILayoutCalculator">
            <summary>
            This interfaces defines the memebers and methods to create and arrange the child elements in a panel.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ILayoutCalculator.Measure(System.Windows.Size)">
            <summary>
            Method declaration for Measure
            </summary>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ILayoutCalculator.Arrange(System.Windows.Size)">
            <summary>
            Method declaration for Arrange
            </summary>
            <param name="finalSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ILayoutCalculator.UpdateElements">
            <summary>
            Method declaration for UpdateElements
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ILayoutCalculator.DetachElements">
            <summary>
            Detachs elements from the panel
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ILayoutCalculator.Children">
            <summary>
            Get Children property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ILayoutCalculator.Panel">
            <summary>
            Gets the panel.
            </summary>
            <value>
            The panel.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ILayoutCalculator.Left">
            <summary>
            Gets or sets the left.
            </summary>
            <value>
            The left.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ILayoutCalculator.Top">
            <summary>
            Gets or sets the top.
            </summary>
            <value>
            The top.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ILayoutCalculator.DesiredSize">
            <summary>
            Get desiredSize property
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SurfaceAxisElementPanel.#ctor(System.Windows.Controls.Panel)">
            <summary>
            Called when instance created for ChartCartesianAxisElementsPanel
            </summary>
            <param name="panel"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SurfaceAxisElementPanel.Measure(System.Windows.Size)">
            <summary>
            Method declaration for Measure
            </summary>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SurfaceAxisElementPanel.Arrange(System.Windows.Size)">
            <summary>
            Method declaration for Arrange
            </summary>
            <param name="finalSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SurfaceAxisElementPanel.UpdateElements">
            <summary>
            Method declaration for UpdateElements
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceAxisElementPanel.DesiredSize">
            <summary>
            Gets the desired size of the panel.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceAxisElementPanel.Children">
            <summary>
            Gets the Children count in the panel.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SurfaceAxisLabelsPanel.#ctor(System.Windows.Controls.Panel)">
            <summary>
            Called when instance created for ChartCartessianAxisLabelsPanel
            </summary>
            <param name="panel"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SurfaceAxisLabelsPanel.Measure(System.Windows.Size)">
            <summary>
            Method declaration for Measure
            </summary>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SurfaceAxisLabelsPanel.Arrange(System.Windows.Size)">
            <summary>
            Method declaration for Arrange
            </summary>
            <param name="finalSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SurfaceAxisLabelsPanel.UpdateElements">
            <summary>
            Method declaration for UpdateElements
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceAxisLabelsPanel.DesiredSize">
            <summary>
            Gets the desired size of the panel.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceAxisLabelsPanel.Axis">
            <summary>
            Gets or Sets the chart axis of the panel./>
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceAxisLabelsPanel.Children">
            <summary>
            Gets the children count in the panel.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SurfaceAxisLabelLayout.SurfaceLayoutElements">
            <summary>
            Returns desired height
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceAxisLabelLayout.ComputedSizes">
            <summary>
            Holds the width and height of the element after rotating.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SurfaceAxisLabelLayout.DesiredSizes">
            <summary>
            Holds the width and height of the element without rotating.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SurfaceHorizontalLabelLayout.SurfaceLayoutElements">
            <summary>
            Returns desired height
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SurfaceVerticalLabelLayout.SurfaceLayoutElements">
            <summary>
            Returns desired width
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SurfaceAxisPanel.#ctor">
            <summary>
            called when instance created for ChartCarttesianAxisPanel
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartPrintDialog">
            <summary>
            ChartPrintDialog
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.m_elementToPrint">
            <summary>
            Initializes m_elementToPrint
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.m_nativePrintDialog">
            <summary>
            Initializes m_nativePrintDialog
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.m_visualBrush">
            <summary>
            Initializes m_visualBrush
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.ChartHeight">
            <summary>
            Initializes ChartHeight
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.ChartWidth">
            <summary>
            Initializes ChartWidth
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.PrintStretchProperty">
            <summary>
            Using a DependencyProperty as the backing store for PrintStrech.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.PrintModeProperty">
            <summary>
            Using a DependencyProperty as the backing store for ChartPrintMode.  This enables to choose chart print mode...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.ShowPrintDialog(System.Windows.FrameworkElement)">
            <summary>
            Shows the print dialog.
            </summary>
            <param name="element">The element.</param>
            <returns>Returns ShowDialog</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.ShowPrintDialog(System.Windows.FrameworkElement,System.Windows.Rect,System.Double,System.Double)">
            <summary>
            Shows the print dialog.
            </summary>
            <param name="element">The element.</param>
            <param name="printArea">The print area.</param>
            <returns>Returns ShowDialog</returns>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ChartPrintDialog"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.StartPrint">
            <summary>
            Starts the print.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ChartPrintDialog"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.OnPrintClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [print click].
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ChartPrintDialog"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.OnCancelClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [cancel click].
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.OnColorClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [color click].
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.OnBlackAndWhiteClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [black and white click].
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.OnAdvancedClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [advanced click].
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.GetPrintSize(System.Windows.Media.Stretch,System.Windows.Size,System.Windows.Size)">
            <summary>
            Gets the size by specified stretch.
            </summary>
            <param name="stretch">The stretch.</param>
            <param name="viewport">The viewport.</param>
            <param name="original">The original.</param>
            <returns>The PRint size</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.OnPrintStretchChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnPrintStretchChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.OnPrintModeChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnPrintModeChanged method of the instance, notifies of the depencency property value changes.
            </summary>
            <param name="d">Dependency object, the change occures on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.SetViewport(System.Windows.Media.VisualBrush,System.Windows.Size)">
            <summary>
            Sets the viewport.
            </summary>
            <param name="brush">The brush.</param>
            <param name="size">The size value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.OnPrintStretchChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises PrintStretchChanged event.
            </summary>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.OnPrintModeChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates property value cache and raises PrintModeChanged event.
            </summary>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.OnRender(System.Windows.Media.DrawingContext)">
            <summary>
            When overridden in a derived class, participates in rendering operations that are directed by the layout system. The rendering instructions for this element are not used directly when this method is invoked, and are instead preserved for later asynchronous use by layout and drawing.
            </summary>
            <param name="drawingContext">The drawing instructions for a specific element. This context is provided to the layout system.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.PrintMode">
            <summary>
            Gets or sets the print mode.
            </summary>
            <value>The print stretch.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.PrintStretch">
            <summary>
            Gets or sets the print stretch.
            </summary>
            <value>The print stretch.</value>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.PrintStretchChanged">
            <summary>
            Event that is raised when PrintStretch property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.ChartPrintDialog.PrintModeChanged">
            <summary>
            Event that is raised when PrintMode property is changed.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.SfChart">
            <summary>
            Represents the Chart control which is used to visualize the data graphically.
            </summary>
            <remarks>
            The Chart is often used to make it easier to
            understand large amount of data and the relationship between different parts
            of the data. Chart can usually be read more quickly than the raw data that they
            come from. <para> Certain <see cref="T:Syncfusion.UI.Xaml.Charts.ChartSeriesBase"/> are more useful for
            presenting a given data set than others. For example, data that presents
            percentages in different groups (such as "satisfied, not satisfied, unsure") are
            often displayed in a <see cref="T:Syncfusion.UI.Xaml.Charts.PieSeries"/> chart, but are more easily
            understood when presented in a horizontal <see cref="T:Syncfusion.UI.Xaml.Charts.BarSeries"/> chart.
            On the other hand, data that represents numbers that change over a period of
            time (such as "annual revenue from 20011 to 2012") might be best shown as a <see cref="T:Syncfusion.UI.Xaml.Charts.LineSeries"/> chart. </para>
            </remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ChartSeriesBase"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ChartLegend"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ChartAxis"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfChart.PrimaryAxisProperty">
            <summary>
             Using a DependencyProperty as the backing store for PrimaryAxis.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfChart.SecondaryAxisProperty">
            <summary>
             Using a DependencyProperty as the backing store for SecondaryAxis.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfChart.ContentControlProperty">
            <summary>
             Using a DependencyProperty as the backing store for WatermarkContent.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfChart.AreaBorderBrushProperty">
            <summary>
             Using a DependencyProperty as the backing store for AreaBorderBrush.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfChart.AreaBorderThicknessProperty">
            <summary>
            Using a DependencyProperty as the backing store for AreaBorderThickness.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfChart.AreaBackgroundProperty">
            <summary>
             Using a DependencyProperty as the backing store for AreaBackground.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfChart.SeriesProperty">
            <summary>
            Using a DependencyProperty as the backing store for Series.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfChart.TechnicalIndicatorsProperty">
            <summary>
             Using a DependencyProperty as the backing store for Series.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SfChart.AnnotationsProperty">
            <summary>
            The annotations property
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.SeriesSelectedIndexChanged(System.Int32,System.Int32)">
            <summary>
            Method used to highlight selected index series.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.OnSeriesBoundsChanged(Syncfusion.UI.Xaml.Charts.ChartSeriesBoundsEventArgs)">
            <summary>
            Raises the <see cref="E:SeriesBoundsChanged"/> event.
            </summary>
            <param name="args">The <see cref="T:Syncfusion.UI.Xaml.Charts.ChartSeriesBoundsEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.UpdateBitmapSeries(Syncfusion.UI.Xaml.Charts.ChartSeries,System.Boolean)">
            <summary>
            Method used to update selection in bitmap series.
            </summary>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.ConvertColor(System.Windows.Media.Color)">
            <summary>
            Method used to gets the byte value of given color.
            </summary>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>. In simplest terms, this means the method is called just before a UI element displays in an application. For more information, see Remarks.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.InitializeDefaultAxes">
            <summary>
            Set default axes for SfChart
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.OnZoomChanged(Syncfusion.UI.Xaml.Charts.ZoomChangedEventArgs)">
            <summary>
            Occurs when zooming is done.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.OnZoomChanging(Syncfusion.UI.Xaml.Charts.ZoomChangingEventArgs)">
            <summary>
            Occurs when zooming takes place.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.OnSelectionZoomingStart(Syncfusion.UI.Xaml.Charts.SelectionZoomingStartEventArgs)">
            <summary>
            Occurs at the start of selection zooming.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.OnSelectionZoomingEnd(Syncfusion.UI.Xaml.Charts.SelectionZoomingEndEventArgs)">
            <summary>
            Occurs at the end of selection zooming.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.UpdateBitmapToolTip">
            <summary>
            This method is to update bitmap series tooltip 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.ConvertBitmapPixels">
            <summary>
            Method is used to convert list collection in to hashset.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.OnSelectionZoomingDelta(Syncfusion.UI.Xaml.Charts.SelectionZoomingDeltaEventArgs)">
            <summary>
            Occurs while selection zooming.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.OnPanChanged(Syncfusion.UI.Xaml.Charts.PanChangedEventArgs)">
            <summary>
            Occurs when panning is completed.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.OnPanChanging(Syncfusion.UI.Xaml.Charts.PanChangingEventArgs)">
            <summary>
            Occurs when panning takes place.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.OnResetZoom(Syncfusion.UI.Xaml.Charts.ResetZoomEventArgs)">
            <summary>
            Occurs when zoom is reset.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.SetPrimaryAxis(Syncfusion.UI.Xaml.Charts.ChartValueType)">
             <summary>
            Set PrimaryAxis for SfChart
             </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.ValueToLogPoint(Syncfusion.UI.Xaml.Charts.ChartAxis,System.Double)">
            <summary>
            Converts Value to Log point.
            </summary>
            <param name="axis">The Logarithmic axis .</param>
            <param name="value">The value.</param>
            <returns>The double value to point</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.ValueToPoint(Syncfusion.UI.Xaml.Charts.ChartAxis,System.Double)">
            <summary>
            Converts Value to point.
            </summary>
            <param name="axis">The Chart axis .</param>
            <param name="value">The value.</param>
            <returns>The double value to point</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.ValueToPointRelativeToAnnotation(Syncfusion.UI.Xaml.Charts.ChartAxis,System.Double)">
            <summary>
            Converts Value to point.
            </summary>
            <param name="axis">The Chart axis .</param>
            <param name="value">The value.</param>
            <returns>The double value to point</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.MeasureOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the Measure pass of Silverlight layout. Classes can override this method to define their own Measure pass behavior.
            </summary>
            <returns>
            The size that this object determines it needs during layout, based on its calculations of the allocated sizes for child objects; or based on other considerations, such as a fixed container size.
            </returns>
            <param name="availableSize"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.OnLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            called when lost focus from the sfchart
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.OnGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Called when got focus in sfchart
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseEnter"/> event occurs.
            </summary>
            <param name="e">The data for the event. </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseLeave"/> event occurs.
            </summary>
            <param name="e">The data for the event. </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseWheel"/> event occurs to provide handling for the event in a derived class without attaching a delegate. 
            </summary>
            <param name="e">A <see cref="T:System.Windows.Input.MouseWheelEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseMove"/> event occurs.
            </summary>
            <param name="e">The data for the event. </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.OnKeyUp(System.Windows.Input.KeyEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.KeyUp"/> event occurs.
            </summary>
            <param name="e">The data for the event. </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.KeyDown"/> event occurs.
            </summary>
            <param name="e">The data for the event. </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown"/> event occurs.
            </summary>
            <param name="e">The data for the event. </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp"/> event occurs.
            </summary>
            <param name="e">The data for the event. </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.ManipulationStarted"/> event occurs. 
            </summary>
            <param name="e">Event data for the event.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.ManipulationCompleted"/>  event occurs. 
            </summary>
            <param name="e">Event data for the event.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.ManipulationDelta"/> event occurs. 
            </summary>
            <param name="e">Event data for the event.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.OnDrop(System.Windows.DragEventArgs)">
            <summary>
            Called when drop the pointer in sfchart
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.OnDragOver(System.Windows.DragEventArgs)">
            <summary>
            Called when Drag over from the sfchart
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.OnDragLeave(System.Windows.DragEventArgs)">
            <summary>
            Called when Drag leave from the sfchart
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SfChart.OnDragEnter(System.Windows.DragEventArgs)">
            <summary>
            Called when drag enter into the sfchart
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.SfChart.ZoomChanged">
            <summary>
            Occurs when chart is zoomed.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.SfChart.ZoomChanging">
            <summary>
            Occurs during chart zooming.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.SfChart.SelectionZoomingStart">
            <summary>
            Occurs at the start of selection zooming.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.SfChart.SelectionZoomingDelta">
            <summary>
            Occurs during selection zooming.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.SfChart.SelectionZoomingEnd">
            <summary>
            Occurs at the end of selection zooming.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.SfChart.PanChanged">
            <summary>
            Occurs when panning is completed.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.SfChart.PanChanging">
            <summary>
            Occurs when panning takes place.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.SfChart.ResetZooming">
            <summary>
            Occurs when the zoom is reset.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart.PrimaryAxis">
            <summary>
            Gets or Sets primary axis.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart.SecondaryAxis">
            <summary>
            Gets or Sets secondary axis.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart.Watermark">
            <summary>
            Gets or sets the chart watermark.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart.AreaBorderBrush">
            <summary>
            Gets or Sets the color to paint the outline of chart area
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart.AreaBorderThickness">
            <summary>
            Gets or Sets the outline thickness of chart area.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart.AreaBackground">
            <summary>
            Gets or Sets the color to paint the Background of chart area
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart.Behaviors">
            <summary>
            Gets the collection of ChartBehaviors
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart.Series">
            <summary>
            Get or Set series property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart.TechnicalIndicators">
            <summary>
            Get or Set TechnicalIndicatorsProperty
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SfChart.Annotations">
            <summary>
            Gets or sets the annotations.
            </summary>
            <value>
            The annotations.
            </value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartSelectionChangedEventArgs">
             <summary>
             Represents chart segment selection changed event arguments.
             </summary>
            <remarks>
             It contains information like selected segment and series.
             </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSelectionChangedEventArgs.SelectedSeries">
            <summary>
            Gets the series which has been selected through mouse interaction or SelectedIndex.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSelectionChangedEventArgs.SelectedSegment">
            <summary>
            Gets the segment which has been selected through mouse interaction or SelectedIndex.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSelectionChangedEventArgs.SelectedIndex">
            <summary>
            Gets the current index of the segment which has been selected through mouse interaction or SelectedIndex.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSelectionChangedEventArgs.PreviousSelectedIndex">
            <summary>
            Gets the previous index of the segment which had been selected through mouse interaction or SelectedIndex.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSelectionChangedEventArgs.IsDataPointSelection">
            <summary>
            Gets the bool value that indicates the selection is segment selection or series selection.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartSelectionChangingEventArgs">
             <summary>
             Represents chart segment selection changing event arguments.
             </summary>
            <remarks>
             It contains information like selected segment and series.
             </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSelectionChangingEventArgs.SelectedSeries">
            <summary>
            Gets the series which has been selected through mouse interaction or SelectedIndex.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSelectionChangingEventArgs.SelectedSegment">
            <summary>
            Gets the segment which has been selected through mouse interaction or SelectedIndex.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSelectionChangingEventArgs.SelectedIndex">
            <summary>
            Gets the current index of the segment which has been selected through mouse interaction or SelectedIndex.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSelectionChangingEventArgs.PreviousSelectedIndex">
            <summary>
            Gets the previous index of the segment which had been selected through mouse interaction or SelectedIndex.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSelectionChangingEventArgs.Cancel">
            <summary>
            Gets and Sets the Cancel property to avoid selection.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSelectionChangingEventArgs.IsDataPointSelection">
            <summary>
            Gets the bool value that indicates the selection is segment selection or series selection.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartSeriesBoundsEventArgs">
             <summary>
             Represents chart series bounds changed event arguments.
             </summary>
            <remarks>
             It contains information like old bounds and new bounds.
             </remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartAxisLabel">
            <summary>
            Represents an axis label element.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxisLabel.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxisLabel.#ctor(System.Double,System.Object,System.Double)">
            <summary>
            Called when instance created for ChartAxisLabel with following arguments
            </summary>
            <param name="position"></param>
            <param name="labelContent"></param>
            <param name="actualValue"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxisLabel.#ctor(System.Double,System.Object)">
            <summary>
            Called when instance created for ChartAxisLabel with following arguments
            </summary>
            <param name="position"></param>
            <param name="labelContent"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxisLabel.LabelContent">
            <summary>
            Get or Set LabelContent property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxisLabel.Position">
            <summary>
            Get or Set Position property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxisLabel.PrefixLabelTemplate">
            <summary>
            Get or Set PrefixLabelTemplate
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxisLabel.PostfixLabelTemplate">
            <summary>
            Get or Set PostfixLabelTemplate property
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartAxisBoundsEventArgs">
             <summary>
             Represents chart series bounds changed event arguments.
             </summary>
            <remarks>
             It contains information like old bounds and new bounds.
             </remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.VisibleRangeChangedEventArgs">
             <summary>
             Represents chart series bounds changed event arguments.
             </summary>
            <remarks>
             It contains information like old bounds and new bounds.
             </remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.LabelCreatedEventArgs">
            <summary>
            Class implementation for Label created event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LabelCreatedEventArgs.AxisLabel">
            <summary>
            Gets or sets the chart axis label.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ActualRangeChangedEventArgs">
            <summary>
            Represents chart axis actual range changed event arguments.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ActualRangeChangedEventArgs.#ctor(Syncfusion.UI.Xaml.Charts.ChartAxis)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.ActualRangeChangedEventArgs"/> class.
            </summary>
            <param name="axis">The axis.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ActualRangeChangedEventArgs.ActualMinimum">
            <summary>
            Gets the actual minimum.
            </summary>
            <value>
            The actual minimum.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ActualRangeChangedEventArgs.ActualMaximum">
            <summary>
            Gets the actual maximum.
            </summary>
            <value>
            The maximum.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ActualRangeChangedEventArgs.VisibleMinimum">
            <summary>
            Gets or sets the visible minimum.
            </summary>
            <value>
            The minimum.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ActualRangeChangedEventArgs.VisibleMaximum">
            <summary>
            Gets or sets the maximum.
            </summary>
            <value>
            The maximum.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ActualRangeChangedEventArgs.ActualInterval">
            <summary>
            Gets or sets the actual interval
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartLegend">
             <summary>
             Represents legend for a <see cref="T:Syncfusion.UI.Xaml.Charts.SfChart"/>.
             </summary>
             <remarks>
             Chart legend will be added as chart's child. Each item in legend contain key information about the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartSeriesBase"/>. Legend has all abilities such as docking, enabling or
             disabling desired series in a <see cref="T:Syncfusion.UI.Xaml.Charts.SfChart"/>.
            </remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartLegend.OrientationProperty">
            <summary>
            Using a DependencyProperty as the backing store for Orientation.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartLegend.CornerRadiusProperty">
            <summary>
            Identifies the CornerRadius dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartLegend.CheckBoxVisibilityProperty">
            <summary>
            Identifies the CheckBoxVisibility dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartLegend.IconVisibilityProperty">
            <summary>
            Identifies the IconVisibility dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartLegend.IconWidthProperty">
            <summary>
            Identifies the IconWidth dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartLegend.IconHeightProperty">
            <summary>
            Identifies the IconHeight dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartLegend.ItemMarginProperty">
            <summary>
            Identifies the ItemMargin dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartLegend.DockPositionProperty">
            <summary>
             Using a DependencyProperty as the backing store for DockPosition.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartLegend.OffsetXProperty">
            <summary>
            Identifies the OffsetX dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartLegend.OffsetYProperty">
            <summary>
            Identifies the OffsetY dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartLegend.HeaderProperty">
            <summary>
            Using a DependencyProperty as the backing store for Header.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartLegend.HeaderTemplateProperty">
            <summary>
             Using a DependencyProperty as the backing store for HeaderTemplate.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartLegend.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartLegend"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartLegend.Orientation">
            <summary>
            Gets or Sets the orientation of chart legend.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartLegend.DockPosition">
            <summary>
            Gets or Sets the position of the ChartLegend.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartLegend.LegendPosition">
            <summary>
            Gets or sets the legend position, this is works for 2D charts alone.
            </summary>
            <value>
            The legend position.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartLegend.ItemMargin">
            <summary>
            Gets or Sets the margin for legend item.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartLegend.Header">
            <summary>
            Gets or sets the header for the legend.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartLegend.HeaderTemplate">
            <summary>
            Gets or Sets the legend header template.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartLegend.CornerRadius">
            <summary>
            Gets or sets the CornerRadius of legend's border.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartLegend.CheckBoxVisibility">
             <summary>
             Gets or Sets a value that determines whether to show/hide CheckBox in legend item.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartLegend.IconVisibility">
             <summary>
            Gets or Sets the visibility of the legend icon.
             </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartLegend.IconWidth">
             <summary>
            Gets or Sets width of the legend icon..
             </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartLegend.IconHeight">
             <summary>
            Gets or Sets height of the legend 
             </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartLegend.OffsetX">
            <summary>
            Gets or Sets the x-axis value of the left edge of ChartLegend relative to Chart.
            </summary>
            <value>The OffsetX.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartLegend.OffsetY">
            <summary>
            Gets or Sets the y-axis value of the top edge of ChartLegend relative to Chart.
            </summary>
            <value>The OffsetY.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.LegendItem">
            <summary>
            class implementation for LegendItem
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LegendItem.LabelProperty">
            <summary>
            Using a DependencyProperty as the backing store for Label.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LegendItem.LegendIconTemplateProperty">
            <summary>
             Using a DependencyProperty as the backing store for LegendIconTemplate.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LegendItem.InteriorProperty">
            <summary>
            Using a DependencyProperty as the backing store for MyProperty.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LegendItem.IconVisibilityProperty">
            <summary>
            Using a DependencyProperty as the backing store for IconVisibility.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LegendItem.CheckBoxVisibilityProperty">
            <summary>
            Using a DependencyProperty as the backing store for ItemVisibility.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LegendItem.IconWidthProperty">
            <summary>
            Using a DependencyProperty as the backing store for IconWidth.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LegendItem.IconHeightProperty">
            <summary>
            Using a DependencyProperty as the backing store for IconHeight.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LegendItem.ItemMarginProperty">
            <summary>
            Using a DependencyProperty as the backing store for ItemMargin.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LegendItem.IsSeriesVisibleProperty">
            <summary>
             Using a DependencyProperty as the backing store for IsSeriesVisible.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LegendItem.VisibilityOnLegendProperty">
            <summary>
            Using a DependencyProperty as the backing store for VisibilityOnLegend.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LegendItem.Label">
            <summary>
            Get or Set Label property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LegendItem.LegendIconTemplate">
            <summary>
            Get or Set LegendIconTemplate property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LegendItem.Stroke">
            <summary>
            Get or set stroke for the legenditem.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LegendItem.StrokeThickness">
            <summary>
            Get or set strokethickness for legend item.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LegendItem.Interior">
            <summary>
            Get or Set Interior property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LegendItem.IconVisibility">
            <summary>
            Get or Set IconVisibilityProperty
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LegendItem.CheckBoxVisibility">
            <summary>
            Get or Set CheckBoxVisibility
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LegendItem.IconWidth">
            <summary>
            Get or Set Iconwidth property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LegendItem.IconHeight">
            <summary>
            Get or Set IconHeightProperty
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LegendItem.ItemMargin">
            <summary>
            Get or Set ItemMarginProperty
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LegendItem.IsSeriesVisible">
            <summary>
            Get or Set IsSeriesVisible property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LegendItem.VisibilityOnLegend">
            <summary>
            Get or Set VisibilityOnlegendProperty
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LegendItem.Segment">
            <summary>
            Get or Set Segment property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LegendItem.Item">
            <summary>
            Get or Set Item property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LegendItem.Trendline">
            <summary>
            Get or Set Trendline Property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LegendItem.Series">
            <summary>
            Get or Set Series Property
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.LegendItem.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.AreaSeries">
             <summary>
             AreaSeries connects its data points,using a continuous line with its underlying areas being filled in.
             </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.AreaSegment"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.SplineAreaSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.StackingAreaSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.RangeAreaSeries"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.AreaSeries.SegmentSelectionBrushProperty">
            <summary>
            Using a DependencyProperty as the backing store for SegmentSelectionBrush.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AreaSeries.SelectedIndexChanged(System.Int32,System.Int32)">
            <summary>
            Method used to set SegmentSelectionBrush to selectedindex chartsegment
            </summary>
            <param name="newIndex"></param>
            <param name="oldIndex"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AreaSeries.GetDataPoint(System.Windows.Point)">
            <summary>
            This method used to gets the chart data point at a position.
            </summary>
            <param name="mousePos"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AreaSeries.RaiseSelectionChanging(System.Int32,System.Int32)">
            <summary>
            Method is used to raise SelectionChanging event
            </summary>
            <param name="newIndex"></param>
            <param name="oldIndex"></param>
            <param name="series"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AreaSeries.RaiseSelectionChangedEvent">
            <summary>
            Called when selection changed in load time
            </summary>
            <param name="segment"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AreaSeries.CreateSegments">
            <summary>
            Creates the segments of AreaSeries.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AreaSeries.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Event to show tooltip
            </summary>
            <param name="e"> Event Arguments</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AreaSeries.SegmentSelectionBrush">
            <summary>
            Gets or Sets the selection brush
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AreaSeries.SelectedIndex">
            <summary>
            Gets or Sets SelectedIndex.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.BubbleSeries">
            <summary>
            Bubble series displays a set of circular symbols of varying size.
            </summary>
            <remarks>
            BubbleSeries requires an additional data binding parameter <see cref="P:Syncfusion.UI.Xaml.Charts.BubbleSeries.Size"/> in addition to X,Y parameters.
            The size of each bubble depends on the size value given in the data point.<see cref="P:Syncfusion.UI.Xaml.Charts.BubbleSeries.MinimumRadius"/> and <see cref="P:Syncfusion.UI.Xaml.Charts.BubbleSeries.MaximumRadius"/> properties can be used to 
            control the minimum and maximum radius of the symbols.
            </remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.BubbleSegment"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ScatterSeries"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.BubbleSeries.SegmentSelectionBrushProperty">
            <summary>
            Using a DependencyProperty as the backing store for SegmentSelectionBrush.  This enables animation, styling, binding, etc... 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.BubbleSeries.MinimumRadiusProperty">
            <summary>
            Using a DependencyProperty as the backing store for MaxWidth.  This enables animation, styling, binding, etc... 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.BubbleSeries.MaximumRadiusProperty">
            <summary>
            Using a DependencyProperty as the backing store for MaxHeight.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.BubbleSeries.SizeProperty">
            <summary>
            Using a DependencyProperty as the backing store for Size.  This enables animation, styling, binding, etc... 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BubbleSeries.#ctor">
            <summary>
            Called when instance created for BubbleSeries
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BubbleSeries.GetDataPointIndex(System.Windows.Point)">
            <summary>
             This method used to get the chart data index at an SfChart co-ordinates
             </summary>
             <param name="index"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BubbleSeries.EllipseContainsPoint(System.Windows.Shapes.Ellipse,System.Windows.Point)">
            <summary>
            This method used to check the position within the ellipse
            </summary>
            <param name="Ellipse"></param>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BubbleSeries.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when DataSource property changed
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BubbleSeries.GeneratePoints">
            <summary>
            Method for Generate Points for XYDataSeries
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BubbleSeries.CreateSegments">
            <summary>
            Creates the Segments of BubbleSeries
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BubbleSeries.SegmentSelectionBrush">
            <summary>
            Gets or Sets selection brush
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BubbleSeries.MinimumRadius">
            <summary>
            Gets or Sets minimum radius.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BubbleSeries.MaximumRadius">
            <summary>
            Gets or Sets maximum radius.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BubbleSeries.Size">
            <summary>
            Gets or Sets the property path to retrieve data which determines the size of the bubble.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BubbleSeries.SelectedIndex">
            <summary>
            Gets or Sets SelectedIndex.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BubbleSeries.CustomTemplate">
            <summary>
            Gets or sets the user defined data template for BubbleSeries
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.CandleSeries">
            <summary>
            CandleSeries is used primarily to analyze price movements of a stcock market over a period of time.
            </summary>
            <remarks>
            Each data point contains four values namely open, high, low, close. Typically, the high and low values are connected using a vertical straight line, 
            whereas the region between open and close values are connected using a vertical column segment.
            </remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.CandleSegment"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.HiLoSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSeries"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CandleSeries.SegmentSelectionBrushProperty">
            <summary>
             Using a DependencyProperty as the backing store for SegmentSelectionBrush.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CandleSeries.GetDataPointIndex(System.Windows.Point)">
            <summary>
             This method used to get the chart data index at an SfChart co-ordinates
             </summary>
             <param name="point"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CandleSeries.PointIsOnLine(System.Windows.Point,System.Windows.Point,System.Windows.Point)">
            <summary>
            Method is used to check the point in on line
            </summary>
            <param name="startPoint"></param>
            <param name="endPoint"></param>
            <param name="checkPoint"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CandleSeries.CreateSegments">
            <summary>
            Creates the segments of CandleSeries.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CandleSeries.SegmentSelectionBrush">
            <summary>
            Gets or Sets selection brush.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CandleSeries.SelectedIndex">
            <summary>
            Gets or Sets SelectedIndex.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ColumnSeries">
            <summary>
            ColumnSeries displays its data points using a set of vertical bars.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ColumnSegment"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.BarSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.RangeColumnSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.StackingColumnSeries"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ColumnSeries.SegmentSelectionBrushProperty">
            <summary>
             Using a DependencyProperty as the backing store for SegmentSelectionBrush.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ColumnSeries.CustomTemplateProperty">
            <summary>
             Using a DependencyProperty as the backing store for Template.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ColumnSeries.CreateSegments">
            <summary>
            Creates the segments of ColumnSeries.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ColumnSeries.SegmentSelectionBrush">
            <summary>
            Gets or Sets selection brush.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ColumnSeries.SelectedIndex">
            <summary>
            Gets or Sets SelectedIndex.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ColumnSeries.CustomTemplate">
            <summary>
            Gets or sets the user defined data template for ColumnSeries
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries">
             <summary>
             FastLineBitmapSeries is another version of LineSeries which uses different technology for rendering line in order to boost performance.
             </summary>
             <remarks>
             It uses WriteableBitmap for rendering; Its advantage is that it will render the series with large quantity of data in a fraction of milliseconds.
            </remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FastLineBitmapSegment"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FastLineSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.LineSeries"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries.EnableAntiAliasingProperty">
            <summary>
            Using a DependencyProperty as the backing store for EnableAntiAliasing.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries.SegmentSelectionBrushProperty">
            <summary>
             Using a DependencyProperty as the backing store for SegmentSelectionBrush.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries.IsHitTestSeries">
            <summary>
            Method used to return the hittest series while mouse action.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries.PointInsidePolygon(System.Windows.Shapes.Polygon,System.Double,System.Double)">
            <summary>
            Method used to check the point within the polygon or not.
            </summary>
            <param name="polygon"></param>
            <param name="pointx"></param>
            <param name="pointy"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries.GetPolygonPoints(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Method used to get polygon points.
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="leftThickness"></param>
            <param name="rightThickness"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries.GetDataPointIndex(System.Windows.Point)">
            <summary>
             This method used to get the chart data index at an SfChart co-ordinates
             </summary>
             <param name="index"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries.RaiseSelectionChanging(System.Int32,System.Int32)">
            <summary>
            Method is used to raise SelectionChanging event
            </summary>
            <param name="newIndex"></param>
            <param name="oldIndex"></param>
            <param name="series"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries.RaiseSelectionChangedEvent">
            <summary>
            Called when selection changed in load time
            </summary>
            <param name="segment"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries.SelectedIndexChanged(System.Int32,System.Int32)">
            <summary>
            Method used to trigger SelectionChanged event to SelectedIndex segment
            </summary>
            <param name="newIndex"></param>
            <param name="oldIndex"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries.GetDataPoint(System.Windows.Point)">
            <summary>
            This method used to gets the chart data point at a position.
            </summary>
            <param name="mousePos"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when DataSource property changed
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries.OnVisibleRangeChanged(Syncfusion.UI.Xaml.Charts.VisibleRangeChangedEventArgs)">
            <summary>
            Called when VisibleRange property changed
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries.CreateSegments">
            <summary>
            Creates the segments of FastLineBitmapSeries.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries.EnableAntiAliasing">
            <summary>
            Gets or Sets a value that determines whether to anti-alias line.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries.StrokeDashArray">
            <summary>
            Gets or sets a collection of Double values that indicates the pattern of
            dashes and gaps that is used to outline shapes.</summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries.SegmentSelectionBrush">
            <summary>
            Gets or Sets selection brush.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries.SelectedIndex">
            <summary>
            Gets or Sets SelectedIndex.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.FastLineSeries">
            <summary>
            FastLineSeries is another version of LineSeries which uses different technology for rendering line in order to boost performance.
            </summary>
            <remarks>
            FastLineSeries uses polyline and is capable of rendering large amount of data in a milliseconds.
            </remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FastLineSegment"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.LineSeries"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FastLineSeries.StrokeDashArrayProperty">
            <summary>
            Using a DependencyProperty as the backing store for StrokeDashArray.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FastLineSeries.StrokeDashOffsetProperty">
            <summary>
            Using a DependencyProperty as the backing store for StrokeThickness.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FastLineSeries.StrokeDashCapProperty">
            <summary>
            Using a DependencyProperty as the backing store for StrokeDashCap.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FastLineSeries.SegmentSelectionBrushProperty">
            <summary>
             Using a DependencyProperty as the backing store for SegmentSelectionBrush.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineSeries.RaiseSelectionChanging(System.Int32,System.Int32)">
            <summary>
            Method is used to raise SelectionChanging event
            </summary>
            <param name="newIndex"></param>
            <param name="oldIndex"></param>
            <param name="series"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineSeries.RaiseSelectionChangedEvent">
            <summary>
            Called when selection changed in load time
            </summary>
            <param name="segment"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineSeries.SelectedIndexChanged(System.Int32,System.Int32)">
            <summary>
            Method used to trigger SelectionChanged event to SelectedIndex segment
            </summary>
            <param name="newIndex"></param>
            <param name="oldIndex"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineSeries.GetDataPoint(System.Windows.Point)">
            <summary>
            This method used to gets the chart data point at a position.
            </summary>
            <param name="mousePos"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineSeries.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when DataSource property changed
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineSeries.OnVisibleRangeChanged(Syncfusion.UI.Xaml.Charts.VisibleRangeChangedEventArgs)">
            <summary>
            Called when VisibleRange property changed
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineSeries.CreateSegments">
            <summary>
            Creates the segments of FastLineSeries.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastLineSeries.StrokeDashArray">
            <summary>
            Gets or Sets stroke dash array for series.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastLineSeries.StrokeDashOffset">
            <summary>
            Gets or Sets stroke dash offset for series.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastLineSeries.StrokeDashCap">
            <summary>
            Gets or Sets stroke dash cap  for series.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastLineSeries.StrokeLineJoin">
            <summary>
            Gets or sets the type of join between two line or segments
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastLineSeries.SegmentSelectionBrush">
            <summary>
            Gets or Sets selection brush.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastLineSeries.SelectedIndex">
            <summary>
            Gets or Sets SelectedIndex.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSeries">
            <summary>
            HiLoOpenCloseSeries is used primarily to analyze price movements of a stock market over a period of time.
            </summary>
            <remarks>
            Each data point contains two values namely high, low. Typically, the high and low values are connected using a vertical straight line.
            </remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSegment"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.HiLoSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.CandleSeries"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSeries.SegmentSelectionBrushProperty">
            <summary>
             Using a DependencyProperty as the backing store for SegmentSelectionBrush.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSeries.GetDataPointIndex(System.Windows.Point)">
            <summary>
             This method used to get the chart data index at an SfChart co-ordinates
             </summary>
             <param name="index"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSeries.IsPointOnLine(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean)">
            <summary>
            Method used to check the given checkPoint within the startPoint and endPoint
            </summary>
            <param name="startPoint"></param>
            <param name="endPoint"></param>
            <param name="checkPoint"></param>
            <param name="isOpenCloseLine"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSeries.CreateSegments">
            <summary>
            Creates the segments of HiLoOpenCloseSeries
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSeries.SegmentSelectionBrush">
            <summary>
            Gets or Sets selection brush.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSeries.SelectedIndex">
            <summary>
            Gets or Sets SelectedIndex.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.HiLoSeries">
            <summary>
            HiLoSeries is used primarily to analyze price movements of a stock market over a period of time.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.HiLoSegment"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.CandleSeries"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.HiLoSeries.SegmentSelectionBrushProperty">
            <summary>
             Using a DependencyProperty as the backing store for SegmentSelectionBrush.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HiLoSeries.GetDataPoint(System.Windows.Point)">
            <summary>
            This method used to gets the chart data point at a position.
            </summary>
            <param name="mousePos"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HiLoSeries.GetDataPointIndex(System.Windows.Point)">
            <summary>
             This method used to get the chart data index at an SfChart co-ordinates
             </summary>
             <param name="index"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HiLoSeries.IsPointOnLine(System.Windows.Point,System.Windows.Point,System.Windows.Point)">
            <summary>
            Method used to check the given checkPoint within the startPoint and endPoint
            </summary>
            <param name="startPoint"></param>
            <param name="endPoint"></param>
            <param name="checkPoint"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HiLoSeries.CreateSegments">
            <summary>
            Creates the segments of HiLoSeries.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.HiLoSeries.SegmentSelectionBrush">
            <summary>
            Gets or Sets selection brush.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.HiLoSeries.SelectedIndex">
            <summary>
            Gets or Sets SelectedIndex.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.HistogramSeries">
            <summary>
            A histogram consists of tabular frequencies, shown as adjacent rectangles, erected over discrete intervals, with an area equal to the frequency of the observations in the <see cref="P:Syncfusion.UI.Xaml.Charts.HistogramSeries.HistogramInterval"/>. 
            </summary>
            <remarks>    
            The height of a rectangle is also equal to the frequency density of the interval.A histogram may also be normalized displaying relative frequencies.
            You can also draw a normal distribution curve for the given data points, by enabling the <see cref="P:Syncfusion.UI.Xaml.Charts.HistogramSeries.ShowNormalDistributionCurve"/>
            </remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.HistogramSegment"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ColumnSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.BarSeries"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.HistogramSeries.C_distributionPointsCount">
            <summary>
            Initializes c_distributionPointsCount
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.HistogramSeries.c_sqrtDoublePI">
            <summary>
            Initializes c_sqrtDoublePI
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.HistogramSeries.YBindingPathProperty">
            <summary>
            Using a DependencyProperty as the backing store for YBindingPath.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.HistogramSeries.HistogramIntervalProperty">
            <summary>
            Using a DependencyProperty as the backing store for HistogramInterval.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.HistogramSeries.ShowNormalDistributionCurveProperty">
            <summary>
            Using a DependencyProperty as the backing store for ShowNormalDistributionCurve.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.HistogramSeries.XAxisProperty">
            <summary>
            Using a DependencyProperty as the backing store for XAxis.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.HistogramSeries.YAxisProperty">
            <summary>
            Using a DependencyProperty as the backing store for YAxis.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HistogramSeries.#ctor">
            <summary>
            Called when instance created for HistogramSeries
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HistogramSeries.OnYAxisChanged(Syncfusion.UI.Xaml.Charts.ChartAxis,Syncfusion.UI.Xaml.Charts.ChartAxis)">
            <summary>
            Called when YAxis property changed 
            </summary>
            <param name="oldAxis"></param>
            <param name="newAxis"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HistogramSeries.OnXAxisChanged(Syncfusion.UI.Xaml.Charts.ChartAxis,Syncfusion.UI.Xaml.Charts.ChartAxis)">
            <summary>
            Called when XAxis value changed
            </summary>
            <param name="oldAxis"></param>
            <param name="newAxis"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HistogramSeries.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when DataSource property changed
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HistogramSeries.GeneratePoints">
            <summary>
            method declaration for generatepoints in Chartseries
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HistogramSeries.CreateSegments">
            <summary>
            Creates the segments of HistogramSeries.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HistogramSeries.UpdateSegments(System.Int32,System.Collections.Specialized.NotifyCollectionChangedAction)">
            <summary>
            Updates the segment at the specified index
            </summary>
            <param name="index">The index of the segment.</param>
            <param name="action">The action that caused the segments collection changed event</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HistogramSeries.GetHistogramMeanAndDeviation(System.Collections.Generic.List{System.Windows.Point},System.Double@,System.Double@)">
            <summary>
            Gets the histogram mean and deviation.
            </summary>
            <param name="points">The cpwi A.</param>
            <param name="mean">The mean value.</param>
            <param name="standartDeviation">The standart deviation.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HistogramSeries.NormalDistribution(System.Double,System.Double,System.Double)">
            <summary>
            Normal Distribution function.
            </summary>
            <param name="x">The x value.</param>
            <param name="m">The m value.</param>
            <param name="sigma">The sigma value.</param>
            <returns>The Normal Distribution</returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.HistogramSeries.YBindingPath">
            <summary>
            Gets or Sets the property path to retrieve y data from ItemsSource
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.HistogramSeries.HistogramInterval">
            <summary>
            Gets or Sets histogram interval
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.HistogramSeries.ShowNormalDistributionCurve">
            <summary>
            Gets or Sets a value whether to show normal distribution curve.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.HistogramSeries.XRange">
            <summary>
            Get or Set  XRange property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.HistogramSeries.YRange">
            <summary>
            Get or set YRange property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.HistogramSeries.XAxis">
            <summary>
            Get or Set XAxis property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.HistogramSeries.YAxis">
            <summary>
            Get or Set YAxis property
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.LineSeries">
            <summary>
            A line chart displays series as a set of points connected by using a straight line.
            Line charts are used to represent large amounts of data observed over a continuous period of time.
            </summary>
            <remarks>
            LineChart appearance can be customized by using <see cref="P:Syncfusion.UI.Xaml.Charts.LineSeries.CustomTemplate"/> property.
            </remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.LineSegment"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FastLineSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.SplineSeries"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LineSeries.CustomTemplateProperty">
            <summary>
            Using a DependencyProperty as the backing store for Template.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LineSeries.SegmentSelectionBrushProperty">
            <summary>
            Using a DependencyProperty as the backing store for SegmentSelectionBrush.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSeries.GetDataPoint(System.Windows.Point)">
            <summary>
            This method used to gets the chart data point at a position.
            </summary>
            <param name="mousePos"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSeries.SelectedIndexChanged(System.Int32,System.Int32)">
            <summary>
            Method used to set SegmentSelectionBrush to SelectedIndex segment
            </summary>
            <param name="newIndex"></param>
            <param name="oldIndex"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSeries.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Event to show tooltip
            </summary>
            <param name="e"> Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSeries.CreateSegments">
            <summary>
            Creates the segments of LineSeries.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LineSeries.CustomTemplate">
            <summary>
            Gets or sets the user defined data template for LineSeries
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LineSeries.SelectedIndex">
            <summary>
            Gets or Sets SelectedIndex.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LineSeries.SegmentSelectionBrush">
            <summary>
            Gets or Sets the selection brush
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.PieSeries">
            <summary>
            PieSeries displays data as a proportion of the whole.PieSeries are most commonly used to make comparisons among a set of given data.
            </summary>
            <remarks>
            PieSeries does not have any axis. The segments in PieSeries can be exploded to a certain distance from the center using <see>
                                                                                                                                        <cref>PieSeries.ExplodeIndex</cref>
                                                                                                                                    </see>
                or <see>
                       <cref>PieSeries.ExplodeAll</cref>
                   </see>
                property.
            The segments can be filled with a custom set of colors using <see cref="P:Syncfusion.UI.Xaml.Charts.ChartColorModel.CustomBrushes"/> property.
            </remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.PieSegment"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.DoughnutSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.DoughnutSegment"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.PieSeries.PieCoefficientProperty">
            <summary>
            Using a DependencyProperty as the backing store for Piecoffeficient.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSeries.#ctor">
            <summary>
            Called when instance created for PieSeries
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSeries.GetPieSeriesCount">
            <summary>
            Gets the pie series count.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSeries.CreateSegments">
            <summary>
            Creates the segments of PieSeries.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSeries.CreateTransformer(System.Windows.Size,System.Boolean)">
            <summary>
            Return IChartTranform value based upon the given size
            </summary>
            <param name="size"></param>
            <param name="create"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSeries.CreateAdornment(Syncfusion.UI.Xaml.Charts.AdornmentSeries,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Method implementation for Create Adornments
            </summary>
            <param name="series"></param>
            <param name="xVal"></param>
            <param name="yVal"></param>
            <param name="angle"></param>
            <param name="radius"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSeries.SetExplodeIndex(System.Int32)">
            <summary>
            Method implementation for ExplodeIndex
            </summary>
            <param name="i"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSeries.SetExplodeRadius">
            <summary>
            Virtual Method for ExplodeRadius
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSeries.SetExplodeAll">
            <summary>
            Virtual method for ExplodeAll
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PieSeries.PieCoefficient">
            <summary>
            Gets or Sets coefficient, which determines the radius of pie.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.PolarSeries">
            <summary>
            PolarSeries displays data points that are grouped by category on a 360-degree circle. 
            </summary>
            <remarks>
            Polar charts are most commonly used to plot polar data, where each data point is determined by an angle and a distance.
            </remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.RadarSeries"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PolarSeries.CreateTransformer(System.Windows.Size,System.Boolean)">
            <summary>
            Return IChartTranform value based upon the given size
            </summary>
            <param name="size"></param>
            <param name="create"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PolarSeries.CreateSegments">
            <summary>
            Creates the segments of PolarSeries.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.RadarSeries">
            <summary>
            RadarSeries displays data points as a circular line or area.    
            </summary>
            <remarks>
            Unlike the <see cref="T:Syncfusion.UI.Xaml.Charts.PolarSeries"/>, RadarSeries does not display data in terms of polar coordinates.
            RadarSeries is useful for comparisons between multiple series of category data.
            </remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.PolarSeries"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RadarSeries.CreateTransformer(System.Windows.Size,System.Boolean)">
            <summary>
            Return IChartTranform value based upon the given size
            </summary>
            <param name="size"></param>
            <param name="create"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RadarSeries.CreateSegments">
            <summary>
            Creates the Segments of RadarSeries.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.RangeAreaSeries">
            <summary>
            RangeAreaSeries displays data points as a set of continuous lines with the areas between the high value and low value are filled in.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.RangeAreaSegment"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.RangeColumnSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.AreaSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.SplineAreaSeries"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.RangeAreaSeries.HighValueInteriorProperty">
            <summary>
            Using a DependencyProperty as the backing store for HighValueInterior.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.RangeAreaSeries.LowValueInteriorProperty">
            <summary>
            Using a DependencyProperty as the backing store for LowValueInterior.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.RangeAreaSeries.SegmentSelectionBrushProperty">
            <summary>
            Using a DependencyProperty as the backing store for SegmentSelectionBrush.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeAreaSeries.SelectedIndexChanged(System.Int32,System.Int32)">
            <summary>
            Method used to set SegmentSelectionBrush to SelectedIndex segment
            </summary>
            <param name="newIndex"></param>
            <param name="oldIndex"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeAreaSeries.CreateSegments">
            <summary>
            Creates the segments of RangeAreaSeries
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeAreaSeries.GetCrossPoint(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point)">
            <summary>
            Gets the cross point.
            </summary>
            <param name="p11">The P11 value.</param>
            <param name="p12">The P12 value.</param>
            <param name="p21">The P21 value.</param>
            <param name="p22">The P22 value.</param>
            <returns>The CrossPoint</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeAreaSeries.GetDataPoint(System.Windows.Point)">
            <summary>
            This method used to gets the chart data point at a position.
            </summary>
            <param name="mousePos"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeAreaSeries.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Event to show tooltip
            </summary>
            <param name="e"> Event Arguments</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeAreaSeries.HighValueInterior">
            <summary>
            Gets or Sets high value interior
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeAreaSeries.LowValueInterior">
            <summary>
            Gets or Sets low value interior
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeAreaSeries.SelectedIndex">
            <summary>
            Gets or Sets SelectedIndex.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeAreaSeries.SegmentSelectionBrush">
            <summary>
            Gets or Sets the selection brush
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.RangeColumnSeries">
             <summary>
            RangeColumnSeries displays data points as a set of vertical bars of varying heights,starting at different points within a area of<see cref="T:Syncfusion.UI.Xaml.Charts.SfChart"/>.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.RangeColumnSegment"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.RangeAreaSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ColumnSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.BarSeries"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.RangeColumnSeries.SegmentSelectionBrushProperty">
            <summary>
            Using a DependencyProperty as the backing store for SegmentSelectionBrush.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeColumnSeries.CreateSegments">
            <summary>
            Creates the segments of RangeColumn Series.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeColumnSeries.SegmentSelectionBrush">
            <summary>
            Gets or Sets selection brush
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeColumnSeries.SelectedIndex">
            <summary>
            Gets or Sets SelectedIndex.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ScatterSeries">
            <summary>
            ScatterSeries displays data points as set of circular symbols. 
            Values are being represented by the position of the symbols on the chart.    
            </summary>
            <remarks>
            ScatterSeries are typically used to compare aggregated data across categories.
            </remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ScatterSegment"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.BubbleSeries"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ScatterSeries.SegmentSelectionBrushProperty">
            <summary>
            Using a DependencyProperty as the backing store for SegmentSelectionBrush.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ScatterSeries.ScatterWidthProperty">
            <summary>
            Using a DependencyProperty as the backing store for ScatterWidth.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ScatterSeries.ScatterHeightProperty">
            <summary>
            Using a DependencyProperty as the backing store for Radius.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ScatterSeries.GetDataPointIndex(System.Windows.Point)">
            <summary>
             This method used to get the chart data index at an SfChart co-ordinates
             </summary>
             <param name="index"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ScatterSeries.EllipseContainsPoint(System.Windows.Shapes.Ellipse,System.Windows.Point)">
            <summary>
            This method used to check the position within the ellipse
            </summary>
            <param name="Ellipse"></param>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ScatterSeries.CreateSegments">
            <summary>
            Creates the segments of ScatterSeries
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ScatterSeries.SegmentSelectionBrush">
            <summary>
            Gets or Sets selection brush
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ScatterSeries.ScatterWidth">
            <summary>
            Gets or Sets scatter segment’s width.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ScatterSeries.ScatterHeight">
            <summary>
            Gets or Sets scatter segment’s height.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ScatterSeries.SelectedIndex">
            <summary>
            Gets or Sets SelectedIndex.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ScatterSeries.CustomTemplate">
            <summary>
            Gets or sets the user defined data template for ScatterSeries
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.SplineAreaSeries">
            <summary>
            SplineAreaSeries connects it data points using a smooth line segment with the areas below are filled in.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.SplineAreaSegment"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.SplineSeries"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.AreaSeries"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SplineAreaSeries.SegmentSelectionBrushProperty">
            <summary>
            Using a DependencyProperty as the backing store for SegmentSelectionBrush.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineAreaSeries.SelectedIndexChanged(System.Int32,System.Int32)">
            <summary>
            Method used to set SegmentSelectionBrush to SelectedIndex segment
            </summary>
            <param name="newIndex"></param>
            <param name="oldIndex"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineAreaSeries.GetDataPoint(System.Windows.Point)">
            <summary>
            This method used to gets the chart data point at a position.
            </summary>
            <param name="mousePos"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineAreaSeries.RaiseSelectionChanging(System.Int32,System.Int32)">
            <summary>
            Method is used to raise SelectionChanging event
            </summary>
            <param name="newIndex"></param>
            <param name="oldIndex"></param>
            <param name="series"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineAreaSeries.RaiseSelectionChangedEvent">
            <summary>
            Called when selection changed in load time
            </summary>
            <param name="segment"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineAreaSeries.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when DataSource property changed
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineAreaSeries.CreateSegments">
            <summary>
            Creates the segments of SplineAreaSeries
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineAreaSeries.NaturalSpline(System.Collections.Generic.List{System.Double},System.Collections.Generic.IList{System.Double},System.Double[]@)">
            <summary>
            Method implementation for NaturalSpline
            </summary>
            <param name="xValues"></param>
            <param name="yValues"></param>
            <param name="ys2"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineAreaSeries.GetBezierControlPoints(System.Windows.Point,System.Windows.Point,System.Double,System.Double,System.Windows.Point@,System.Windows.Point@)">
            <summary>
            Method implementation for GetBezierControlPoints
            </summary>
            <param name="point1"></param>
            <param name="point2"></param>
            <param name="ys1"></param>
            <param name="ys2"></param>
            <param name="controlPoint1"></param>
            <param name="controlPoint2"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineAreaSeries.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Event to show tooltip
            </summary>
            <param name="e"> Event Arguments</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SplineAreaSeries.SelectedIndex">
            <summary>
            Gets or Sets SelectedIndex.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SplineAreaSeries.SegmentSelectionBrush">
            <summary>
            Gets or Sets the selection brush
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.SplineSeries">
            <summary>
            SplineSeries is similar to that of <see cref="T:Syncfusion.UI.Xaml.Charts.LineSeries"/> except that the points here are connected using smooth Bezier curves.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.SplineSegment"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SplineSeries.SegmentSelectionBrushProperty">
            <summary>
            Using a DependencyProperty as the backing store for SegmentSelectionBrush.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineSeries.SelectedIndexChanged(System.Int32,System.Int32)">
            <summary>
            Method used to set SegmentSelectionBrush to SelectedIndex segment
            </summary>
            <param name="newIndex"></param>
            <param name="oldIndex"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineSeries.GetDataPoint(System.Windows.Point)">
            <summary>
            This method used to gets the chart data point at a position.
            </summary>
            <param name="mousePos"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineSeries.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Event to show tooltip
            </summary>
            <param name="e"> Event Arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineSeries.CreateSegments">
            <summary>
            Creates the segments of SplineSeries.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineSeries.NaturalSpline(System.Collections.Generic.List{System.Double},System.Collections.Generic.IList{System.Double},System.Double[]@)">
            <summary>
            
            </summary>
            <param name="xValues"></param>
            <param name="yValues"></param>
            <param name="ys2"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineSeries.GetBezierControlPoints(System.Windows.Point,System.Windows.Point,System.Double,System.Double,System.Windows.Point@,System.Windows.Point@)">
            <summary>
            Returns the controlPoints of the curve
            </summary>
            <param name="point1"></param>
            <param name="point2"></param>
            <param name="ys1"></param>
            <param name="ys2"></param>
            <param name="controlPoint1"></param>
            <param name="controlPoint2"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SplineSeries.CustomTemplate">
            <summary>
            Gets or sets the user defined data template for SplineSeries
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SplineSeries.SelectedIndex">
            <summary>
            Gets or Sets SelectedIndex.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SplineSeries.SegmentSelectionBrush">
            <summary>
            Gets or Sets the selection brush
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartBehaviorsCollection">
            <summary>
            A collection class which holds ChartBehaviors.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehaviorsCollection.#ctor(Syncfusion.UI.Xaml.Charts.SfChart)">
            <summary>
            Called when instance created for ChartBehaviourCollection
            </summary>
            <param name="area"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehaviorsCollection.InsertItem(System.Int32,Syncfusion.UI.Xaml.Charts.ChartBehavior)">
            <summary>
            Inserts an item into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param><param name="item">The object to insert.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartBehaviorsCollection.RemoveItem(System.Int32)">
            <summary>
            Removes the item at the specified index of the collection.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartAxisLabelCollection">
            <summary>
            Represents a collection of <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAxisLabel"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxisLabelCollection.InsertItem(System.Int32,Syncfusion.UI.Xaml.Charts.ChartAxisLabel)">
            <summary>
            Inserts an item into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param><param name="item">The object to insert.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxisLabelCollection.ClearItems">
            <summary>
            ChartAxisLabelsCollection Clear Items
            </summary>    
            <seealso>
                <cref>ChartAxisLabelsCollection</cref>
            </seealso>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartLegendCollection">
            <summary>
            A collection class which holds chart legend
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartStripLines">
            <summary>
            A collection class which holds ChartStripLine
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartAxisCollection">
            <summary>
            A collection class which holds ChartAxis.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxisCollection.Item(System.String)">
            <summary>
            return ChartAxis value from the given string
            </summary>
            <param name="name"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartTrendLineCollection">
            <summary>
            A collection class which holds ChartTrendLine.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartTrendLineCollection.Item(System.String)">
            <summary>
            return ChartTrendLine from the given string
            </summary>
            <param name="name"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartSeriesCollection">
            <summary>
            A collection class which holds ChartSeries.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeriesCollection.Item(System.String)">
            <summary>
            return ChartSeries from the given string
            </summary>
            <param name="name"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartVisibleSeriesCollection">
            <summary>
            A collection class which holds ChartSeries 2D.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartVisibleSeriesCollection.Item(System.String)">
            <summary>
            return ChartSeries from the given string
            </summary>
            <param name="name"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartSeries3DCollection">
            <summary>
            A collection class which holds ChartSeries 3D.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartSeries3DCollection.Item(System.String)">
            <summary>
            return ChartSeries from the given string
            </summary>
            <param name="name"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartRowDefinitions">
            <summary>
            A collection class which holds ChartRowDefinitions
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartColumnDefinitions">
            <summary>
            A collection class which holds ChartColumnDefinitions
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.VisibilityToBooleanConverter">
            <summary>
            Converts Visibility to Boolean value and vice-versa.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.VisibilityToBooleanConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the source data before passing it to the target for display in the UI.
            </summary>
            <returns>
            The value to be passed to the target dependency property.
            </returns>
            <param name="value">The source data being passed to the target.</param><param name="targetType">The <see cref="T:System.Type"/> of data expected by the target dependency property.</param><param name="parameter">An optional parameter to be used in the converter logic.</param><param name="culture">The culture of the conversion.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.VisibilityToBooleanConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the target data before passing it to the source object.  This method is called only in <see cref="F:System.Windows.Data.BindingMode.TwoWay"/> bindings.
            </summary>
            <returns>
            The value to be passed to the source object.
            </returns>
            <param name="value">The target data being passed to the source.</param><param name="targetType">The <see cref="T:System.Type"/> of data expected by the source object.</param><param name="parameter">An optional parameter to be used in the converter logic.</param><param name="culture">The culture of the conversion.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.BooleanToVisibilityConverter">
            <summary>
            Converts Boolean value to Visibility value and vice-versa.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BooleanToVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the source data before passing it to the target for display in the UI.
            </summary>
            <returns>
            The value to be passed to the target dependency property.
            </returns>
            <param name="value">The source data being passed to the target.</param><param name="targetType">The <see cref="T:System.Type"/> of data expected by the target dependency property.</param><param name="parameter">An optional parameter to be used in the converter logic.</param><param name="culture">The culture of the conversion.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BooleanToVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the target data before passing it to the source object.  This method is called only in <see cref="F:System.Windows.Data.BindingMode.TwoWay"/> bindings.
            </summary>
            <returns>
            The value to be passed to the source object.
            </returns>
            <param name="value">The target data being passed to the source.</param><param name="targetType">The <see cref="T:System.Type"/> of data expected by the source object.</param><param name="parameter">An optional parameter to be used in the converter logic.</param><param name="culture">The culture of the conversion.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ConnectorRotationAngleConverter">
            <summary>
            Converts the angle value by series IsTransposed.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ConnectorRotationAngleConverter.#ctor(Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Called when instance created for ConnectorRotationAngleConverter
            </summary>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ConnectorRotationAngleConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the source data before passing it to the target for display in the UI.
            </summary>
            <returns>
            The value to be passed to the target dependency property.
            </returns>
            <param name="value">The source data being passed to the target.</param><param name="targetType">The <see cref="T:System.Type"/> of data expected by the target dependency property.</param><param name="parameter">An optional parameter to be used in the converter logic.</param><param name="culture">The culture of the conversion.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ConnectorRotationAngleConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the target data before passing it to the source object.  This method is called only in <see cref="F:System.Windows.Data.BindingMode.TwoWay"/> bindings.
            </summary>
            <returns>
            The value to be passed to the source object.
            </returns>
            <param name="value">The target data being passed to the source.</param><param name="targetType">The <see cref="T:System.Type"/> of data expected by the source object.</param><param name="parameter">An optional parameter to be used in the converter logic.</param><param name="culture">The culture of the conversion.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.InteriorConverter">
            <summary>
            Resolves the color of the series or segment dynamically.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.InteriorConverter.#ctor(Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Called when instance created for InteriorConverter
            </summary>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.InteriorConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the source data before passing it to the target for display in the UI.
            </summary>
            <returns>
            The value to be passed to the target dependency property.
            </returns>
            <param name="value">The source data being passed to the target.</param><param name="targetType">The <see cref="T:System.Type"/> of data expected by the target dependency property.</param><param name="parameter">An optional parameter to be used in the converter logic.</param><param name="culture">The culture of the conversion.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.InteriorConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the target data before passing it to the source object.  This method is called only in <see cref="F:System.Windows.Data.BindingMode.TwoWay"/> bindings.
            </summary>
            <returns>
            The value to be passed to the source object.
            </returns>
            <param name="value">The target data being passed to the source.</param><param name="targetType">The <see cref="T:System.Type"/> of data expected by the source object.</param><param name="parameter">An optional parameter to be used in the converter logic.</param><param name="culture">The culture of the conversion.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.SegmentSelectionBrushConverter">
            <summary>
            Resolves the SegmentSelectionBrush of the series dynamically.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SegmentSelectionBrushConverter.#ctor(Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Called when instance created for InteriorConverter
            </summary>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SegmentSelectionBrushConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the source data before passing it to the target for display in the UI.
            </summary>
            <returns>
            The value to be passed to the target dependency property.
            </returns>
            <param name="value">The source data being passed to the target.</param><param name="targetType">The <see cref="T:System.Type"/> of data expected by the target dependency property.</param><param name="parameter">An optional parameter to be used in the converter logic.</param><param name="culture">The culture of the conversion.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SegmentSelectionBrushConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the target data before passing it to the source object.  This method is called only in <see cref="F:System.Windows.Data.BindingMode.TwoWay"/> bindings.
            </summary>
            <returns>
            The value to be passed to the source object.
            </returns>
            <param name="value">The target data being passed to the source.</param><param name="targetType">The <see cref="T:System.Type"/> of data expected by the source object.</param><param name="parameter">An optional parameter to be used in the converter logic.</param><param name="culture">The culture of the conversion.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.SeriesSelectionBrushConverter">
            <summary>
            Resolves the SeriesSelectionBrush of the series dynamically.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SeriesSelectionBrushConverter.#ctor(Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Called when instance created for InteriorConverter
            </summary>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SeriesSelectionBrushConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the source data before passing it to the target for display in the UI.
            </summary>
            <returns>
            The value to be passed to the target dependency property.
            </returns>
            <param name="value">The source data being passed to the target.</param><param name="targetType">The <see cref="T:System.Type"/> of data expected by the target dependency property.</param><param name="parameter">An optional parameter to be used in the converter logic.</param><param name="culture">The culture of the conversion.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SeriesSelectionBrushConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the target data before passing it to the source object.  This method is called only in <see cref="F:System.Windows.Data.BindingMode.TwoWay"/> bindings.
            </summary>
            <returns>
            The value to be passed to the source object.
            </returns>
            <param name="value">The target data being passed to the source.</param><param name="targetType">The <see cref="T:System.Type"/> of data expected by the source object.</param><param name="parameter">An optional parameter to be used in the converter logic.</param><param name="culture">The culture of the conversion.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.MultiInteriorConverter">
            <summary>
            Returns the brush to be used based on the <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.Interior"/> property value.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MultiInteriorConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the source data before passing it to the target for display in the UI.
            </summary>
            <returns>
            The value to be passed to the target dependency property.
            </returns>
            <param name="value">The source data being passed to the target.</param><param name="targetType">The <see cref="T:System.Type"/> of data expected by the target dependency property.</param><param name="parameter">An optional parameter to be used in the converter logic.</param><param name="culture">The culture of the conversion.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MultiInteriorConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the target data before passing it to the source object.  This method is called only in <see cref="F:System.Windows.Data.BindingMode.TwoWay"/> bindings.
            </summary>
            <returns>
            The value to be passed to the source object.
            </returns>
            <param name="value">The target data being passed to the source.</param><param name="targetType">The <see cref="T:System.Type"/> of data expected by the source object.</param><param name="parameter">An optional parameter to be used in the converter logic.</param><param name="culture">The culture of the conversion.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.DragElementRotateConverter">
            <summary>
            Returns the rotate angle.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DragElementRotateConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the source data before passing it to the target for display in the UI.
            </summary>
            <returns>
            The value to be passed to the target dependency property.
            </returns>
            <param name="value">The source data being passed to the target.</param><param name="targetType">The <see cref="T:System.Type"/> of data expected by the target dependency property.</param><param name="parameter">An optional parameter to be used in the converter logic.</param><param name="culture">The culture of the conversion.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DragElementRotateConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the target data before passing it to the source object.  This method is called only in <see cref="F:System.Windows.Data.BindingMode.TwoWay"/> bindings.
            </summary>
            <returns>
            The value to be passed to the source object.
            </returns>
            <param name="value">The target data being passed to the source.</param><param name="targetType">The <see cref="T:System.Type"/> of data expected by the source object.</param><param name="parameter">An optional parameter to be used in the converter logic.</param><param name="culture">The culture of the conversion.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.LegendMarginConverter">
            <summary>
            set the margin for windows phone legend icon
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LabelContentPathConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the source data before passing it to the target for display in the UI.
            </summary>
            <returns>
            The value to be passed to the target dependency property.
            </returns>
            <param name="value">The source data being passed to the target.</param><param name="targetType">The <see cref="T:System.Type"/> of data expected by the target dependency property.</param><param name="parameter">An optional parameter to be used in the converter logic.</param><param name="culture">The culture of the conversion.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LabelContentPathConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the target data before passing it to the source object.  This method is called only in <see cref="F:System.Windows.Data.BindingMode.TwoWay"/> bindings.
            </summary>
            <returns>
            The value to be passed to the source object.
            </returns>
            <param name="value">The target data being passed to the source.</param><param name="targetType">The <see cref="T:System.Type"/> of data expected by the source object.</param><param name="parameter">An optional parameter to be used in the converter logic.</param><param name="culture">The culture of the conversion.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LabelBackgroundConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the source data before passing it to the target for display in the UI.
            </summary>
            <returns>
            The value to be passed to the target dependency property.
            </returns>
            <param name="value">The source data being passed to the target.</param><param name="targetType">The <see cref="T:System.Type"/> of data expected by the target dependency property.</param><param name="parameter">An optional parameter to be used in the converter logic.</param><param name="culture">The culture of the conversion.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LabelBackgroundConverter.IsAdornmentSelected(Syncfusion.UI.Xaml.Charts.ChartAdornment)">
            <summary>
            Method used to get the given adornment is selected or not
            </summary>
            <param name="adornment"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LabelBackgroundConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the target data before passing it to the source object.  This method is called only in <see cref="F:System.Windows.Data.BindingMode.TwoWay"/> bindings.
            </summary>
            <returns>
            The value to be passed to the source object.
            </returns>
            <param name="value">The target data being passed to the source.</param><param name="targetType">The <see cref="T:System.Type"/> of data expected by the source object.</param><param name="parameter">An optional parameter to be used in the converter logic.</param><param name="culture">The culture of the conversion.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LabelBorderBrushConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the source data before passing it to the target for display in the UI.
            </summary>
            <returns>
            The value to be passed to the target dependency property.
            </returns>
            <param name="value">The source data being passed to the target.</param><param name="targetType">The <see cref="T:System.Type"/> of data expected by the target dependency property.</param><param name="parameter">An optional parameter to be used in the converter logic.</param><param name="culture">The culture of the conversion.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LabelBorderBrushConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the target data before passing it to the source object.  This method is called only in <see cref="F:System.Windows.Data.BindingMode.TwoWay"/> bindings.
            </summary>
            <returns>
            The value to be passed to the source object.
            </returns>
            <param name="value">The target data being passed to the source.</param><param name="targetType">The <see cref="T:System.Type"/> of data expected by the source object.</param><param name="parameter">An optional parameter to be used in the converter logic.</param><param name="culture">The culture of the conversion.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LabelForegroundConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the source data before passing it to the target for display in the UI.
            </summary>
            <returns>
            The value to be passed to the target dependency property.
            </returns>
            <param name="value">The source data being passed to the target.</param><param name="targetType">The <see cref="T:System.Type"/> of data expected by the target dependency property.</param><param name="parameter">An optional parameter to be used in the converter logic.</param><param name="culture">The culture of the conversion.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LabelForegroundConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the target data before passing it to the source object.  This method is called only in <see cref="F:System.Windows.Data.BindingMode.TwoWay"/> bindings.
            </summary>
            <returns>
            The value to be passed to the source object.
            </returns>
            <param name="value">The target data being passed to the source.</param><param name="targetType">The <see cref="T:System.Type"/> of data expected by the source object.</param><param name="parameter">An optional parameter to be used in the converter logic.</param><param name="culture">The culture of the conversion.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.FastReflectionCaches">
            <summary>
            Contains members to hold PropertyInfo.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase">
            <summary>
            Represents the class used for configuring chart adornments for chart.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.HorizontalAlignmentProperty">
            <summary>
             Identifies the HorizontalAlignment dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.VerticalAlignmentProperty">
            <summary>
             Identifies the VerticalAlignment dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.ConnectorHeightProperty">
            <summary>
            Using a DependencyProperty as the backing store for ConnectorHeight.  This enables animation, styling, binding, etc... 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.ConnectorRotationAngleProperty">
            <summary>
            Using a DependencyProperty as the backing store for ConnectorRotationAngle.  This enables animation, styling, binding, etc... 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.ConnectorLineStyleProperty">
            <summary>
            Using a DependencyProperty as the backing store for ConnectorLineStyle.  This enables animation, styling, binding, etc... 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.ShowConnectorLineProperty">
            <summary>
            Using a DependencyProperty as the backing store for ShowConnectorLine.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.LabelTemplateProperty">
            <summary>
            Using a DependencyProperty as the backing store for LabelTemplate.  This enables animation, styling, binding, etc... 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.SymbolProperty">
            <summary>
            Using a DependencyProperty as the backing store for Symbol.  This enables animation, styling, binding, etc... 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.SymbolWidthProperty">
            <summary>
            Using a DependencyProperty as the backing store for SymbolWidth.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.SymbolHeightProperty">
            <summary>
            Using a DependencyProperty as the backing store for SymbolHeight.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.SymbolTemplateProperty">
            <summary>
            Using a DependencyProperty as the backing store for SymbolTemplate.  This enables animation, styling, binding, etc... 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.SymbolInteriorProperty">
            <summary>
            Using a DependencyProperty as the backing store for SymbolInterior.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.SymbolStrokeProperty">
            <summary>
            Using a DependencyProperty as the backing store for SymbolStroke.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.FontFamilyProperty">
            <summary>
            Identifies the SegmentLabelFontFamily dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.AdornmentsPositionProperty">
            <summary>
            Using a DependencyProperty as the backing store for AdornmentsPosition. This enables animation, styling, binding, etc... 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.SegmentLabelContentProperty">
            <summary>
            Using a DependencyProperty as the backing store for SegmentLabelContent.  This enables animation, styling, binding, etc... 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.SegmentLabelFormatProperty">
            <summary>
            Using a DependencyProperty as the backing store for SegmentLabelFormat.  This enables animation, styling, binding, etc... 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.ShowMarkerProperty">
            <summary>
            Using a DependencyProperty as the backing store for ShowMarker.  This enables animation, styling, binding, etc... 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.ShowLabelProperty">
            <summary>
            Using a DependencyProperty as the backing store for ShowLabel.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.AlignElement(System.Windows.Controls.Control,Syncfusion.UI.Xaml.Charts.ChartAlignment,Syncfusion.UI.Xaml.Charts.ChartAlignment,System.Double,System.Double)">
            <summary>
            Aligns the element.
            </summary>
            <param name="control">The control.</param>
            <param name="verticalAlignment">The vertical alignment.</param>
            <param name="horizontalAlignment">The horizontal alignment.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.SmartLabelsForInside(Syncfusion.UI.Xaml.Charts.ChartAdornment,System.Collections.Generic.IList{System.Windows.Rect},System.Windows.Controls.ContentControl,System.Double,System.Double,System.Double,System.Collections.Generic.List{System.Windows.Point},System.Windows.Point,System.Windows.Rect)">
            <summary>
            Smarts the labels for inside.
            </summary>
            <param name="adornment">The adornment.</param>
            <param name="bounds">The bounds.</param>
            <param name="label">The label.</param>
            <param name="connectorHeight">Height of the connector.</param>
            <param name="labelRadiusFromOrigin">The label radius from origin.</param>
            <param name="pieRadius">The pie radius.</param>
            <param name="drawingPoints">The drawing points.</param>
            <param name="center">The center.</param>
            <param name="currRect">The curr rect.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.SmartLabelsForOutside(System.Collections.Generic.IList{System.Windows.Rect},System.Collections.Generic.IList{System.Windows.Point},System.Windows.Rect,System.Windows.Controls.ContentControl,System.Windows.Point,System.Double,System.Double,System.Double,Syncfusion.UI.Xaml.Charts.ChartAdornment)">
            <summary>
            Smarts the labels for outside.
            </summary>
            <param name="bounds">The bounds.</param>
            <param name="drawingPoints">The drawing points.</param>
            <param name="currRect">The curr rect.</param>
            <param name="label">The label.</param>
            <param name="center">The center.</param>
            <param name="labelRadiusFromOrigin">The label radius from origin.</param>
            <param name="connectorHeight">Height of the connector.</param>
            <param name="explodedRadius">The exploded radius.</param>
            <param name="pieAdornment">The pie adornment.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.GetAdornmentPositions(System.Double,System.Collections.Generic.IList{System.Windows.Rect},System.Windows.Size,Syncfusion.UI.Xaml.Charts.ChartAdornment,System.Int32,System.Double,System.Double,System.Windows.Controls.ContentControl,Syncfusion.UI.Xaml.Charts.ChartSeriesBase,System.Double@,System.Double@)">
            <summary>
            Gets the adornment positions.
            </summary>
            <param name="pieRadius">The pie radius.</param>
            <param name="bounds">The bounds.</param>
            <param name="finalSize">The final size.</param>
            <param name="adornment">The adornment.</param>
            <param name="labelIndex">Index of the label.</param>
            <param name="pieLeft">The pie left.</param>
            <param name="pieRight">The pie right.</param>
            <param name="label">The label.</param>
            <param name="series">The series.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.GetBezierApproximation(System.Collections.Generic.IList{System.Windows.Point},System.Int32)">
            <summary>
            Gets the bezier approximation.
            </summary>
            <param name="controlPoints">The control points.</param>
            <param name="outputSegmentCount">The output segment count.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.GetBezierPoint(System.Double,System.Collections.Generic.IList{System.Windows.Point},System.Int32,System.Int32)">
            <summary>
            Gets the bezier point.
            </summary>
            <param name="t">The t.</param>
            <param name="controlPoints">The control points.</param>
            <param name="index">The index.</param>
            <param name="count">The count.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.DrawLineSegment(System.Collections.Generic.List{System.Windows.Point},System.Windows.Shapes.Path)">
            <summary>
            Draws the line segment.
            </summary>
            <param name="points">The points.</param>
            <param name="path">The path.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.DrawConnecotrLine(System.Int32,System.Collections.Generic.List{System.Windows.Point},Syncfusion.UI.Xaml.Charts.ConnectorMode)">
            <summary>
            Draws the connecotr line.
            </summary>
            <param name="connectorIndex">Index of the connector.</param>
            <param name="drawingPoints">The drawing points.</param>
            <param name="connectorLineMode">The connector line mode.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.PanelChanged(System.Windows.Controls.Panel)">
            <summary>
            Panels the changed.
            </summary>
            <param name="panel">The panel.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.UpdateSpiderLabels(System.Double,System.Double,System.Windows.Size,System.Double)">
            <summary>
            Updates the spider labels.
            </summary>
            <param name="pieLeft">The pie left.</param>
            <param name="pieRight">The pie right.</param>
            <param name="finalSize"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.LabelRotationAngle">
            <summary>
            Gets or sets the rotation angle to the label content.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.Background">
            <summary>
            Gets or sets the background brush to apply to the label content.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.BorderThickness">
            <summary>
            Gets or sets the outer border thickness of the label.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.BorderBrush">
            <summary>
            Gets or sets the brush that draws the outer border color. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.Margin">
            <summary>
            Gets or sets the outer margin of a label.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.FontStyle">
            <summary>
            Gets or sets the top-level font style for the label
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.FontSize">
            <summary>
            Gets or sets the font size for the label.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.Foreground">
            <summary>
            Gets or sets foreground brush to apply to the label content.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.UseSeriesPalette">
            <summary>
            Gets or sets a value indicating whether [enable default adornment].
            </summary>
            <value>
            <c>true</c> if [enable default adornment]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.HighlightOnSelection">
            <summary>
            Gets or Sets selection for segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.HorizontalAlignment">
            <summary>
            Gets or Sets the horizontal alignment of the label
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.VerticalAlignment">
            <summary>
            Gets or Sets the vertical alignment of the label
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.ConnectorHeight">
            <summary>
            Gets or Sets the connector line height
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.ConnectorRotationAngle">
            <summary>
            Gets or Sets the connector line angle.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.ConnectorLineStyle">
            <summary>
            Gets or Sets the connector line style
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.ShowConnectorLine">
            <summary>
            Gets or Sets a value that determines whether to show/hide connector line.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.LabelTemplate">
            <summary>
            Gets or Sets the label template.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.Symbol">
            <summary>
            Gets or Sets the symbol
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.SymbolWidth">
            <summary>
            Gets or Sets the width of the symbol
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.SymbolHeight">
            <summary>
            Gets or Sets the height of the symbol
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.SymbolTemplate">
            <summary>
            Gets or Sets the data template for symbol
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.SymbolInterior">
            <summary>
            Gets or Sets the background of the symbol
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.SymbolStroke">
            <summary>
            Gets or Sets the stroke of the symbol
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.FontFamily">
            <summary>
            Gets or sets the segment label font family.
            </summary>
            <remarks>
            Identifies font family that should be used to display adornment's text.
            </remarks>
            <value>
            The segment label font family.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.Series">
            <summary>
            Gets the owner series
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.AdornmentsPosition">
            <summary>
            Gets or Sets the AdornmentsPosition
            <seealso cref="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.AdornmentsPosition"/>
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.SegmentLabelContent">
            <summary>
            Gets or Sets the actual label content to be displayed in the label
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.SegmentLabelFormat">
            <summary>
            Gets or Sets the segment labels format
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.ShowMarker">
            <summary>
            Gets or sets a value that indicates whether to show/hide marker symbol.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase.ShowLabel">
            <summary>
            Gets or sets a value that indicates whether to show/hide label.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfo">
            <summary>
            Represents the class used for configuring chart adornments for 2D chart.
            </summary>
            <remarks>
            Chart adornments are used to show additional information about the data point.
            </remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfo3D">
            <summary>
            Represents the class used for configuring chart adornments for 3D chart.
            </summary>
            <remarks>
            Chart adornments are used to show additional information about the data point.
            </remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartColorModel">
             <summary>
            ChartColorModel contains a number of predefined color palette and have custom brushes collection to populate a custom palette.
             </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartColorModel.#ctor">
            <summary>
            Called when instance created for ChartColorModel
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartColorModel.#ctor(Syncfusion.UI.Xaml.Charts.ChartColorPalette)">
            <summary>
            Called when instance created for ChartColorModel with single arguments
            </summary>
            <param name="palette"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartColorModel.GetBrushes(Syncfusion.UI.Xaml.Charts.ChartColorPalette)">
            <summary>
            Returns the collection of brushes for specified pallete
            </summary>
            <param name="palette">ChartColorPalette</param>
            <returns>List of brushes</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartColorModel.GetMetroBrushes">
            <summary>
            Returns the brushes used for metro palette.
            </summary>
            <returns> Metro Brushes</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartColorModel.GetAutumnBrushes">
            <summary>
            Returns the brushes used for AutumnBrights palette.
            </summary>
            <returns>AutumnBrights Brushes</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartColorModel.GetFloraHuesBrushes">
            <summary>
            Returns the brushes used for FloraHues palette.
            </summary>
            <returns>FloraHues Brushes</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartColorModel.GetPineappleBrushes">
            <summary>
            Returns the brushes used for Pineapple palette.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartColorModel.GetTomotoSpectramBrushes">
            <summary>
            Returns the brushes used for TomotoSpectram palette.
            </summary>
            <returns>Tomoto Brushes</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartColorModel.GetRedChromeBrushes">
            <summary>
            Returns the brushes used for RedChrome palette.
            </summary>
            <returns>RedChrome Brushes</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartColorModel.GetPurpleChromeBrushes">
            <summary>
            Returns the brushes used for PurpleChrome palette.
            </summary>
            <returns>PurpleChrome Brushes</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartColorModel.GetBlueChromeBrushes">
            <summary>
            Returns the brushes used for BlueChrome palette.
            </summary>
            <returns>BlueChrome Brushes</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartColorModel.GetGreenChromeBrushes">
            <summary>
            Returns the brushes used for GreenChrome palette.
            </summary>
            <returns>GreenChrome Brushes</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartColorModel.GetEliteBrushes">
            <summary>
            Returns the brushes used for Elite palette.
            </summary>
            <returns>Elite Brushes</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartColorModel.GetSandyBeachBrushes">
            <summary>
            Returns the brushes used for SandyBeach palette.
            </summary>
            <returns>SandyBeach Brushes</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartColorModel.GetLightCandyBrushes">
            <summary>
            Returns the brushes used for LightCandy palette.
            </summary>
            <returns>LightCandy Brushes</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartColorModel.GetBrush(System.Int32)">
            <summary>
            Returns the brush at the specified index for current palette
            </summary>
            <param name="colorIndex"></param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartColorModel.CustomBrushes">
            <summary>
            Gets or Sets the custom brushes to be used to paint the interiors of each segment in series.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartColumnDefinition">
            <summary>
            Represents a column definition.
            </summary>
            <remarks>
            The width of the row can be defined either in terms of fixed pixels units mode or in auto adjust mode, by using <see cref="P:Syncfusion.UI.Xaml.Charts.ChartColumnDefinition.Unit"/> property.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartColumnDefinition.#ctor">
            <summary>
            Called when instance created for ChartColumnDefinition
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartColumnDefinition.WidthProperty">
            <summary>
            Using a DependencyProperty as the backing store for Width.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartColumnDefinition.UnitProperty">
            <summary>
             Using a DependencyProperty as the backing store for Unit.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartColumnDefinition.BorderThicknessProperty">
            <summary>
             Using a DependencyProperty as the backing store for SplitterLineThickness.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartColumnDefinition.BorderStrokeProperty">
            <summary>
            Using a DependencyProperty as the backing store for SplitterStroke.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartColumnDefinition.Width">
            <summary>
            Gets or Sets width of this column.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartColumnDefinition.Unit">
            <summary>
            Gets or Sets unit of the value specified in Width.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartColumnDefinition.BorderThickness">
            <summary>
            Gets or Sets thickness of the border
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartColumnDefinition.BorderStroke">
            <summary>
            Gets or Sets border stroke.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartPointInfo">
             <summary>
            ChartPointInfo contains information about the displaying series data points.
             </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPointInfo.OnPropertyChanged(System.String)">
            <summary>
            Called when property changed
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPointInfo.SeriesValues">
            <summary>
            Get or Set SeriesValues Property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPointInfo.Series">
            <summary>
            Gets or Sets the owning series.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPointInfo.Axis">
            <summary>
            Gets or Sets the owning axis.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPointInfo.Interior">
            <summary>
            Gets or Sets the interior color of this data point.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPointInfo.LabelX">
            <summary>
            Gets or Sets the x label.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPointInfo.LabelY">
            <summary>
            Gets or Sets the y label.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPointInfo.ValueX">
            <summary>
            Gets or Sets the x value
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPointInfo.ValueY">
            <summary>
            Gets or Sets the y value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPointInfo.BaseX">
            <summary>
            Gets or sets the x initial coordinate
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPointInfo.BaseY">
            <summary>
            Gets or sets the y initial coordinate
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPointInfo.X">
            <summary>
            Gets or sets the x coordinate
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPointInfo.Y">
            <summary>
            Gets or sets the y coordinate
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.ChartPointInfo.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartRowDefinition">
            <summary>
            Represents a row definition.
            </summary>
            <remarks>
            The height of the row can be defined either in terms of fixed pixels units mode or auto adjust mode, by using <see cref="P:Syncfusion.UI.Xaml.Charts.ChartRowDefinition.Unit"/> property.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartRowDefinition.#ctor">
            <summary>
            Called when instance created for ChartRowdefinitions
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartRowDefinition.HeightProperty">
            <summary>
             Using a DependencyProperty as the backing store for Width.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartRowDefinition.UnitProperty">
            <summary>
            Using a DependencyProperty as the backing store for Unit.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartRowDefinition.BorderThicknessProperty">
            <summary>
            Using a DependencyProperty as the backing store for SplitterLineThickness.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartRowDefinition.BorderStrokeProperty">
            <summary>
            Using a DependencyProperty as the backing store for SplitterStroke.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartRowDefinition.RowTop">
            <summary>
            Get or Set RowTap property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartRowDefinition.Height">
            <summary>
            Gets or Sets height of this row.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartRowDefinition.Unit">
            <summary>
            Gets or Sets unit of the value specified in Height.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartRowDefinition.BorderThickness">
            <summary>
            Gets or Sets thickness of the border.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartRowDefinition.BorderStroke">
            <summary>
            Gets or Sets border stroke.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartStripLine">
            <summary>
            Chart enables the user to highlight a specific region of <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAxis"/> by adding strip lines to it.
            </summary>
            <remarks>
            The strip lines length and width can be customized,a text label can be specified and also the look and feel can be customized too.
            </remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartStripLine.BackgroundProperty">
            <summary>
            Using a DependencyProperty as the backing store for Background.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartStripLine.BorderBrushProperty">
            <summary>
            Using a DependencyProperty as the backing store for BorderBrush.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartStripLine.BorderThicknessProperty">
            <summary>
            Using a DependencyProperty as the backing store for BorderThickness.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartStripLine.StartProperty">
            <summary>
            Using a DependencyProperty as the backing store for StartX.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartStripLine.OnStartPropertChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when StartX property changes
            </summary>
            <param name="d"></param>
            <param name="e"></param>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartStripLine.SegmentStartValueProperty">
            <summary>
            Using a DependencyProperty as the backing store for StartY.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartStripLine.SegmentEndValueProperty">
            <summary>
             Using a DependencyProperty as the backing store for EndX.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartStripLine.SegmentAxisNameProperty">
            <summary>
            Using a DependencyProperty as the backing store for AxisName.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartStripLine.IsSegmentedProperty">
            <summary>
            Using a DependencyProperty as the backing store for IsSegmented.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartStripLine.RepeatEveryProperty">
            <summary>
            Using a DependencyProperty as the backing store for RepeatEvery.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartStripLine.RepeatUntilProperty">
            <summary>
            Using a DependencyProperty as the backing store for RepeatUntil.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartStripLine.LabelProperty">
            <summary>
            Using a DependencyProperty as the backing store for Label.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartStripLine.LabelTemplateProperty">
            <summary>
            Using a DependencyProperty as the backing store for LabelTemplate.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartStripLine.WidthProperty">
            <summary>
            Using a DependencyProperty as the backing store for Width.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartStripLine.LabelAngleProperty">
            <summary>
            Using a DependencyProperty as the backing store for LabelAngle.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartStripLine.IsPixelWidthProperty">
            <summary>
            Using a DependencyProperty as the backing store for IsPixelWidth.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartStripLine.LabelHorizontalAlignmentProperty">
            <summary>
            Using a DependencyProperty as the backing store for LabelHorizontalAlignment.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartStripLine.LabelVerticalAlignmentProperty">
            <summary>
            Using a DependencyProperty as the backing store for LabelVerticalAlignment.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartStripLine.Start">
            <summary>
            Gets or Sets start value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartStripLine.Background">
            <summary>
            Gets or Sets background of this strip line.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartStripLine.BorderBrush">
            <summary>
            Gets or Sets border brush.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartStripLine.BorderThickness">
            <summary>
            Gets or Sets border thickness.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartStripLine.SegmentStartValue">
            <summary>
            Gets or Sets SegmentStartValue.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartStripLine.SegmentEndValue">
            <summary>
            Gets or Sets SegmentEndValue
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartStripLine.SegmentAxisName">
            <summary>
             Gets or Sets SegmentAxisName
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartStripLine.IsSegmented">
            <summary>
             Gets or Sets IsSegmented
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartStripLine.RepeatEvery">
            <summary>
            Gets or Sets value of RepeatEvery
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartStripLine.RepeatUntil">
            <summary>
            Gets or Sets a value to RepeatUntil
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartStripLine.Label">
            <summary>
            Gets or Sets label.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartStripLine.LabelTemplate">
            <summary>
            Gets or Sets label DataTemplate.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartStripLine.Width">
            <summary>
            Gets or Sets width of the strip line.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartStripLine.LabelAngle">
            <summary>
            Gets or Sets label angle.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartStripLine.IsPixelWidth">
            <summary>
            Gets or Sets a value that indicates whether the value specified in Width property should be measured in pixels.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartStripLine.LabelHorizontalAlignment">
            <summary>
            Gets or Sets horizontal alignment of label
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartStripLine.LabelVerticalAlignment">
            <summary>
            Gets or Sets vertical alignment of label.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Charts.ChartStripLine.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.AreaSegment">
            <summary>
            Represents chart area segment.
            </summary>
            <remarks>Class instance is created automatically by WINRT Chart building system.</remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.AreaSeries"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AreaSegment.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AreaSegment.#ctor(System.Collections.Generic.List{System.Double},System.Collections.Generic.List{System.Double},Syncfusion.UI.Xaml.Charts.AdornmentSeries,System.Object)">
            <summary>
            Called when instance created for AreaSegments
            </summary>
            <param name="xValues"></param>
            <param name="yValues"></param>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AreaSegment.#ctor(System.Collections.Generic.List{System.Double},System.Collections.Generic.IList{System.Double})">
            <summary>
            Called when instance created for AreaSegments 
            </summary>
            <param name="xValues"></param>
            <param name="yValues"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AreaSegment.SetData(System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double})">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="XValues"></param>
            <param name="YValues"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AreaSegment.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>
            retuns UIElement
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AreaSegment.GetRenderedVisual">
            <summary>
            Gets the UIElement used for rendering this segment.
            </summary>
            <returns>reurns UIElement</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AreaSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="transformer">Reresents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AreaSegment.OnSizeChanged(System.Windows.Size)">
            <summary>
            Called whenever the segment's size changed. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AreaSegment.SetVisualBindings(System.Windows.Shapes.Shape)">
            <summary>
            Method Implementation for set  Binding to CgartSegments properties
            </summary>
            <param name="element"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.BubbleSegment">
            <summary>
            Represents chart bubble segment.
            </summary>
            <remarks>Class instance is created automatically by WINRT Chart building system.</remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.BubbleSeries"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BubbleSegment.#ctor(System.Double,System.Double,System.Double,Syncfusion.UI.Xaml.Charts.BubbleSeries)">
            <summary>
            
            </summary>
            <param name="xPos"></param>
            <param name="yPos"></param>
            <param name="size"></param>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BubbleSegment.SetData(System.Double[])">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="Values"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BubbleSegment.SetVisualBindings(System.Windows.Shapes.Shape)">
            <summary>
            Method implementation for Set Binding to visual elements 
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BubbleSegment.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>
            retuns UIElement
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BubbleSegment.GetRenderedVisual">
            <summary>
            Gets the UIElement used for rendering this segment.
            </summary>
            <returns>reurns UIElement</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BubbleSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="transformer">Reresents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BubbleSegment.OnSizeChanged(System.Windows.Size)">
            <summary>
            Called whenever the segment's size changed. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BubbleSegment.XData">
            <summary>
            Gets the x data of this segment
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BubbleSegment.YData">
            <summary>
            Gets the y data of this segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BubbleSegment.Size">
            <summary>
            Gets the size of this segment in terms of chart data.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BubbleSegment.SegmentRadius">
            <summary>
            Gets or sets the segment radius in units of pixels.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BubbleSegment.RectX">
            <summary>
            Gets or sets the PositionX property of this segment
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BubbleSegment.RectY">
            <summary>
            Gets or sets the PositionY property of this segment
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.CandleSegment">
            <summary>
            Represents chart candle segment.
            </summary>
            <remarks>Class instance is created automatically by WINRT Chart building system.</remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.CandleSeries"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CandleSegment.#ctor(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean,Syncfusion.UI.Xaml.Charts.CandleSeries,System.Object)">
            <summary>
            Called when Instance created for CandleSegment
            </summary>
            <param name="cdpBottomLeft"></param>
            <param name="cdpRightTop"></param>
            <param name="hipoint"></param>
            <param name="lopoint"></param>
            <param name="isbull"></param>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CandleSegment.SetData(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean)">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="BottomLeft"></param>
            <param name="RightTop"></param>
            <param name="hipoint"></param>
            <param name="loPoint"></param>
            <param name="isBull"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CandleSegment.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>
            retuns UIElement
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CandleSegment.SetVisualBindings(System.Windows.Shapes.Shape)">
            <summary>
            Method Implementation for set  Binding to CandleSegment properties
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CandleSegment.GetRenderedVisual">
            <summary>
            Gets the UIElement used for rendering this segment.
            </summary>
            <returns>reurns UIElement</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CandleSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="transformer">Reresents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CandleSegment.OnSizeChanged(System.Windows.Size)">
            <summary>
            Called whenever the segment's size changed. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.CandleSegment.OnPropertyChanged(System.String)">
            <summary>
            Called when Property changed
            </summary>
            <param name="name"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CandleSegment.ActualInterior">
            <summary>
            Gets the actual color used to paint the interior of the segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CandleSegment.BearFillColor">
            <summary>
            Gets the high value interior
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.CandleSegment.BullFillColor">
            <summary>
            Gets the low value interior
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartAdornment">
            <summary>
            Represents chart adornment.
            </summary>
            <remarks>Class instance is created automatically by WINRT Chart building system.</remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ChartAdornmentInfo"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornment.FontFamilyProperty">
            <summary>
            Identifies the SegmentLabelFontFamily dependency property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornment.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornment.#ctor(System.Double,System.Double,System.Double,System.Double,Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Called when instance created for ChartAdornment
            </summary>
            <param name="xVal"></param>
            <param name="yVal"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornment.SetData(System.Double[])">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="Values"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornment.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>
            retuns UIElement
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornment.GetRenderedVisual">
            <summary>
            Gets the UIElement used for rendering this segment.
            </summary>
            <returns>reurns UIElement</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="transformer">Reresents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornment.OnSizeChanged(System.Windows.Size)">
            <summary>
            Called whenever the segment's size changed. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornment.Series">
            <summary>
            Get or Set series property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornment.Background">
            <summary>
            Gets or sets the background brush to apply to the label content.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornment.BorderThickness">
            <summary>
            Gets or sets the outer border thickkness of the label.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornment.BorderBrush">
            <summary>
            Gets or sets the brush that draws the outer border color. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornment.Margin">
            <summary>
            Gets or sets the outer margin of a label.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornment.FontFamily">
            <summary>
            Gets or sets the segment label font family.
            </summary>
            <remarks>
            Identifies font family that should be used to display adornment's text.
            </remarks>
            <value>
            The segment label font family.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornment.FontStyle">
            <summary>
            Gets or sets the top-level font style for the
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornment.FontSize">
            <summary>
            Gets or sets the font size for the label.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornment.Foreground">
            <summary>
            Gets or set foreground brush to apply to the label content.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornment.ConnectorRotationAngle">
            <summary>
            Gets or sets the connector rotation angle.
            </summary>
            <value>
            The connector rotation angle.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornment.ActualContent">
            <summary>
            Gets the actual content displayed visually. Actual content is resolved based on
            <see cref="!:ChartAdornmentInfo.SegmentLabelContent"/>
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornment.XData">
            <summary>
            Gets or sets the x-value to be displayed in ChartAdornment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornment.YData">
            <summary>
            Gets or sets the Y-value to be displayed in ChartAdornment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornment.X">
            <summary>
            Gets or sets the x screen coordinate relative to series
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornment.Y">
            <summary>
            Gets or sets the y screen coordinate relative to series
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornment3D.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Called when instance created for ChartAdornment
            </summary>
            <param name="xVal"></param>
            <param name="yVal"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="startDepth"></param>
            <param name="series"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartPieAdornment">
            <summary>
            Represents chart adornment.
            </summary>
            <remarks>Class instance is created automatically by WINRT Chart building system.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPieAdornment.#ctor(System.Double,System.Double,System.Double,System.Double,Syncfusion.UI.Xaml.Charts.AdornmentSeries)">
            <summary>
            Called when instance created for ChartPieAdornment
            </summary>
            <param name="xVal"></param>
            <param name="yVal"></param>
            <param name="angle"></param>
            <param name="radius"></param>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPieAdornment.SetData(System.Double[])">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="Values"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPieAdornment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="transformer">Reresents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPieAdornment.Angle">
            <summary>
            Get or Set Angle property 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPieAdornment.Radius">
            <summary>
            Get or Set Radius property
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.TriangularAdornment">
            <summary>
            Class implementation for triangularAdornments
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TriangularAdornment.#ctor(System.Double,System.Double,System.Double,System.Double,Syncfusion.UI.Xaml.Charts.AdornmentSeries)">
            <summary>
            Called when instance created for TriangularAdornment
            </summary>
            <param name="xVal"></param>
            <param name="yVal"></param>
            <param name="currY"></param>
            <param name="height"></param>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TriangularAdornment.SetData(System.Double[])">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="Values"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TriangularAdornment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="transformer">Reresents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPieAdornment3D.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,Syncfusion.UI.Xaml.Charts.ChartSeries3D)">
            <summary>
            Called when instance created for ChartPieAdornment
            </summary>
            <param name="xVal"></param>
            <param name="yVal"></param>
            <param name="angle"></param>
            <param name="radius"></param>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPieAdornment3D.SetData(System.Double[])">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="values"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPieAdornment3D.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="transformer">Represents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPieAdornment3D.Angle">
            <summary>
            Get or Set Angle property 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPieAdornment3D.Radius">
            <summary>
            Get or Set Radius property
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.EmptyPointSegment">
            <summary>
            Represents chart empty point segment.
            </summary>
            <remarks>Class instance is created automatically by WINRT Chart building system.</remarks>
            <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.ShowEmptyPoints"/>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ScatterSegment">
            <summary>
            Represents chart scatter segment.
            </summary>
            <remarks>Class instance is created automatically by WINRT Chart building system.</remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ScatterSeries"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ScatterSegment.EllipseSegment">
            <summary>
            EllipseSegment property declarations
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ScatterSegment.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ScatterSegment.#ctor(System.Double,System.Double,Syncfusion.UI.Xaml.Charts.ScatterSeries)">
            <summary>
            Called when instance created for Scattersegment
            </summary>
            <param name="xpos"></param>
            <param name="ypos"></param>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ScatterSegment.SetData(System.Double[])">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="Values"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ScatterSegment.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>
            retuns UIElement
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ScatterSegment.GetRenderedVisual">
            <summary>
            Gets the UIElement used for rendering this segment.
            </summary>
            <returns>reurns UIElement</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ScatterSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="transformer">Reresents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ScatterSegment.SetVisualBindings(System.Windows.Shapes.Shape)">
            <summary>
            Method Implementation for set  Binding to CgartSegments properties
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ScatterSegment.OnSizeChanged(System.Windows.Size)">
            <summary>
            Called whenever the segment's size changed. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ScatterSegment.XData">
            <summary>
            Gets the x data of this segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ScatterSegment.YData">
            <summary>
            Gets the y data of this segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ScatterSegment.ScatterWidth">
            <summary>
            Gets or sets the scatter width of this segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ScatterSegment.ScatterHeight">
            <summary>
            Gets or sets the scatter height of this segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ScatterSegment.RectX">
            <summary>
            Gets or sets the PositionX property of this segment
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ScatterSegment.RectY">
            <summary>
            Gets or sets the PositionY property of this segment
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.EmptyPointSegment.#ctor(System.Double,System.Double,Syncfusion.UI.Xaml.Charts.ChartSeriesBase,System.Boolean)">
            <summary>
            Called when instance created for EmptyPointSegment with following arguments
            </summary>
            <param name="xData"></param>
            <param name="yData"></param>
            <param name="series"></param>
            <param name="isEmptyPointInterior"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.EmptyPointSegment.SetData(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean)">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="BottomLeft"></param>
            <param name="RightTop"></param>
            <param name="hipoint"></param>
            <param name="loPoint"></param>
            <param name="isBull"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.EmptyPointSegment.SetData(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean)">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="hipoint"></param>
            <param name="lopoint"></param>
            <param name="sopoint"></param>
            <param name="eopoint"></param>
            <param name="scpoint"></param>
            <param name="ecpoint"></param>
            <param name="isBull"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.EmptyPointSegment.SetData(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point)">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="point1"></param>
            <param name="point2"></param>
            <param name="point3"></param>
            <param name="point4"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.EmptyPointSegment.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>
            retuns UIElement
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.EmptyPointSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="transformer">Reresents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.EmptyPointSegment.EmptyPointSymbolHeight">
            <summary>
            Gets or sets empty point symbol height.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.EmptyPointSegment.EmptyPointSymbolWidth">
            <summary>
            Gets or sets empty point symbol width.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.EmptyPointSegment.X">
            <summary>
            Gets or Sets the x coordinate of this segment
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.EmptyPointSegment.Y">
            <summary>
            Gets or Sets the y coordinate of this segment
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.FastLineBitmapSegment">
            <summary>
            Represents chart fast line bitmap segment.
            </summary>
            <remarks>Class instance is created automatically by WINRT Chart building system.</remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FastLineBitmapSeries"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineBitmapSegment.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineBitmapSegment.#ctor(Syncfusion.UI.Xaml.Charts.ChartSeries)">
            <summary>
            Called when instance created for FastLineBitmapsegment
            </summary>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineBitmapSegment.#ctor(System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},Syncfusion.UI.Xaml.Charts.AdornmentSeries)">
            <summary>
            Called when instance created for FastLineBitmapSegment with following arguments
            </summary>
            <param name="xVals"></param>
            <param name="yVals"></param>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineBitmapSegment.SetData(System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double})">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="xVals"></param>
            <param name="yVals"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineBitmapSegment.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>
            retuns UIElement
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineBitmapSegment.SetVisualBindings(System.Windows.Shapes.Shape)">
            <summary>
            Method Implementation for set  Binding to CgartSegments properties
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineBitmapSegment.OnSizeChanged(System.Windows.Size)">
            <summary>
            Called whenever the segment's size changed. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineBitmapSegment.GetRenderedVisual">
            <summary>
            Gets the UIElement used for rendering this segment.
            </summary>
            <returns>reurns UIElement</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineBitmapSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="transformer">Represents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineBitmapSegment.TransformToScreenCo(Syncfusion.UI.Xaml.Charts.ChartTransform.ChartCartesianTransformer)">
            <summary>
            Transforms for non logarithmic axis
            </summary>
            <param name="cartesianTransformer"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineBitmapSegment.TransformToScreenCoInLog(Syncfusion.UI.Xaml.Charts.ChartTransform.ChartCartesianTransformer)">
            <summary>
            Transforms for non logarithmic axis
            </summary>
            <param name="cartesianTransformer"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.FastLineSegment">
            <summary>
            Represents chart fast line segment.
            </summary>
            <remarks>Class instance is created automatically by WINRT Chart building system.</remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FastLineSeries"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineSegment.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineSegment.#ctor(Syncfusion.UI.Xaml.Charts.ChartSeries)">
            <summary>
            Called when instance created for FastLineSegment
            </summary>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineSegment.#ctor(System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},Syncfusion.UI.Xaml.Charts.AdornmentSeries)">
            <summary>
            Called when instance created for FastLineSegment
            </summary>
            <param name="xVals"></param>
            <param name="yVals"></param>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineSegment.SetData(System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double})">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="xVals"></param>
            <param name="yVals"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineSegment.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>
            retuns UIElement
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineSegment.SetVisualBindings(System.Windows.Shapes.Shape)">
            <summary>
            Method Implementation for set  Binding to CgartSegments properties
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineSegment.OnSizeChanged(System.Windows.Size)">
            <summary>
            Called whenever the segment's size changed. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineSegment.GetRenderedVisual">
            <summary>
            Gets the UIElement used for rendering this segment.
            </summary>
            <returns>reurns UIElement</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="transformer">Reresents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineSegment.TransformToScreenCo(Syncfusion.UI.Xaml.Charts.ChartTransform.ChartCartesianTransformer)">
            <summary>
            Transforms for non logarithmic axis
            </summary>
            <param name="cartesianTransformer"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FastLineSegment.TransformToScreenCoInLog(Syncfusion.UI.Xaml.Charts.ChartTransform.ChartCartesianTransformer)">
            <summary>
            Transforms for non logarithmic axis
            </summary>
            <param name="cartesianTransformer"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastLineSegment.xChartVals">
            <summary>
            Get or Set xChartVals property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastLineSegment.yChartVals">
            <summary>
            Get or Set yChartVals property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastLineSegment.RenderingMode">
            <summary>
            get or Set renderingMode
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FastLineSegment.Points">
            <summary>
            Get or Set Points property
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSegment">
            <summary>
            Represents chart HiLoOpenClose segment.
            </summary>
            <remarks>Class instance is created automatically by WINRT Chart building system.</remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSeries"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSegment.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSegment.#ctor(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean,Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSeries,System.Object)">
            <summary>
            Called when instance created for HiLoOpenCloseSegment
            </summary>
            <param name="hghpoint"></param>
            <param name="lowpoint"></param>
            <param name="sopoint"></param>
            <param name="eopoint"></param>
            <param name="scpoint"></param>
            <param name="ecpoint"></param>
            <param name="isbull"></param>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSegment.SetData(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean)">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="hipoint"></param>
            <param name="lopoint"></param>
            <param name="sopoint"></param>
            <param name="eopoint"></param>
            <param name="scpoint"></param>
            <param name="ecpoint"></param>
            <param name="isbull"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSegment.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>
            retuns UIElement
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSegment.SetVisualBindings(System.Windows.Shapes.Shape)">
            <summary>
            Method Implementation for set  Binding to CgartSegments properties
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSegment.GetRenderedVisual">
            <summary>
            Gets the UIElement used for rendering this segment.
            </summary>
            <returns>reurns UIElement</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="transformer">Reresents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSegment.OnSizeChanged(System.Windows.Size)">
            <summary>
            Called whenever the segment's size changed. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSegment.OnPropertyChanged(System.String)">
            <summary>
            Called when Property changed 
            </summary>
            <param name="name"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSegment.ActualInterior">
            <summary>
            Gets the actual color used to paint the interior of the segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSegment.BearFillColor">
            <summary>
            Gets the high value interior
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.HiLoOpenCloseSegment.BullFillColor">
            <summary>
            Gets the low value interior
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.HiLoSegment">
            <summary>
            Represents chart HiLo segment.
            </summary>
            <remarks>Class instance is created automatically by WINRT Chart building system.</remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.HiLoSeries"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HiLoSegment.#ctor(System.Double,System.Double,System.Double,Syncfusion.UI.Xaml.Charts.HiLoSeries,System.Object)">
            <summary>
            Called when instance created for HiLoSegment
            </summary>
            <param name="xVal"></param>
            <param name="hghValue"></param>
            <param name="lwValue"></param>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HiLoSegment.SetData(System.Double[])">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="Values"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HiLoSegment.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>
            retuns UIElement
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HiLoSegment.GetRenderedVisual">
            <summary>
            Gets the UIElement used for rendering this segment.
            </summary>
            <returns>reurns UIElement</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HiLoSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="transformer">Reresents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HiLoSegment.OnSizeChanged(System.Windows.Size)">
            <summary>
            Called whenever the segment's size changed. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.HistogramSegment">
            <summary>
            Represents chart Histogram segment.
            </summary>
            <remarks>Class instance is created automatically by WINRT Chart building system.</remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.HistogramSeries"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HistogramSegment.#ctor(System.Double,System.Double,System.Double,System.Double,Syncfusion.UI.Xaml.Charts.HistogramSeries)">
            <summary>
            
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="series"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.HistogramDistributionSegment">
            <summary>
            Class implementation for HistogramDistributionSegment
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HistogramDistributionSegment.#ctor(System.Windows.Media.PointCollection,Syncfusion.UI.Xaml.Charts.HistogramSeries)">
            <summary>
            Called when instance created for HistogramDistributionSegment
            </summary>
            <param name="distributionPoints"></param>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HistogramDistributionSegment.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>
            retuns UIElement
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HistogramDistributionSegment.SetVisualBindings(System.Windows.Shapes.Shape)">
            <summary>
            Method Implementation for set  Binding to CgartSegments properties
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HistogramDistributionSegment.GetRenderedVisual">
            <summary>
            Gets the UIElement used for rendering this segment.
            </summary>
            <returns>reurns UIElement</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HistogramDistributionSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="transformer">Reresents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HistogramDistributionSegment.OnSizeChanged(System.Windows.Size)">
            <summary>
            Called whenever the segment's size changed. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.LineSegment">
            <summary>
            Represents chart line segment.
            </summary>
            <remarks>Class instance is created automatically by WINRT Chart building system.</remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.LineSeries"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSegment.#ctor(System.Double,System.Double,System.Double,System.Double,Syncfusion.UI.Xaml.Charts.AdornmentSeries,System.Object)">
            <summary>
            Called when instance created for LineSegment with following arguments
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="lineSeries"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSegment.#ctor(System.Double,System.Double,System.Double,System.Double,System.Object)">
            <summary>
            Called when instance created for LineSegment 
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="X2"></param>
            <param name="Y2"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSegment.SetData(System.Double[])">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="Values"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSegment.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>
            retuns UIElement
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSegment.GetRenderedVisual">
            <summary>
            Gets the UIElement used for rendering this segment.
            </summary>
            <returns>reurns UIElement</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="transformer">Reresents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.LineSegment.OnSizeChanged(System.Windows.Size)">
            <summary>
            Called whenever the segment's size changed. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LineSegment.X1">
            <summary>
            Gets or Sets the x start point of the line
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LineSegment.X2">
            <summary>
            Gets or Sets the x end point of the line
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LineSegment.Y1">
            <summary>
            Gets or Sets the y start point of the line
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LineSegment.Y2">
            <summary>
            Gets or Sets the y end point of the line
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LineSegment.X1Data">
            <summary>
            Gets or sets x1 values of this segment
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LineSegment.XData">
            <summary>
            Gets or sets x values of this segment
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LineSegment.YData">
            <summary>
            Gets or sets the y value of this segment
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.LineSegment.Y1Data">
            <summary>
            Gets or sets the y1 value of this segment
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.PieSegment">
            <summary>
            Represents chart pie segment.
            </summary>
            <remarks>Class instance is created automatically by WINRT Chart building system.</remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.PieSeries"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.PieSegment.IsExplodedProperty">
            <summary>
            Using a DependencyProperty as the backing store for IsExploded.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSegment.#ctor(System.Double,System.Double,Syncfusion.UI.Xaml.Charts.PieSeries,System.Object)">
            <summary>
            Called when instance created for PieSegment
            </summary>
            <param name="arcStartAngle"></param>
            <param name="arcEndAngle"></param>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSegment.#ctor(System.Double,System.Double,System.Boolean,Syncfusion.UI.Xaml.Charts.PieSeries,System.Object)">
            <summary>
            Called when instance created for PieSegment with four arguments
            </summary>
            <param name="arcStartAngle"></param>
            <param name="arcEndAngle"></param>
            <param name="isEmptyInterior"></param>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSegment.IsPointInPieSegment(System.Double,System.Double)">
            <summary>
            Method used to check the given co-ordinates lies in pie segment or not
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSegment.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>
            returns UIElement
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSegment.SetVisualBindings(System.Windows.Shapes.Shape)">
            <summary>
            Method Implementation for set  Binding to CgartSegments properties
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSegment.GetRenderedVisual">
            <summary>
            Gets the UIElement used for rendering this segment.
            </summary>
            <returns>reurns UIElement</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="transformer">Represents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PieSegment.OnSizeChanged(System.Windows.Size)">
            <summary>
            Called whenever the segment's size changed. This method is not
            intended to be called explicitly outside the Chart but it can be overridden by
            any derived class.
            </summary>
            <param name="size"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PieSegment.IsExploded">
            <summary>
            Gets or Sets a value that indicates whether this segment is exploded.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PieSegment.StartAngle">
            <summary>
            Gets the start angle of the <see cref="T:Syncfusion.UI.Xaml.Charts.PieSegment"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PieSegment.EndAngle">
            <summary>
            Gets the end angle of the <see cref="T:Syncfusion.UI.Xaml.Charts.PieSegment"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PieSegment.AngleOfSlice">
            <summary>
            Gets the actual angle the <see cref="T:Syncfusion.UI.Xaml.Charts.PieSegment"/> 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PieSegment.XData">
            <summary>
            Gets the X-Value of the <see cref="T:Syncfusion.UI.Xaml.Charts.PieSegment"/>
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.PieSegment.YData">
            <summary>
            Gets the Y-Value of the <see cref="T:Syncfusion.UI.Xaml.Charts.PieSegment"/>
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.RangeAreaSegment">
            <summary>
            Represents chart range area segment.
            </summary>
            <remarks>Class instance is created automatically by WINRT Chart building system.</remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.RangeAreaSeries"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeAreaSegment.#ctor(System.Collections.Generic.List{System.Windows.Point},System.Boolean,Syncfusion.UI.Xaml.Charts.RangeAreaSeries)">
            <summary>
            Called when instance created for rangeAreaSegments
            </summary>
            <param name="AreaPoints"></param>
            <param name="isHighLow"></param>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeAreaSegment.SetData(System.Collections.Generic.List{System.Windows.Point})">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="AreaPoints"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeAreaSegment.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>
            retuns UIElement
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeAreaSegment.SetVisualBindings(System.Windows.Shapes.Shape)">
            <summary>
            Method Implementation for set  Binding to CgartSegments properties
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeAreaSegment.GetRenderedVisual">
            <summary>
            Gets the UIElement used for rendering this segment.
            </summary>
            <returns>reurns UIElement</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeAreaSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="transformer">Reresents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeAreaSegment.OnSizeChanged(System.Windows.Size)">
            <summary>
            Called whenever the segment's size changed. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RangeAreaSegment.OnPropertyChanged(System.String)">
            <summary>
            Called when Property changed 
            </summary>
            <param name="name"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeAreaSegment.ActualInterior">
            <summary>
            Gets the actual color used to paint the interior of the segment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeAreaSegment.HighValueInterior">
            <summary>
            Gets the high value interior
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RangeAreaSegment.LowValueInterior">
            <summary>
            Gets the low value interior
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.SplineAreaSegment">
            <summary>
            Represents chart SplineArea segment.
            </summary>
            <remarks>Class instance is created automatically by WINRT Chart building system.</remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.SplineAreaSeries"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineAreaSegment.#ctor(System.Collections.Generic.List{System.Windows.Point},System.Collections.Generic.List{System.Double},System.Collections.Generic.IList{System.Double},Syncfusion.UI.Xaml.Charts.SplineAreaSeries)">
            <summary>
            
            </summary>
            <param name="Points"></param>
            <param name="xValues"></param>
            <param name="yValues"></param>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineAreaSegment.SetData(System.Collections.Generic.List{System.Windows.Point},System.Collections.Generic.List{System.Double},System.Collections.Generic.IList{System.Double})">
            <summary>
            Method implementation for SetData
            </summary>
            <param name="Points"></param>
            <param name="xValues"></param>
            <param name="yValues"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineAreaSegment.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>
            retuns UIElement
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineAreaSegment.GetRenderedVisual">
            <summary>
            Gets the UIElement used for rendering this segment.
            </summary>
            <returns>reurns UIElement</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineAreaSegment.SetVisualBindings(System.Windows.Shapes.Shape)">
            <summary>
            Method Implementation for set  Binding to CgartSegments properties
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineAreaSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="transformer">Reresents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SplineAreaSegment.OnSizeChanged(System.Windows.Size)">
            <summary>
            Called whenever the segment's size changed. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.StackingAreaSegment">
            <summary>
            Represents chart stacking area segment.
            </summary>
            <remarks>Class instance is created automatically by WINRT Chart building system.</remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.StackingAreaSeries"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingAreaSegment.#ctor(System.Collections.Generic.List{System.Double},System.Collections.Generic.List{System.Double},Syncfusion.UI.Xaml.Charts.StackingAreaSeries)">
            <summary>
            Called when instance created for StackingAreaSegment
            </summary>
            <param name="xValues"></param>
            <param name="yValues"></param>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingAreaSegment.#ctor(System.Collections.Generic.List{System.Double},System.Collections.Generic.List{System.Double})">
            <summary>
            Called when instance created for StackingAreaSegment
            </summary>
            <param name="xValues"></param>
            <param name="yValues"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingAreaSegment.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>
            retuns UIElement
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingAreaSegment.GetRenderedVisual">
            <summary>
            Gets the UIElement used for rendering this segment.
            </summary>
            <returns>reurns UIElement</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingAreaSegment.SetVisualBindings(System.Windows.Shapes.Shape)">
            <summary>
            Method Implementation for set  Binding to CgartSegments properties
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingAreaSegment.SetData(System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double})">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="xValues"></param>
            <param name="yValues"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingAreaSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="transformer">Reresents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingAreaSegment.OnSizeChanged(System.Windows.Size)">
            <summary>
            Called whenever the segment's size changed. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.StackingColumnSegment">
            <summary>
            Represents chart stacking column segment.
            </summary>
            <remarks>Class instance is created automatically by WINRT Chart building system.</remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.StackingColumnSeries"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingColumnSegment.#ctor(System.Double,System.Double,System.Double,System.Double,Syncfusion.UI.Xaml.Charts.StackingColumnSeries)">
            <summary>
            Called when instance created for StackingColumnSegment
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StackingColumnSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="transformer">Reresents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartAdornmentContainer">
            <summary>
            Represents the panel which contains all the ChartAdornment elements.
            </summary>
            <remarks>
            The elements inside the panel comprises of adornment labels, marker symbols and connector lines to connect the labels.
            </remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentContainer.m_symbolPresenter">
            <summary>
            Initializes m_symbolPresenter.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentContainer.m_connectorPresenter">
            <summary>
            Initializes m_connectorPresenter.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentContainer.m_predefinedSymbol">
            <summary>
            Initializes m_predefinedSymbol.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentContainer.LabelVerticalAlignmentProperty">
            <summary>
            Using a DependencyProperty as the backing store for LabelVerticalAlignment.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentContainer.LabelHorizontalAlignmentProperty">
            <summary>
            Using a DependencyProperty as the backing store for LabelHorizontalAlignment.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentContainer.SymbolProperty">
            <summary>
            Using a DependencyProperty as the backing store for Symbol.  This enables animation, styling, binding, etc... 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentContainer.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentContainer.#ctor(Syncfusion.UI.Xaml.Charts.ChartAdornment)">
            <summary>
            Called when instance created for ChartAdornmentContainer
            </summary>
            <param name="adornment"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentContainer.ArrangeOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the Arrange pass of Silverlight layout. Classes can override this method to define their own Arrange pass behavior.
            </summary>
            <returns>
            The actual size that is used after the element is arranged in layout.
            </returns>
            <param name="finalSize">The final area within the parent that this object should use to arrange itself and its children.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentContainer.MeasureOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the Measure pass of Silverlight layout. Classes can override this method to define their own Measure pass behavior.
            </summary>
            <returns>
            The size that this object determines it needs during layout, based on its calculations of the allocated sizes for child objects; or based on other considerations, such as a fixed container size.
            </returns>
            <param name="availableSize"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentContainer.LabelVerticalAlignment">
            <summary>
            Gets or sets the label vertical alignment.
            </summary>
            <value>The label vertical alignment.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentContainer.LabelHorizontalAlignment">
            <summary>
            Gets or sets the label horizontal alignment.
            </summary>
            <value>The label horizontal alignment.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentContainer.Symbol">
            <summary>
            Gets or Sets the chart symbol
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentContainer.SymbolOffset">
            <summary>
            Gets the symbol offset.
            </summary>
            <value>The symbol offset.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.SymbolControl">
            <summary>
            A control that represents symbol in chart adornments
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SymbolControl.StrokeProperty">
            <summary>
            Using a DependencyProperty as the backing store for SymbolStroke.  This enables animation, styling, binding, etc... 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SymbolControl.Stroke">
            <summary>
            Gets or Sets the stroke
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartAdornmentPresenter">
            <summary>
            Represents ChartAdornmentPresenter
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentPresenter.VisibleSeriesProperty">
            <summary>
             Identifies the VisibleSeries dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAdornmentPresenter.SeriesProperty">
            <summary>
            Using a DependencyProperty as the backing store for Series.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentPresenter.UpdateAdornmentSelection(System.Collections.Generic.List{System.Int32},System.Boolean)">
            <summary>
            Method is used to highlight the adornment
            </summary>
            <param name="adornmentSelectedIndex"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAdornmentPresenter.ResetAdornmentSelection(System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Method is used to reset the adornment
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentPresenter.VisibleSeries">
            <summary>
            Gets or sets the VisibleSeries. This is a dependency property.
            </summary>
            <value>The VisibleSeries.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAdornmentPresenter.Series">
            <summary>
            Gets or Sets the Series collection in Chart.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartAxisLayoutPanel">
            <summary>
            Represents ChartAxisLayoutPanel 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxisLayoutPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the Measure pass of Silverlight layout. Classes can override this method to define their own Measure pass behavior.
            </summary>
            <returns>
            The size that this object determines it needs during layout, based on its calculations of the allocated sizes for child objects; or based on other considerations, such as a fixed container size.
            </returns>
            <param name="availableSize"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartAxisLayoutPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the Arrange pass of Silverlight layout. Classes can override this method to define their own Arrange pass behavior.
            </summary>
            <returns>
            The actual size that is used after the element is arranged in layout.
            </returns>
            <param name="finalSize">The final area within the parent that this object should use to arrange itself and its children.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartAxisLayoutPanel.AxisLayout">
            <summary>
            Get or Set AxisLayout property
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisElementsPanel">
            <summary>
            Represents ChartCartesianAxisElementsPanel.
            </summary>
            <remarks>
            The elements inside the panel comprises of <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAxis"/> axis line,major ticklines and minor ticklines.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisElementsPanel.#ctor(System.Windows.Controls.Panel)">
            <summary>
            Called when instance created for ChartCartesianAxisElementsPanel
            </summary>
            <param name="panel"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisElementsPanel.Measure(System.Windows.Size)">
            <summary>
            Method declaration for Measure
            </summary>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisElementsPanel.Arrange(System.Windows.Size)">
            <summary>
            Method declaration for Arrange
            </summary>
            <param name="finalSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisElementsPanel.UpdateElements">
            <summary>
            Method declaration for UpdateElements
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisElementsPanel.DesiredSize">
            <summary>
            Gets the desired size of the panel.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisElementsPanel.Children">
            <summary>
            Gets the Children count in the panel.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisLabelsPanel">
            <summary>
            Represents layout panel for chart axis labels.
            </summary>
            <remarks>
            The elements inside the panel comprises of <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAxis"/> labels.You can customize the label elements appearance using  
            <see cref="P:Syncfusion.UI.Xaml.Charts.ChartAxis.LabelTemplate"/> property.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisLabelsPanel.#ctor(System.Windows.Controls.Panel)">
            <summary>
            Called when instance created for ChartCartessianAxisLabelsPanel
            </summary>
            <param name="panel"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisLabelsPanel.Measure(System.Windows.Size)">
            <summary>
            Method declaration for Measure
            </summary>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisLabelsPanel.Arrange(System.Windows.Size)">
            <summary>
            Method declaration for Arrange
            </summary>
            <param name="finalSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisLabelsPanel.UpdateElements">
            <summary>
            Method declaration for UpdateElements
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisLabelsPanel.DesiredSize">
            <summary>
            Gets the desired size of the panel.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisLabelsPanel.Axis">
            <summary>
            Gets or Sets the chart axis of the panel./>
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisLabelsPanel.Children">
            <summary>
            Gets the children count in the panel.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AxisLabelLayout.DoLinesIntersect(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point)">
            <summary>
            Checks whether two line segments are intersecting
            </summary>
            <param name="point11"></param>
            <param name="point12"></param>
            <param name="point21"></param>
            <param name="point22"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AxisLabelLayout.GetRotatedPoints(System.Windows.Rect,System.Int32)">
            <summary>
            Returns the points after rotating a rectangle.
            </summary>
            <param name="rect"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AxisLabelLayout.GetRotatedPoints(System.Double,System.Windows.Rect,System.Double,System.Double)">
            <summary>
            Returns the points after translating the rect about (0,0) and then translating it by some x and y.
            </summary>
            <param name="angle">Angle to rotate</param>
            <param name="rect">Rect</param>
            <param name="translateX">Offset x to be translated after rotating</param>
            <param name="translateY">Offset y to be translated after rotating</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AxisLabelLayout.IntersectsWith(System.Collections.Generic.List{System.Windows.Point},System.Collections.Generic.List{System.Windows.Point})">
            <summary>
            Checks whether two polygons intersects.
            </summary>
            <param name="shape1Points">Polygon</param>
            <param name="shape2Points">Polygon</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AxisLabelLayout.LayoutElements">
            <summary>
            Returns desired height
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AxisLabelLayout.ComputedSizes">
            <summary>
            Holds the width and height of the element after rotating.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AxisLabelLayout.DesiredSizes">
            <summary>
            Holds the width and height of the element without rotating.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.HorizontalLabelLayout.LayoutElements">
            <summary>
            Returns desired height
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.VerticalLabelLayout.LayoutElements">
            <summary>
            Returns desired width
            </summary>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisLayoutPanel">
            <summary>
            Represents ChartCartesianAxisLayoutPanel
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisLayoutPanel.#ctor(System.Windows.Controls.Panel)">
            <summary>
            Called when instance created for ChartCartesianAxisLayoutPanel
            </summary>
            <param name="panel"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisLayoutPanel.Measure(System.Windows.Size)">
            <summary>
            Measures the elements in the panel.
            </summary>
            <param name="availableSize">available size of the panel.</param>
            <returns>returns DesiredSize</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisLayoutPanel.Arrange(System.Windows.Size)">
            <summary>
            Arranges the elements in the panel.
            </summary>
            <param name="finalSize">final size of the panel.</param>
            <returns>returns Size</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisLayoutPanel.UpdateElements">
            <summary>
            Adds the elements inside the panel.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisLayoutPanel.Area">
            <summary>
            Gets or Sets the chart area where the panel is bounded.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisLayoutPanel.DesiredSize">
            <summary>
            Gets the desired size of the panel.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisLayoutPanel.Children">
            <summary>
            Gets the children count in the panel.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisPanel">
            <summary>
            Represents ChartCartesianAxisPanel.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisPanel.#ctor">
            <summary>
            called when instance created for ChartCarttesianAxisPanel
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisPanel3D">
            <summary>
            Represents ChartCartesianAxisPanel3D.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianAxisPanel3D.#ctor">
            <summary>
            called when instance created for ChartCartesianAxisPanel3D
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartCartesianGridLinesPanel">
            <summary>
            Represents ChartCartesianGridLinesPanel.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianGridLinesPanel.#ctor(System.Windows.Controls.Panel)">
            <summary>
            Called when instance created for ChartCartesianGridLinesPanel
            </summary>
            <param name="panel"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianGridLinesPanel.Measure(System.Windows.Size)">
            <summary>
            Measures the elements in the panel.
            </summary>
            <param name="availableSize">available size of the panel.</param>
            <returns>returns Size</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianGridLinesPanel.Arrange(System.Windows.Size)">
            <summary>
            Arrranges the elements inside a panel.
            </summary>
            <param name="finalSize">final size of the panel.</param>
            <returns>returns Size</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianGridLinesPanel.Arrange3D(System.Windows.Size)">
            <summary>
            Arrranges the elements inside a panel.
            </summary>
            <param name="finalSize">final size of the panel.</param>
            <returns>returns Size</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianGridLinesPanel.UpdateElements">
            <summary>
            Adds the elements in the panel.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianGridLinesPanel.UpdateGridLines(Syncfusion.UI.Xaml.Charts.ChartAxis)">
            <summary>
            Adds the Gridlines for the axis.
            </summary>
            <param name="axis"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianGridLinesPanel.DrawGridLines(Syncfusion.UI.Xaml.Charts.ChartAxis)">
            <summary>
            Draws the Gridlines at definite intervals in <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAxis"/>
            </summary>
            <param name="axis">Relevant ChartAxis</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCartesianGridLinesPanel.DrawGridLines3D(Syncfusion.UI.Xaml.Charts.ChartAxis)">
            <summary>
            Draws the Gridlines at definite intervals in <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAxis"/>
            </summary>
            <param name="axis">Relevant ChartAxis</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCartesianGridLinesPanel.DesiredSize">
            <summary>
            Gets the desired size of the panel.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCartesianGridLinesPanel.Children">
            <summary>
            Gets the children count in the panel.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCartesianGridLinesPanel.Left">
            <summary>
            Gets or sets the left.
            </summary>
            <value>
            The left.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCartesianGridLinesPanel.Top">
            <summary>
            Gets or sets the top.
            </summary>
            <value>
            The top.
            </value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartCircularAxisPanel">
            <summary>
            Represents ChartCircularAxisPanel
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCircularAxisPanel.#ctor(System.Windows.Controls.Panel)">
            <summary>
            Creates an instance of ChartCircularAxisPanel.
            </summary>
            <param name="panel">panel</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCircularAxisPanel.Measure(System.Windows.Size)">
            <summary>
            Measures the elements in a panel.
            </summary>
            <param name="availableSize">available size of the panel.</param>
            <returns>returns Size.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCircularAxisPanel.Arrange(System.Windows.Size)">
            <summary>
            Arranges the elements in a panel.
            </summary>
            <param name="finalSize">final Size of the panel.</param>
            <returns>returns Size.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCircularAxisPanel.UpdateElements">
            <summary>
            Adds the elements in a panel.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartCircularAxisPanel.RenderElements">
            <summary>
            Method implementation for Render labels and Ticks
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCircularAxisPanel.Center">
            <summary>
            Gets or Sets the center point of the panel.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCircularAxisPanel.Radius">
            <summary>
            Gets or Sets the radius of the circular panel.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCircularAxisPanel.Axis">
            <summary>
            Gets or Sets the axis of the panel.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCircularAxisPanel.DesiredSize">
            <summary>
            Gets the desired size of the panel.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartCircularAxisPanel.Children">
            <summary>
            Gets the Children count of the panel.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartDock">
            <summary>
            Represents Chart Dockpanel.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartDock.Left">
            <summary>
            Docks element at the left side of panel.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartDock.Top">
            <summary>
            Docks element at the top side of panel.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartDock.Right">
            <summary>
            Docks element at the right side of panel.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartDock.Bottom">
            <summary>
            Docks element at the bottom side of panel.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartDock.Floating">
            <summary>
            Docks element at any position on  panel
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartDockPanel">
            <summary>
            Arranges child elements around the edges of the panel.  Optionally, 
            last added child element can occupy the remaining space.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartDockPanel._ignorePropertyChange">
            <summary>
            A value indicating whether a dependency property change handler
            should ignore the next change notification.  This is used to reset
            the value of properties without performing any of the actions in
            their change handlers.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartDockPanel.LastChildFillProperty">
            <summary>
            Identifies the LastChildFill dependency property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartDockPanel.OnLastChildFillPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            LastChildFillProperty property changed handler.
            </summary>
            <param name="d">DockPanel that changed its LastChildFill.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartDockPanel.GetDock(System.Windows.UIElement)">
            <summary>
            Gets an element's dock position in the Chart area.
            </summary>
            <param name="element">any UIElement</param>
            <returns>returns dock position of UIElement.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartDockPanel.SetDock(System.Windows.UIElement,Syncfusion.UI.Xaml.Charts.ChartDock)">
             <summary>
            Sets an element's dock position in the Chart area.
             </summary>
             <param name="element"></param>
             <param name="dock"></param>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartDockPanel.DockProperty">
            <summary>
             Identifies the Dock Attached property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartDockPanel.OnDockPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DockProperty property changed handler.
            </summary>
            <param name="d">UIElement that changed its ChartDock.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartDockPanel.ElementMarginProperty">
            <summary>
            Identifies the ElementMargin dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartDockPanel.RootElementProperty">
            <summary>
            Identifies the RootElement dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartDockPanel.AlignmentProperty">
            <summary>
            Identifies the Alignment dependency property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartDockPanel.OnAlignmentChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when alignment is changed.
            </summary>
            <param name="dpObj">The dependency object.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartDockPanel.OnRootElementChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when root element is changed.
            </summary>
            <param name="dpObj">The dependency object.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartDockPanel.m_rootElement">
            <summary>
            Initializes m_rootElement
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartDockPanel.m_controlsThickness">
            <summary>
            Initializes m_controlsThickness
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartDockPanel.m_resultDockRect">
            <summary>
            Initializes m_resultDockRect
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartDockPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the Measure pass of Silverlight layout. Classes can override this method to define their own Measure pass behavior.
            </summary>
            <returns>
            The size that this object determines it needs during layout, based on its calculations of the allocated sizes for child objects; or based on other considerations, such as a fixed container size.
            </returns>
            <param name="availableSize"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartDockPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            When overridden in a derived class, positions child elements and determines a size for a <see cref="T:System.Windows.FrameworkElement"></see> derived class.
            </summary>
            <param name="finalSize">The final area within the parent that this element should use to arrange itself and its children.</param>
            <returns>The actual size used.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartDockPanel.EnsureRectIsInside(System.Windows.Rect,System.Windows.Rect)">
            <summary>
            Ensures the rectangle is inside specified bounds.
            </summary>
            <param name="bounds">The bounds.</param>
            <param name="rect">The rectangle.</param>
            <returns>Returns the Rectangle</returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartDockPanel.LastChildFill">
            <summary>
            Get or Set lastChildFillProperty
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartDockPanel.Host">
            <summary>
            Gets or sets the sync chart area.
            </summary>
            <value>The sync chart area.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartDockPanel.RootElement">
            <summary>
            Gets or sets the root element. This is a dependency property.
            </summary>
            <value>The root element.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartDockPanel.ElementMargin">
            <summary>
            Gets or sets the element margin. This is a dependency property.
            </summary>
            <value>The element margin.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartPolarAxisLayoutPanel">
            <summary>
            Represents ChartPolarAxisLayoutPanel
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPolarAxisLayoutPanel.#ctor(System.Windows.Controls.Panel)">
            <summary>
            Called when instance created for ChartPolarLayoutPanel
            </summary>
            <param name="panel"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPolarAxisLayoutPanel.Measure(System.Windows.Size)">
            <summary>
            Measures the elements in the panel
            </summary>
            <param name="availableSize">AvailableSize of the panel</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPolarAxisLayoutPanel.Arrange(System.Windows.Size)">
            <summary>
            Arranges the elements in a panel
            </summary>
            <param name="finalSize">final size of the panel.</param>
            <returns>returns Size</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPolarAxisLayoutPanel.UpdateElements">
            <summary>
            Method declaration for UpdateElements
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPolarAxisLayoutPanel.Area">
            <summary>
            Gets or Sets the Chart area of the panel.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPolarAxisLayoutPanel.PolarAxis">
            <summary>
            Gets or Sets the polar axis of the Chart area.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPolarAxisLayoutPanel.CartesianAxis">
            <summary>
            Gets or Sets the Cartesian axis of the Chart area.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPolarAxisLayoutPanel.Radius">
            <summary>
            Gets or Sets the radius of the panel
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPolarAxisLayoutPanel.DesiredSize">
            <summary>
            Gets the desired sze of a panel.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPolarAxisLayoutPanel.Children">
            <summary>
            Gets the Children count in the panel.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPolarAxisLayoutPanel.Left">
            <summary>
            Gets or sets the left.
            </summary>
            <value>
            The left.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPolarAxisLayoutPanel.Top">
            <summary>
            Gets or sets the top.
            </summary>
            <value>
            The top.
            </value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartPolarGridLinesPanel">
            <summary>
            Represents ChartPolarGridLinesPanel
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPolarGridLinesPanel.#ctor(System.Windows.Controls.Panel)">
            <summary>
            Called when instance created for ChartPolargridLinesPanel
            </summary>
            <param name="panel"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPolarGridLinesPanel.Measure(System.Windows.Size)">
            <summary>
            Measures the elements of a panel.
            </summary>
            <param name="availableSize">available size of the panel.</param>
            <returns>returns Size.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPolarGridLinesPanel.Arrange(System.Windows.Size)">
            <summary>
            Arranges the elements of a panel.
            </summary>
            <param name="finalSize">final size of the panel.</param>
            <returns>returns Size</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartPolarGridLinesPanel.UpdateElements">
            <summary>
            Adds the elements to the panel.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPolarGridLinesPanel.IsRadar">
            <summary>
            Checks whether the Series is Radar/Polar Series type.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPolarGridLinesPanel.XAxis">
            <summary>
            Gets the x-axis of the chart.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPolarGridLinesPanel.YAxis">
             <summary>
            Gets the y-axis of the chart.
             </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPolarGridLinesPanel.DesiredSize">
            <summary>
            Gets the desired position of the panel.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPolarGridLinesPanel.Children">
            <summary>
            Gets the children count in the panel.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPolarGridLinesPanel.Left">
            <summary>
            Gets or sets the left.
            </summary>
            <value>
            The left.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartPolarGridLinesPanel.Top">
            <summary>
            Gets or sets the top.
            </summary>
            <value>
            The top.
            </value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartRootPanel">
            <summary>
            Represents the panel where all the child elements of Chart will be arranged.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartRootPanel.GetMeasurePriorityIndex(System.Windows.DependencyObject)">
            <summary>
            Gets measure priority for this obj.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartRootPanel.SetMeasurePriorityIndex(System.Windows.DependencyObject,System.Int32)">
            <summary>
            Sets the measure priority for this obj.
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartRootPanel.MeasurePriorityIndexProperty">
            <summary>
            Using a DependencyProperty as the backing store for MeasurePriority.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartRootPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the Measure pass of Silverlight layout. Classes can override this method to define their own Measure pass behavior.
            </summary>
            <returns>
            The size that this object determines it needs during layout, based on its calculations of the allocated sizes for child objects; or based on other considerations, such as a fixed container size.
            </returns>
            <param name="availableSize"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartRootPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the Arrange pass of Silverlight layout. Classes can override this method to define their own Arrange pass behavior.
            </summary>
            <returns>
            The actual size that is used after the element is arranged in layout.
            </returns>
            <param name="finalSize">The final area within the parent that this object should use to arrange itself and its children.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartSeriesPanel">
            <summary>
            Represents the panel where the series segments and adornments will be placed.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartSeriesPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the Arrange pass of Silverlight layout. Classes can override this method to define their own Arrange pass behavior.
            </summary>
            <returns>
            The actual size that is used after the element is arranged in layout.
            </returns>
            <param name="finalSize">The final area within the parent that this object should use to arrange itself and its children.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.AccumulationDistributionIndicator">
            <summary>
            Represents AccumulationDistribution technical indicator.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.TechnicalIndicatorSegment"/>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator">
            <summary>
            Base class for all the Financial technical indicators available in <see cref="T:Syncfusion.UI.Xaml.Charts.SfChart"/> control.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.AccumulationDistributionIndicator"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.AverageTrueRangeIndicator"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.BollingerBandIndicator"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ExponentialAverageIndicator"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.MACDTechnicalIndicator"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.MomentumTechnicalIndicator"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.RSITechnicalIndicator"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.SimpleAverageIndicator"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.StochasticTechnicalIndicator"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.TriangularAverageIndicator"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.XAxisProperty">
            <summary>
             Using a DependencyProperty as the backing store for XAxis.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.YAxisProperty">
            <summary>
            Using a DependencyProperty as the backing store for YAxis.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.SeriesNameProperty">
            <summary>
            Using a DependencyProperty as the backing store for AxisName.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.HighProperty">
            <summary>
             Using a DependencyProperty as the backing store for High.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.LowProperty">
            <summary>
             Using a DependencyProperty as the backing store for Low.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.OpenProperty">
            <summary>
            Using a DependencyProperty as the backing store for Open.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.CloseProperty">
            <summary>
            Using a DependencyProperty as the backing store for Close.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.VolumeProperty">
            <summary>
             Using a DependencyProperty as the backing store for Close.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.CreateSegments">
            <summary>
            Creates the segments of financial technical indictaors.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when [data source changed].
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.OnYAxisChanged(Syncfusion.UI.Xaml.Charts.ChartAxis,Syncfusion.UI.Xaml.Charts.ChartAxis)">
            <summary>
            Called when YAxis property changed
            </summary>
            <param name="oldAxis"></param>
            <param name="newAxis"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.OnXAxisChanged(Syncfusion.UI.Xaml.Charts.ChartAxis,Syncfusion.UI.Xaml.Charts.ChartAxis)">
            <summary>
            Called when XAxis property changed
            </summary>
            <param name="oldAxis"></param>
            <param name="newAxis"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.UpdateSegments(System.Int32,System.Collections.Specialized.NotifyCollectionChangedAction)">
            <summary>
            Updates the segment at the specified index
            </summary>
            <param name="index">The index of the segment.</param>
            <param name="action">The action that caused the segments collection changed event</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.SetSeriesItemSource(Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Method implementation for Set ItemSource to Series
            </summary>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.GeneratePoints">
            <summary>
            Method implementation for GeneratePoints for TechnicalIndicator
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.XRange">
            <summary>
            Get XRange property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.YRange">
            <summary>
            Get YRange property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.XAxis">
            <summary>
            Get or Set XAxis property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.YAxis">
            <summary>
            Get or Set YAxis property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.IsTransposed">
            <summary>
            Gets or Sets Orientation for Chart Series 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.SeriesName">
            <summary>
            Gets or Sets the name of the series that this indicator is associated with.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.High">
            <summary>
            Gets or Sets the property path to retrieve high value from ItemsSource.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.Low">
            <summary>
            Gets or Sets the property path to retrieve low value from ItemsSource.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.Open">
            <summary>
            Gets or Sets the property path to retrieve open value from ItemsSource.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.Close">
            <summary>
            Gets or Sets the property path to retrieve close value from ItemsSource
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator.Volume">
            <summary>
            Gets or Sets the property path to retrieve volume data from ItemsSource.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.AccumulationDistributionIndicator.SignalLineColorProperty">
            <summary>
            Using a DependencyProperty as the backing store for SignalLineColor.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AccumulationDistributionIndicator.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
             Called when DataSource property changed 
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AccumulationDistributionIndicator.SetSeriesItemSource(Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Method implementation for Set ItemSource to ChartSeries
            </summary>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AccumulationDistributionIndicator.GeneratePoints">
            <summary>
            Method implementation for GeneratePoints for TechnicalIndicator
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AccumulationDistributionIndicator.CreateSegments">
            <summary>
            Creates the segments of AccumulationDistributionIndicator.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AccumulationDistributionIndicator.UpdateSegments(System.Int32,System.Collections.Specialized.NotifyCollectionChangedAction)">
            <summary>
            Updates the segment at the specified index
            </summary>
            <param name="index">The index of the segment.</param>
            <param name="action">The action that caused the segments collection changed event</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AccumulationDistributionIndicator.SignalLineColor">
            <summary>
            Gets or Sets the signal line color
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.AverageTrueRangeIndicator">
            <summary>
            Represents AverageTrueRange technical indicator.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.TechnicalIndicatorSegment"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.AverageTrueRangeIndicator.PeriodProperty">
            <summary>
             Using a DependencyProperty as the backing store for MovingAverage.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.AverageTrueRangeIndicator.SignalLineColorProperty">
            <summary>
             Using a DependencyProperty as the backing store for SignalLineColor.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AverageTrueRangeIndicator.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when DataSource property changed
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AverageTrueRangeIndicator.SetSeriesItemSource(Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Method implementation for Set ItemSource to Series
            </summary>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AverageTrueRangeIndicator.GeneratePoints">
            <summary>
            Method implementation for GeneratePoints for TechnicalIndicator
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AverageTrueRangeIndicator.CreateSegments">
            <summary>
            Creates the segments of AverageTrueRangeIndicator.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.AverageTrueRangeIndicator.UpdateSegments(System.Int32,System.Collections.Specialized.NotifyCollectionChangedAction)">
            <summary>
            Updates the segment at the specified index
            </summary>
            <param name="index">The index of the segment.</param>
            <param name="action">The action that caused the segments collection changed event</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AverageTrueRangeIndicator.Period">
            <summary>
            Gets or Sets the moving average
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.AverageTrueRangeIndicator.SignalLineColor">
            <summary>
            Gets or sets the signal line color
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.BollingerBandIndicator">
            <summary>
            Represents BollingerBand technical indicator.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.TechnicalIndicatorSegment"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.BollingerBandIndicator.PeriodProperty">
            <summary>
             Using a DependencyProperty as the backing store for MovingAverage.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.BollingerBandIndicator.UpperLineColorProperty">
            <summary>
             Using a DependencyProperty as the backing store for UpperLineColor.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.BollingerBandIndicator.LowerLineColorProperty">
            <summary>
            Using a DependencyProperty as the backing store for LowerLineColor.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.BollingerBandIndicator.SignalLineColorProperty">
            <summary>
            Using a DependencyProperty as the backing store for SignalLineColor.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BollingerBandIndicator.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when DataSource property changed
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BollingerBandIndicator.SetSeriesItemSource(Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Method implementation for Set ItemSource to Series
            </summary>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BollingerBandIndicator.GeneratePoints">
            <summary>
            Method implementation for GeneratePoints for TechnicalIndicator
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BollingerBandIndicator.CreateSegments">
            <summary>
            Creates the segments of BollingerBandIndicator.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.BollingerBandIndicator.UpdateSegments(System.Int32,System.Collections.Specialized.NotifyCollectionChangedAction)">
            <summary>
            Updates the segment at the specified index
            </summary>
            <param name="index">The index of the segment.</param>
            <param name="action">The action that caused the segments collection changed event</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BollingerBandIndicator.Period">
            <summary>
            Gets or Sets the moving average
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BollingerBandIndicator.UpperLineColor">
            <summary>
            Gets or sets the upper line color
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BollingerBandIndicator.LowerLineColor">
            <summary>
            Gets or Sets the lower line color
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.BollingerBandIndicator.SignalLineColor">
            <summary>
            Gets or sets the signal line color
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ExponentialAverageIndicator">
            <summary>
            Represents ExponentialAverage technical indicator.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.TechnicalIndicatorSegment"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ExponentialAverageIndicator.PeriodProperty">
            <summary>
            Using a DependencyProperty as the backing store for Period.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ExponentialAverageIndicator.SignalLineColorProperty">
            <summary>
             Using a DependencyProperty as the backing store for SignalLineColor.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ExponentialAverageIndicator.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when datasource changed
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ExponentialAverageIndicator.SetSeriesItemSource(Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Method implementation for Set ItemSource to Series
            </summary>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ExponentialAverageIndicator.GeneratePoints">
            <summary>
            Method implementation for GeneratePoints for TechnicalIndicator
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ExponentialAverageIndicator.CreateSegments">
            <summary>
            Creates the Segments of ExponentialAverageIndicator.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ExponentialAverageIndicator.UpdateSegments(System.Int32,System.Collections.Specialized.NotifyCollectionChangedAction)">
            <summary>
            Updates the segment at the specified index
            </summary>
            <param name="index">The index of the segment.</param>
            <param name="action">The action that caused the segments collection changed event</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ExponentialAverageIndicator.Period">
            <summary>
            Gets or Sets the moving average
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ExponentialAverageIndicator.SignalLineColor">
            <summary>
            Gets or Sets the signal line color
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.MACDTechnicalIndicator">
            <summary>
            Represents MACD technical indicator.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.TechnicalIndicatorSegment"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.MACDTechnicalIndicator.PeriodProperty">
            <summary>
            Using a DependencyProperty as the backing store for Period.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.MACDTechnicalIndicator.ConvergenceLineColorProperty">
            <summary>
            Using a DependencyProperty as the backing store for UpperLineColor.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.MACDTechnicalIndicator.DivergenceLineColorProperty">
            <summary>
            Using a DependencyProperty as the backing store for LowerLineColor.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.MACDTechnicalIndicator.SignalLineColorProperty">
            <summary>
            Using a DependencyProperty as the backing store for SignalLineColor.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MACDTechnicalIndicator.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when DataSource changed
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MACDTechnicalIndicator.SetSeriesItemSource(Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Method implementation for Set ItemSource to Series
            </summary>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MACDTechnicalIndicator.GeneratePoints">
            <summary>
            Method implementation for GeneratePoints for TechnicalIndicator
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MACDTechnicalIndicator.CreateSegments">
            <summary>
            Creates the segments of MACDTechnicalIndicator.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MACDTechnicalIndicator.UpdateSegments(System.Int32,System.Collections.Specialized.NotifyCollectionChangedAction)">
            <summary>
            Updates the segment at the specified index
            </summary>
            <param name="index">The index of the segment.</param>
            <param name="action">The action that caused the segments collection changed event</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MACDTechnicalIndicator.AddMACDPoints">
            <summary>
            Method implementation  for Add MACD property values
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.MACDTechnicalIndicator.Period">
            <summary>
            Gets or sets the moving average
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.MACDTechnicalIndicator.ConvergenceLineColor">
            <summary>
            Gets or sets the convergence line color
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.MACDTechnicalIndicator.DivergenceLineColor">
            <summary>
            Gets or sets the divergence line color
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.MACDTechnicalIndicator.SignalLineColor">
            <summary>
            Gets or sets the signal line color
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.MomentumTechnicalIndicator">
            <summary>
            Represents Momentum technical indicator.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.TechnicalIndicatorSegment"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.MomentumTechnicalIndicator.PeriodProperty">
            <summary>
            Using a DependencyProperty as the backing store for MovingAverage.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.MomentumTechnicalIndicator.MomentumLineColorProperty">
            <summary>
             Using a DependencyProperty as the backing store for UpperLineColor.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.MomentumTechnicalIndicator.CenterLineColorProperty">
            <summary>
            Using a DependencyProperty as the backing store for LowerLineColor.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MomentumTechnicalIndicator.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when DataSource changed
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MomentumTechnicalIndicator.SetSeriesItemSource(Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Method implementation for Set ItemSource to Series
            </summary>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MomentumTechnicalIndicator.GeneratePoints">
            <summary>
            Method implementation for GeneratePoints for TechnicalIndicator
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MomentumTechnicalIndicator.CreateSegments">
            <summary>
            Creates the segments of MomentumTechnicalIndicator.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.MomentumTechnicalIndicator.UpdateSegments(System.Int32,System.Collections.Specialized.NotifyCollectionChangedAction)">
            <summary>
            Updates the segment at the specified index
            </summary>
            <param name="index">The index of the segment.</param>
            <param name="action">The action that caused the segments collection changed event</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.MomentumTechnicalIndicator.Period">
            <summary>
            Gets or Sets the momentum time span
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.MomentumTechnicalIndicator.MomentumLineColor">
            <summary>
            Gets or sets the momentum line color
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.MomentumTechnicalIndicator.CenterLineColor">
            <summary>
            Gets or Sets the center line color
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.RSITechnicalIndicator">
            <summary>
            Represents RelativeStrengthIndex technical indicator.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.TechnicalIndicatorSegment"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.RSITechnicalIndicator.UpperLineColorProperty">
            <summary>
            Using a DependencyProperty as the backing store for UpperLineColor.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.RSITechnicalIndicator.LowerLineColorProperty">
            <summary>
            Using a DependencyProperty as the backing store for LowerLineColor.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.RSITechnicalIndicator.SignalLineColorProperty">
            <summary>
            Using a DependencyProperty as the backing store for SignalLineColor.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RSITechnicalIndicator.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when DataSource changed
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RSITechnicalIndicator.SetSeriesItemSource(Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Method implementation for Set ItemSource to Series
            </summary>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RSITechnicalIndicator.GeneratePoints">
            <summary>
            Method implementation for GeneratePoints for TechnicalIndicator
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RSITechnicalIndicator.CreateSegments">
            <summary>
            Creates the segments of RelativeStrengthIndexIndicator.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.RSITechnicalIndicator.UpdateSegments(System.Int32,System.Collections.Specialized.NotifyCollectionChangedAction)">
            <summary>
            Updates the segment at the specified index
            </summary>
            <param name="index">The index of the segment.</param>
            <param name="action">The action that caused the segments collection changed event</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RSITechnicalIndicator.UpperLineColor">
            <summary>
            Gets or Sets the upper line color
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RSITechnicalIndicator.LowerLineColor">
            <summary>
            Gets or Sets the lower line color
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.RSITechnicalIndicator.SignalLineColor">
            <summary>
            Gets or sets the signal line color
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.SimpleAverageIndicator">
            <summary>
            Represents SimpleAverage technical indicator.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.TechnicalIndicatorSegment"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SimpleAverageIndicator.VisiblePointsProperty">
            <summary>
            Using a DependencyProperty as the backing store for VisiblePoints.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SimpleAverageIndicator.PeriodProperty">
            <summary>
            Using a DependencyProperty as the backing store for MovingAverage.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SimpleAverageIndicator.SignalLineColorProperty">
            <summary>
            Using a DependencyProperty as the backing store for SignalLineColor.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SimpleAverageIndicator.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when DataSource changed 
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SimpleAverageIndicator.SetSeriesItemSource(Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Method implementation for Set ItemSource to Series
            </summary>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SimpleAverageIndicator.GeneratePoints">
            <summary>
            Method implementation for GeneratePoints for TechnicalIndicator
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SimpleAverageIndicator.CreateSegments">
            <summary>
            Creates the segments of SimpleAverageIndicator.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.SimpleAverageIndicator.UpdateSegments(System.Int32,System.Collections.Specialized.NotifyCollectionChangedAction)">
            <summary>
            Updates the segment at the specified index
            </summary>
            <param name="index">The index of the segment.</param>
            <param name="action">The action that caused the segments collection changed event</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SimpleAverageIndicator.VisiblePoints">
            <summary>
            Gets or sets the visible points
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SimpleAverageIndicator.Period">
            <summary>
            Gets or Sets the moving average
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.SimpleAverageIndicator.SignalLineColor">
            <summary>
            Gets or Sets the signal line color
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.StochasticTechnicalIndicator">
            <summary>
            Represents Stochastic technical indicator.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.TechnicalIndicatorSegment"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.StochasticTechnicalIndicator.UpperLineColorProperty">
            <summary>
             Using a DependencyProperty as the backing store for UpperLineColor.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.StochasticTechnicalIndicator.LowerLineColorProperty">
            <summary>
             Using a DependencyProperty as the backing store for LowerLineColor.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.StochasticTechnicalIndicator.SignalLineColorProperty">
            <summary>
            Using a DependencyProperty as the backing store for SignalLineColor.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StochasticTechnicalIndicator.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when DataSource property changed
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StochasticTechnicalIndicator.SetSeriesItemSource(Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Method implementation for Set ItemSource to Series
            </summary>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StochasticTechnicalIndicator.GeneratePoints">
            <summary>
            Method implementation for GeneratePoints for TechnicalIndicator
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StochasticTechnicalIndicator.CreateSegments">
            <summary>
            Creates the segments of StochasticTechnicalIndicator
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StochasticTechnicalIndicator.UpdateSegments(System.Int32,System.Collections.Specialized.NotifyCollectionChangedAction)">
            <summary>
            Updates the segment at the specified index
            </summary>
            <param name="index">The index of the segment.</param>
            <param name="action">The action that caused the segments collection changed event</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StochasticTechnicalIndicator.BasePoints(System.Int32,System.Collections.Generic.List{System.Double})">
            <summary>
            Calculates the percentage K value 
            </summary>
            <param name="period">Period value</param>
            <param name="ypoints">Percentage K points</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StochasticTechnicalIndicator.AddPoints(System.Int32,System.Int32)">
            <summary>
            Adding points of Upper line and Lower line
            </summary>
            <param name="period">Period value</param>
            <param name="k_period">KPeriod value</param>
            <param name="xpoint">Period line X points</param>
            <param name="ypoint">Period line Y points</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StochasticTechnicalIndicator.AddSignalPoints(System.Int32)">
            <summary>
            Calculates the Signal line points
            </summary>
            <param name="d_period">DPeriod points</param>
            <param name="xPoints">Signal X values</param>
            <param name="yPoints">Signal line points</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.StochasticTechnicalIndicator.AddPeriodPoints(System.Int32)">
            <summary>
            Calculates the Period line points
            </summary>
            <param name="k_period">KPeriod value</param>
            <param name="yPoints">Period line points </param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StochasticTechnicalIndicator.UpperLineColor">
            <summary>
            Gets or Sets the upper line color
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StochasticTechnicalIndicator.LowerLineColor">
            <summary>
            Gets or Sets the lower line color
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.StochasticTechnicalIndicator.SignalLineColor">
            <summary>
            Gets or Sets the signal line color
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.TechnicalIndicatorSegment">
            <summary>
            Represents chart technical indicator segment.
            </summary>
            <remarks>Class instance is created automatically by WINRT Chart building system.</remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TechnicalIndicatorSegment.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TechnicalIndicatorSegment.#ctor(System.Collections.Generic.List{System.Double},System.Collections.Generic.List{System.Double},System.Windows.Media.Brush,Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Called when instance created for TechnicalIndicatorSegment
            </summary>
            <param name="xVals"></param>
            <param name="yVals"></param>
            <param name="stroke"></param>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TechnicalIndicatorSegment.#ctor(System.Collections.Generic.List{System.Double},System.Collections.Generic.List{System.Double},System.Windows.Media.Brush,Syncfusion.UI.Xaml.Charts.ChartSeriesBase,System.Int32)">
            <summary>
            Called when instance created for TechnicalIndicatorSegment
            </summary>
            <param name="xVals"></param>
            <param name="yVals"></param>
            <param name="stroke"></param>
            <param name="series"></param>
            <param name="length"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TechnicalIndicatorSegment.SetData(System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},System.Windows.Media.Brush)">
            <summary>
            Sets the values for this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="xVals"></param>
            <param name="yVals"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TechnicalIndicatorSegment.CreateVisual(System.Windows.Size)">
            <summary>
            Used for creating UIElement for rendering this segment. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="size">Size of the panel</param>
            <returns>
            retuns UIElement
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TechnicalIndicatorSegment.Update(Syncfusion.UI.Xaml.Charts.IChartTransformer)">
            <summary>
            Updates the segments based on its data point value. This method is not
            intended to be called explicitly outside the Chart but it can be overriden by
            any derived class.
            </summary>
            <param name="transformer">Reresents the view port of chart control.(refer <see cref="T:Syncfusion.UI.Xaml.Charts.IChartTransformer"/>)</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TechnicalIndicatorSegment.TransformToScreenCo(Syncfusion.UI.Xaml.Charts.ChartTransform.ChartCartesianTransformer)">
            <summary>
            Transforms for non logarithmic axis
            </summary>
            <param name="cartesianTransformer"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TechnicalIndicatorSegment.TransformToScreenCoInLog(Syncfusion.UI.Xaml.Charts.ChartTransform.ChartCartesianTransformer)">
            <summary>
            Transforms for non logarithmic axis
            </summary>
            <param name="cartesianTransformer"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.TriangularAverageIndicator">
            <summary>
            Represents TriangularAverage technical indicator.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.FinancialTechnicalIndicator"/>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.TechnicalIndicatorSegment"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.TriangularAverageIndicator.PeriodProperty">
            <summary>
             Using a DependencyProperty as the backing store for MovingAverage.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.TriangularAverageIndicator.SignalLineColorProperty">
            <summary>
            Using a DependencyProperty as the backing store for SignalLineColor.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TriangularAverageIndicator.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when DataSource property changed
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TriangularAverageIndicator.SetSeriesItemSource(Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Method implementation for Set ItemSource to Series
            </summary>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TriangularAverageIndicator.GeneratePoints">
            <summary>
            Method implementation for GeneratePoints for TechnicalIndicator
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TriangularAverageIndicator.CreateSegments">
            <summary>
            Creates the segments of TriangularAverageIndicator.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.TriangularAverageIndicator.UpdateSegments(System.Int32,System.Collections.Specialized.NotifyCollectionChangedAction)">
            <summary>
            Updates the segment at the specified index
            </summary>
            <param name="index">The index of the segment.</param>
            <param name="action">The action that caused the segments collection changed event</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.TriangularAverageIndicator.Period">
            <summary>
            Gets or Sets the triangular average
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.TriangularAverageIndicator.SignalLineColor">
            <summary>
            Gets or sets the signal line color
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartDataUtils">
            <summary>
            Contains utility methods to manipulate data.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartDataUtils.GetObjectByPath(System.Object,System.String)">
            <summary>
             Gets the object by path.
             </summary>
             <param name="obj">The obj value.</param>
             <param name="path">The path value.</param>
             <returns>Returns the object</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartDataUtils.ConvertPathObjectToPositionValue(System.Object)">
            <summary>
            Converts to double.
            </summary>
            <param name="obj">The obj value.</param>
            <returns>The double value</returns>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ChartDataUtils"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartDataUtils.GetPositionalPathValue(System.Object,System.String)">
            <summary>
            Gets the double by path.
            </summary>
            <param name="obj">The obj value.</param>
            <param name="path">The path value.</param>
            <returns>The double value</returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.PointsSortByXComparer">
            <summary>
            Custom comaprer to compare the chart points by x-value.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.PointsSortByXComparer.diff">
            <summary>
            Initializes diff
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.PointsSortByXComparer.Compare(System.Windows.Point,System.Windows.Point)">
            <summary>
            Compares the specified p1 with the specified p2.
            </summary>
            <param name="point1">The point1.</param>
            <param name="point2">The point2.</param>
            <returns>
            negative value if point1 &lt; point2
            <para>
            zero if point1 = point2.
            </para>
            <para>
            positive value if point1 &gt; point2
            </para>
            </returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartExtensionUtils">
            <summary>
            Contains Chart extension methods.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartExtensionUtils.ToOADate(System.DateTime)">
            <summary>
            Converts the value of this instance to the equivalent OLE Automation date.
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartExtensionUtils.FromOADate(System.Double)">
            <summary>
            Returns a DateTime equivalent to the specified OLE Automation Date.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartExtensionUtils.Sum(System.Collections.Generic.IEnumerable{Syncfusion.UI.Xaml.Charts.DoubleRange})">
            <summary>
            Returns sum of DoubleRange
            </summary>
            <param name="ranges">Collection of DoubleRange</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartExtensionUtils.Max(System.Collections.Generic.IEnumerable{Syncfusion.UI.Xaml.Charts.ChartSeriesBase},System.Func{Syncfusion.UI.Xaml.Charts.ChartSeriesBase,System.Double})">
            <summary>
            
            </summary>
            <param name="source"></param>
            <param name="selector"></param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartMath">
            <summary>
            Contains static methods for performing certain mathematical calculations.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartMath.ToDegree">
            <summary>
            Initializes ToDegree
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartMath.ToRadial">
            <summary>
            Initializes ToRadial
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartMath.Percent">
            <summary>
            Initializes Percent
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartMath.DoublePI">
            <summary>
            Initializes DoublePI
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartMath.HalfPI">
            <summary>
            Initializes HalfPI
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartMath.OneAndHalfPI">
            <summary>
            Initializes OneAndHalfPI
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartMath.Epsilon">
            <summary>
            The epsilon
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartMath.SolveQuadraticEquation(System.Double,System.Double,System.Double,System.Double@,System.Double@)">
            <summary>
            Solves quadratic equation in form a*x^2 + b*x + c = 0
            </summary>
            <param name="a">The A component</param>
            <param name="b">The B component</param>
            <param name="c">The C component</param>
            <param name="root1">First root.</param>
            <param name="root2">Second root.</param>
            <returns>Bool value</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartMath.MinMax(System.Double,System.Double,System.Double)">
            <summary>
            Gets minimal value from <c>value</c> or <c>min</c> and maximal from <c>value</c> or <c>max</c>.
            </summary>
            <param name="value">The value.</param>
            <param name="min">The minimal value.</param>
            <param name="max">The maximal value.</param>
            <returns>The MinMax value</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartMath.Min(System.Double[])">
            <summary>
            Gets minimal value from parameters.
            </summary>
            <param name="values">The parameters</param>
            <returns>The minimal value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartMath.Max(System.Double[])">
            <summary>
            Gets maximal value from parameters.
            </summary>
            <param name="values">The parameters</param>
            <returns>The maximal value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartMath.MaxZero(System.Double)">
            <summary>
            Gets maximal value from parameter or zero.
            </summary>
            <param name="value">The value.</param>
            <returns>The double value</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartMath.MinZero(System.Double)">
            <summary>
            Gets minimal value from parameter or zero.
            </summary>
            <param name="value">The value.</param>
            <returns>The MinZero value</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartMath.Round(System.Double,System.Double,System.Boolean)">
            <summary>
            Rounds the specified value.
            </summary>
            <param name="x">The x value.</param>
            <param name="div">The divider.</param>
            <param name="up">if set to <c>true</c> value will be rounded up.</param>
            <returns>The Round off value</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartMath.CalcPerpendicularDistance(System.Windows.Point,System.Windows.Point,System.Windows.Point)">
            <summary>
            Calculates the perpendicular distance of point from a line.
            </summary>
            <param name="Point1">Starting point of the line.</param>
            <param name="Point2">Ending point of the line</param>
            <param name="Point">The point</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartMath.GeneralPointRotation(System.Windows.Point,System.Windows.Point,System.Double)">
            <summary>
            return point values from the given origin,end and angle points
            </summary>
            <param name="originpoint"></param>
            <param name="endpoint"></param>
            <param name="angle"></param>
            <returns></returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartLayoutUtils.C_half">
            <summary>
            Initializes c_half
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartLayoutUtils.GetRectByCenter(System.Windows.Point,System.Windows.Size)">
            <summary>
            Gets the rect by center.
            </summary>
            <param name="center">The center.</param>
            <param name="size">The size value.</param>
            <returns>The Rect value</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartLayoutUtils.GetRectByCenter(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Gets the rect by center.
            </summary>
            <param name="cx">The cx value.</param>
            <param name="cy">The cy value.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <returns>The Rect value</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartLayoutUtils.GetCenter(System.Windows.Size)">
            <summary>
            Gets the center.
            </summary>
            <param name="size">The size value.</param>
            <returns>The vector center value</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartLayoutUtils.GetCenter(System.Windows.Rect)">
            <summary>
            Gets the center.
            </summary>
            <param name="rect">The rect value.</param>
            <returns>The center point value</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartLayoutUtils.Subtractthickness(System.Windows.Rect,System.Windows.Thickness)">
            <summary>
            Subtracts the thickness.
            </summary>
            <param name="rect">The rect value.</param>
            <param name="thickness">The thickness.</param>
            <returns>The Rectangle</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartLayoutUtils.Subtractthickness(System.Windows.Size,System.Windows.Thickness)">
            <summary>
            Subtracts the thickness.
            </summary>
            <param name="size">The size value.</param>
            <param name="thickness">The thickness.</param>
            <returns>Returns the size</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartLayoutUtils.Addthickness(System.Windows.Rect,System.Windows.Thickness)">
            <summary>
            The Addthickness method
            </summary>
            <param name="rect">The Rect value</param>
            <param name="thickness">The thickness</param>
            <returns>The rectangle</returns>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ChartLayoutUtils"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartLayoutUtils.Addthickness(System.Windows.Size,System.Windows.Thickness)">
            <summary>
            The Addthickness method
            </summary>
            <param name="size">The size value</param>
            <param name="thickness">The thickness value</param>
            <returns>Returns the size</returns>
             <seealso cref="T:Syncfusion.UI.Xaml.Charts.ChartLayoutUtils"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartLayoutUtils.CheckSize(System.Windows.Size)">
            <summary>
            Checks the members of size by infinity.
            </summary>
            <param name="size">The size value.</param>
            <returns>Returns the size</returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.IChartTransformer">
             <summary>
            Defines methods and memebers to transform the screen co-ordinate to Chart co-ordinate.
             </summary>
             <exclude/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.IChartTransformer.TransformToVisible(System.Double,System.Double)">
            <summary>
            Transforms chart cordinates to real coordinates.
            </summary>
            <param name="x">The x value.</param>
            <param name="y">The y value.</param>
            <returns>Visible point</returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.IChartTransformer.Viewport">
            <summary>
            Gets the viewport.
            </summary>
            <value>The viewport.</value>
            <exclude/>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartTransform">
            <summary>
            Class implementation for Chartransform
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTransform.CreateSimple(System.Windows.Size)">
            <summary>
            Creates the Cartesian transformer.
            </summary>
            <param name="viewport">The viewport.</param>
            <returns>The Chart Transformer</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTransform.CreateSimple3D(System.Windows.Size)">
            <summary>
            Creates the Cartesian transformer.
            </summary>
            <param name="viewport">The viewport.</param>
            <returns>The Chart Transformer</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTransform.CreateCartesian(System.Windows.Size,Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Creates the Cartesian transformer.
            </summary>
            <param name="viewport">The viewport.</param>
            <param name="series">The series.</param>
            <returns>The Cartesian Transformer</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTransform.CreateCartesian(System.Windows.Size,Syncfusion.UI.Xaml.Charts.ChartAxis,Syncfusion.UI.Xaml.Charts.ChartAxis)">
            <summary>
            Creates the Cartesian transformer.
            </summary>
            <param name="viewport">The viewport.</param>
            <param name="xAxis">The x axis.</param>
            <param name="yAxis">The y axis.</param> 
            <returns>The Cartesian Transformer</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTransform.CreatePolar(System.Windows.Rect,Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Creates the polar.
            </summary>
            <param name="viewport">The viewport.</param>
            <param name="series">The series.</param>
            <returns>The Polar Transformer</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTransform.CoefficientToVector(System.Double)">
            <summary>
            Return point values from the given values 
            </summary>
            <param name="coefficient"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTransform.RadianToPolarCoefficient(System.Double)">
            <summary>
            Return the Polar/Radar type Axis Coefficient Value from the given radian value
            </summary>
            <param name="radian"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTransform.PointToPolarRadian(System.Windows.Point,System.Double)">
            <summary>
            Return the Radian Value of Polar/Radar chart Mouse point
            </summary>
            <param name="point"></param>
            <param name="center"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTransform.ValueToVector(Syncfusion.UI.Xaml.Charts.ChartAxis,System.Double)">
            <summary>
            Values to vector.
            </summary>
            <param name="axis">The axis value.</param>
            <param name="value">The value.</param>
            <returns>The vector value</returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartSimpleTransformer">
            <summary>
            Represents ChartSimpleTransformer
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartSimpleTransformer.m_viewport">
            <summary>
            Initializes m_viewport
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartSimpleTransformer.#ctor(System.Windows.Size)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartSimpleTransformer"/> class.
            </summary>
            <param name="viewport">The viewport.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartSimpleTransformer.TransformToVisible(System.Double,System.Double)">
            <summary>
            Transforms chart cordinates to real coordinates.
            </summary>
            <param name="x">The x value.</param>
            <param name="y">The y value.</param>
            <returns>visible point</returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartSimpleTransformer.Viewport">
            <summary>
            Gets the viewport.
            </summary>
            <value>The viewport.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartCartesianTransformer">
            <summary>
            Represents ChartCartesianTransformer
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartCartesianTransformer.m_viewport">
            <summary>
            Initializes m_viewport
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartCartesianTransformer.XAxis">
            <summary>
            Initializes m_xAxis
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartCartesianTransformer.YAxis">
            <summary>
            Initializes m_yAxis
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartCartesianTransformer.m_IsRoated">
            <summary>
            Initializes m_IsRotated
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartCartesianTransformer.#ctor(System.Windows.Size,Syncfusion.UI.Xaml.Charts.ChartAxis,Syncfusion.UI.Xaml.Charts.ChartAxis)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartCartesianTransformer"/> class.
            </summary>
            <param name="viewport">The viewport.</param>
            <param name="xAxis">The x axis.</param>
            <param name="yAxis">The y axis.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartCartesianTransformer.#ctor(System.Windows.Size,Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartCartesianTransformer"/> class.
            </summary>
            <param name="viewport">The viewport.</param>
            <param name="series">The series.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartCartesianTransformer.TransformToVisible(System.Double,System.Double)">
            <summary>
            Transforms chart cordinates to real coordinates.
            </summary>
            <param name="x">The x value.</param>
            <param name="y">The y value.</param>
            <returns>The visible point</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartCartesianTransformer.TransformToVisible(System.Double,System.Double,System.Boolean,System.Boolean)">
            <summary>
            Return point values from the given values
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="x_isInversed"></param>
            <param name="y_isInversed"></param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartCartesianTransformer.Viewport">
            <summary>
            Gets the viewport.
            </summary>
            <value>The viewport.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartPolarTransformer">
            <summary>
            Represents ChartPolarTransformer
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartPolarTransformer.xlogarithmicBase">
            <summary>
            Initializes xlogarithmicBase
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartPolarTransformer.ylogarithmicBase">
            <summary>
            Initializes ylogarithmicBase
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartPolarTransformer.y_IsLogarithmic">
            <summary>
            Initializes y_IsLogarithmic
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartPolarTransformer.x_IsLogarithmic">
            <summary>
            Initializes x_IsLogarithmic
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartPolarTransformer.m_viewport">
            <summary>
            Initializes m_viewport
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartPolarTransformer.m_xAxis">
            <summary>
            Initializes m_xAxis
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartPolarTransformer.m_yAxis">
            <summary>
            Initializes m_yAxis
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartPolarTransformer.m_center">
            <summary>
            Initializes m_center
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartPolarTransformer.m_radius">
            <summary>
            Initializes m_radius
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartPolarTransformer.#ctor(System.Windows.Rect,Syncfusion.UI.Xaml.Charts.ChartAxis,Syncfusion.UI.Xaml.Charts.ChartAxis)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartPolarTransformer"/> class.
            </summary>
            <param name="viewport">The viewport.</param>
            <param name="xAxis">The x axis.</param>
            <param name="yAxis">The y axis.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartPolarTransformer.#ctor(System.Windows.Rect,Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartPolarTransformer"/> class.
            </summary>
            <param name="viewport">The viewport.</param>
            <param name="series">The series.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartPolarTransformer.TransformToVisible(System.Double,System.Double)">
            <summary>
            Transforms chart cordinates to real coordinates.
            </summary>
            <param name="x">The x value.</param>
            <param name="y">The y value.</param>
            <returns>The visible point</returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartPolarTransformer.Viewport">
            <summary>
            Gets the viewport.
            </summary>
            <value>The viewport.</value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartTransform3D.mViewport">
            <summary>
            Initializes mviewport
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartTransform3D.SetCenter(Syncfusion.UI.Xaml.Charts.Vector3D)">
            <summary>
            Sets the center of world.
            </summary>
            <param name="center">The center.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartTransform3D.ToScreen(Syncfusion.UI.Xaml.Charts.Vector3D)">
            <param name="vector3D">The vector3d.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartTransform3D.ToPlane(System.Windows.Point,Syncfusion.UI.Xaml.Charts.Polygon3D)">
            <summary>
            Returns the intercept point of mouse ray with the specified plane.
            </summary>
            <param name="point">The point.</param>
            <param name="plane">The plane.</param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartTransform3D.Centered">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartTransform3D.View">
            <summary>
            Gets or sets the view matrix.
            </summary>
            <value>The view.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.ChartTransform.ChartTransform3D.Result">
            <summary>
            Gets the result matrix.
            </summary>
            <value>The result.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.DateTimeRange">
            <summary>
            Defines memebers and methods to handle DateTime type range in <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAxis"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DateTimeRange.m_start">
            <summary>
            Initilaizes m_start
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DateTimeRange.m_end">
            <summary>
            Initilaizes m_end
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DateTimeRange.#ctor(System.DateTime,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.DateTimeRange"/> struct.
            </summary>
            <param name="rangeStart">The range start.</param>
            <param name="rangeEnd">The range end.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DateTimeRange.IsEmpty">
            <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
            <value><c>true</c> if this instance is empty; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DateTimeRange.Start">
            <summary>
            Gets the start.
            </summary>
            <value>The start.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DateTimeRange.End">
            <summary>
            Gets the end.
            </summary>
            <value>The end value.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.DoubleRange">
            <summary>
            Defines a custom DoubleRange data type for<see cref="T:Syncfusion.UI.Xaml.Charts.SfChart"/> library.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DoubleRange.c_empty">
            <summary>
            Initializes c_empty
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DoubleRange.m_start">
            <summary>
            Initializes m_start
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DoubleRange.m_end">
            <summary>
            Initializes m_end
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoubleRange.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Charts.DoubleRange"/> struct.
            </summary>
            <param name="start">The start value.</param>
            <param name="end">The end value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoubleRange.op_Addition(Syncfusion.UI.Xaml.Charts.DoubleRange,Syncfusion.UI.Xaml.Charts.DoubleRange)">
            <summary>
            Union operator
            </summary>
            <param name="leftRange">First double range</param>
            <param name="rightRange">Second double range</param>
            <returns>The Union value</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoubleRange.op_Addition(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Double)">
            <summary>
            Union operator
            </summary>
            <param name="range">First double range</param>
            <param name="value">Second double range</param>
            <returns>The Union value</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoubleRange.op_GreaterThan(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Double)">
            <summary>
            The operator
            </summary>
            <param name="range">The DoubleRange </param>
            <param name="value">The double value</param>
            <returns>The range value</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoubleRange.op_GreaterThan(Syncfusion.UI.Xaml.Charts.DoubleRange,Syncfusion.UI.Xaml.Charts.DoubleRange)">
            <summary>
            Return bool value from the given DoubleRange
            </summary>
            <param name="range"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoubleRange.op_LessThan(Syncfusion.UI.Xaml.Charts.DoubleRange,Syncfusion.UI.Xaml.Charts.DoubleRange)">
            <summary>
            return Bool value from doublerange
            </summary>
            <param name="range"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoubleRange.op_LessThan(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Double)">
            <summary>
            The operator
            </summary>
            <param name="range">The DoubleRange </param>
            <param name="value">The double value</param>
            <returns>The range value</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoubleRange.op_Equality(Syncfusion.UI.Xaml.Charts.DoubleRange,Syncfusion.UI.Xaml.Charts.DoubleRange)">
            <summary>
            The operator method
            </summary>
            <param name="leftRange">The left DoubleRange</param>
            <param name="rightRange">The right DoubleRange</param>
            <returns>The left range</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoubleRange.op_Inequality(Syncfusion.UI.Xaml.Charts.DoubleRange,Syncfusion.UI.Xaml.Charts.DoubleRange)">
            <summary>
            The operator method
            </summary>
            <param name="leftRange">The left range</param>
            <param name="rightRange">The right range</param>
            <returns>The inverse left range</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoubleRange.Union(System.Double[])">
            <summary>
            Create range by array of double.
            </summary>
            <param name="values">The values</param>
            <returns>The DoubleRange</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoubleRange.Union(Syncfusion.UI.Xaml.Charts.DoubleRange,Syncfusion.UI.Xaml.Charts.DoubleRange)">
            <summary>
            Unions the specified left range with right range.
            </summary>
            <param name="leftRange">The left range.</param>
            <param name="rightRange">The right range.</param>
            <returns>The DoubleRange</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoubleRange.Union(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Double)">
            <summary>
            Unions the specified range with value.
            </summary>
            <param name="range">The range.</param>
            <param name="value">The value.</param>
            <returns>The DoubleRange</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoubleRange.Scale(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Double)">
            <summary>
            Scales the specified range by value.
            </summary>
            <param name="range">The range.</param>
            <param name="value">The value.</param>
            <returns>The DoubleRange</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoubleRange.Offset(Syncfusion.UI.Xaml.Charts.DoubleRange,System.Double)">
            <summary>
            Offsets the specified range by value.
            </summary>
            <param name="range">The range.</param>
            <param name="value">The value.</param>
            <returns>The DoubleRange</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoubleRange.Exclude(Syncfusion.UI.Xaml.Charts.DoubleRange,Syncfusion.UI.Xaml.Charts.DoubleRange,Syncfusion.UI.Xaml.Charts.DoubleRange@,Syncfusion.UI.Xaml.Charts.DoubleRange@)">
            <summary>
            Excludes the specified range.
            </summary>
            <param name="range">The range.</param>
            <param name="excluder">The excluder.</param>
            <param name="leftRange">The left range.</param>
            <param name="rightRange">The right range.</param>
            <returns>True if empty</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoubleRange.Intersects(Syncfusion.UI.Xaml.Charts.DoubleRange)">
            <summary>
            Checks whether intersection region of two ranges is not empty.
            </summary>
            <param name="range">the DoubleRange</param>
            <returns><b>true</b> if  intersection is not empty</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoubleRange.Intersects(System.Double,System.Double)">
            <summary>
            Checks whether intersection region of two ranges is not empty.
            </summary>
            <param name="start">The start value</param>
            <param name="end">The end value</param>
            <returns> true if  intersection is not empty</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoubleRange.Inside(System.Double)">
            <summary>
            Checks whether the given value is inside the axis range
            </summary>
            <param name="value">The value.</param>
            <returns>True if value is inside</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoubleRange.Inside(Syncfusion.UI.Xaml.Charts.DoubleRange)">
            <summary>
            Checks whether the given range is inside the axis range
            </summary>
            <param name="range">The range.</param>
            <returns>True is range is inside</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoubleRange.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <param name="obj">Another object to compare to.</param>
            <returns>
            true if obj and this instance are the same type and represent the same value; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.DoubleRange.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DoubleRange.Empty">
            <summary>
            Gets the Empty value
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DoubleRange.Start">
            <summary>
            Gets the Start value
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DoubleRange.End">
            <summary>
            Gets the End value
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DoubleRange.Delta">
            <summary>
            Gets the Delta value
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DoubleRange.Median">
            <summary>
            Gets the median.
            </summary>
            <value>The median.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.DoubleRange.IsEmpty">
            <summary>
            Gets a value indicating whether IsEmpty 
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.LegendPosition">
            <summary>
            Legend position in chart area.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.DateTimeIntervalType">
            <summary>
            A date time interval.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DateTimeIntervalType.Auto">
            <summary>
            Automatically determine interval.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DateTimeIntervalType.Milliseconds">
            <summary>
            Interval type is milliseconds.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DateTimeIntervalType.Seconds">
            <summary>
            Interval type is seconds.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DateTimeIntervalType.Minutes">
            <summary>
            Interval type is minutes.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DateTimeIntervalType.Hours">
            <summary>
            Interval type is hours.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DateTimeIntervalType.Days">
            <summary>
            Interval type is days.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DateTimeIntervalType.Months">
            <summary>
            Interval type is months.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.DateTimeIntervalType.Years">
            <summary>
            Interval type is years.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartValueType">
            <summary>
            Specifies the different values that are natively used.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ChartAxis"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartValueType.Double">
            <summary>
             <see cref="F:Syncfusion.UI.Xaml.Charts.ChartValueType.Double"/> value
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartValueType.DateTime">
            <summary>
             <see cref="F:Syncfusion.UI.Xaml.Charts.ChartValueType.DateTime"/> value
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartValueType.String">
            <summary>
              <see cref="F:Syncfusion.UI.Xaml.Charts.ChartValueType.String"/> value
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartValueType.TimeSpan">
            <summary>
              <see cref="F:Syncfusion.UI.Xaml.Charts.ChartValueType.TimeSpan"/> value
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartValueType.Logarithmic">
            <summary>
              Logarithmic value
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.RenderingMode">
            <summary>
            Specifies the rendering mode to be used to render the chart series.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.RenderingMode.Default">
            <summary>
            Default element will be used to render the series
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.RenderingMode.WriteableBitmap">
            <summary>
            WriteableBitmap will be used to render the series
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.RenderingMode.DirectX">
            <summary>
            DirectX will be used to render the series
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartLegendIcon">
            <summary>
            Represents the Icon for the Chartlegend
            </summary>  
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ChartSeriesBase"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartLegendIcon.None">
            <summary>
            Default behaviour
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartLegendIcon.SeriesType">
            <summary>
            Represents the Icon of Series type
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartLegendIcon.Rectangle">
            <summary>
            Represents the Rectangular Icon
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartLegendIcon.StraightLine">
             <summary>
            Represents the Straight Line
             </summary>       
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartLegendIcon.Circle">
            <summary>
            Represents the Circle
            </summary>       
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartLegendIcon.Diamond">
            <summary>
            Represents the Diamond
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartLegendIcon.Pentagon">
            <summary>
            Represents the Pentagon
            </summary>      
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartLegendIcon.Triangle">
            <summary>
            Represents the Triangle
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartLegendIcon.InvertedTriangle">
            <summary>
            Represents the Inverted Triangle
            </summary>   
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartLegendIcon.Cross">
            <summary>
            Represents the Cross
            </summary>       
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.Direction">
            <summary>
            Represents sorting direction
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Direction.Ascending">
            <summary>
            Orders the items in increasing order.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.Direction.Descending">
            <summary>
            Orders the items in decreasing order.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.SortingAxis">
            <summary>
            Represents Sorting Axis.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SortingAxis.X">
            <summary>
            Sorting will be done based on values related to x-axis.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.SortingAxis.Y">
            <summary>
            Sorting will be done based on values related to y-axis.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartSymbol">
            <summary>
            Represents the adornments marker symbol types.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSymbol.Custom">
            <summary>
            Custom option to set User-defined SymbolTemplates
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSymbol.Ellipse">
            <summary>
            Renders Ellipse symbol
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSymbol.Cross">
            <summary>
            Renders Cross symbol
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSymbol.Diamond">
            <summary>
            Renders Diamond symbol
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSymbol.Hexagon">
            <summary>
            Renders Hexagon symbol
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSymbol.HorizontalLine">
            <summary>
            Renders HorizontalLine symbol
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSymbol.InvertedTriangle">
            <summary>
            Renders InvertedTriangle symbol
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSymbol.Pentagon">
            <summary>
            Renders Pentagon symbol
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSymbol.Plus">
            <summary>
            Renders Plus symbol
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSymbol.Square">
            <summary>
            Renders Square symbol
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSymbol.Triangle">
            <summary>
            Renders Traingle symbol
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSymbol.VerticalLine">
            <summary>
            Renders VerticalLine symbol
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.AxisElementPosition">
            <summary>
            Represents axis elements position in <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAxis"/> elements panel.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.AxisElementPosition.Inside">
            <summary>
            Positions the elements above the axis line.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.AxisElementPosition.Outside">
            <summary>
            Positions the elements below the axis line.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.EdgeLabelsDrawingMode">
            <summary>
            Represents the modes for placing edge labels in <see cref="T:Syncfusion.UI.Xaml.Charts.ChartAxis"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.EdgeLabelsDrawingMode.Center">
            <summary>
            Value indicating that the edge label should appear at the center of its GridLines.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.EdgeLabelsDrawingMode.Shift">
            <summary>
            Value indicating that edge labels should be shifted to either left or right so that it comes within the area of Chart.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.EdgeLabelsDrawingMode.Fit">
            <summary>
            Value indicating that the edge labels should be fit within the area of <see cref="T:Syncfusion.UI.Xaml.Charts.SfChart"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.EdgeLabelsDrawingMode.Hide">
            <summary>
            Value indicating that the edge labels will be hidden.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.EdgeLabelsVisibilityMode">
            <summary>
            Represents the visibility for edge label<see cref="T:Syncfusion.UI.Xaml.Charts.ChartAxis"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.EdgeLabelsVisibilityMode.Default">
            <summary>
            Value indicating that default behavior of axis.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.EdgeLabelsVisibilityMode.AlwaysVisible">
            <summary>
            Value indicating that edge labels should be visible all cases.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.EdgeLabelsVisibilityMode.Visible">
            <summary>
            Value indicating that edge labels should be visible in non zoom mode.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.AxisLabelsIntersectAction">
            <summary>
             Specifies the options for the action that is to be taken when labels intersect each other.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Charts.ChartAxis"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.AxisLabelsIntersectAction.None">
            <summary>
            No special action is taken. Labels may intersect.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.AxisLabelsIntersectAction.MultipleRows">
            <summary>
            Labels are wrapped into multiple rows to avoid intersection.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.AxisLabelsIntersectAction.Hide">
            <summary>
            Labels are hidden to avoid intersection.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartColorPalette">
            <summary>
            Represents the different types of color palette available in <see cref="T:Syncfusion.UI.Xaml.Charts.SfChart"/> library.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartColorPalette.None">
            <summary>
            No palette will be set
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartColorPalette.Metro">
            <summary>
            Metro palette will be set.
            </summary>
            
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartColorPalette.Custom">
            <summary>
            Custom palette will be set, and color values will be taken from <see cref="P:Syncfusion.UI.Xaml.Charts.ChartColorModel.CustomBrushes"/> collection.
            </summary>   
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartColorPalette.AutumnBrights">
            <summary>
            AutumnBrights palette will be set
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartColorPalette.FloraHues">
            <summary>
            FloraHues palette will be set
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartColorPalette.Pineapple">
            <summary>
            Pineapple palette will be set
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartColorPalette.TomotoSpectrum">
            <summary>
            TomotoSpectram palette will be set
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartColorPalette.RedChrome">
            <summary>
            RedChrome palette will be set
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartColorPalette.PurpleChrome">
            <summary>
            PurpleChrome palette will be set
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartColorPalette.BlueChrome">
            <summary>
            BlueChrome palette will be set
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartColorPalette.GreenChrome">
            <summary>
            GreenChrome palette will be set
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartColorPalette.Elite">
            <summary>
            Elite palette will be set
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartColorPalette.SandyBeach">
            <summary>
            SandyBeach palette will be set
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartColorPalette.LightCandy">
            <summary>
            LightCandy palette will be set
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.RangePaddingMode">
            <summary>
            Represents the modes of range padding.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartAlignment">
            <summary>
            A custom <see cref="T:Syncfusion.UI.Xaml.Charts.SfChart"/> alignment to handle both horizontal and vertical alignment types in a generalized way. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAlignment.Near">
            <summary>
            Positions the element as like setting left/top alignment.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAlignment.Far">
            <summary>
            Positions the element as like setting right/bottom alignment.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAlignment.Center">
            <summary>
            Positions the element with center alignment.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAlignment.Auto">
            <summary>
            Positions the element with default alignment when the series is transposed.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartSeriesDrawType">
            <summary>
            Represents modes of drawing radar and polar types.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeriesDrawType.Area">
            <summary>
            Draw the Filled Area in the Polar Chart type
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartSeriesDrawType.Line">
            <summary>
            Draw the Lines in the Polar chart type
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartOrientation">
            <summary>
            Represents modes of Chart orientation
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartOrientation.Default">
            <summary>
            Orienatation will be automatically analyzed based on the panel's docking position.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartOrientation.Horizontal">
            <summary>
            Horizontal Orientation will be set.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartOrientation.Vertical">
            <summary>
            Vertical Orientation will be set.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartAreaType">
            <summary>
            Identifies axes types enumeration.
            </summary>
            <example>
            Intended for internal use
            </example>
            <seealso>
                <cref>ChartArea</cref>
            </seealso>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAreaType.None">
            <summary>
            Represents No axis.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAreaType.CartesianAxes">
            <summary>
            Cartesian axis.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartAreaType.PolarAxes">
            <summary>
            Polar axis.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartUnitType">
            <summary>
            Represents modes for chart rows/columns space allocations.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartUnitType.Star">
            <summary>
            Height/Width will be auto adjusted.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartUnitType.Pixels">
            <summary>
            Height/Width will be based on the pixel units given.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ZoomMode">
            <summary>
            Represents zooming modes of <see cref="T:Syncfusion.UI.Xaml.Charts.SfChart"/>
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ZoomMode.X">
            <summary>
            Zooming will be done along x-axis
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ZoomMode.Y">
            <summary>
            Zooming will be done along y-axis
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ZoomMode.XY">
            <summary>
            Zooming will be done along both axis.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.CircularSeriesLabelPosition">
            <summary>
            Represents label position modes available for PieSeries adornments.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CircularSeriesLabelPosition.Inside">
            <summary>
            PieSeries adornment labels will be  placed inside over the PieSeries.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CircularSeriesLabelPosition.Outside">
            <summary>
            PieSeries adornment labels will be  placed just outside over the PieSeries.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CircularSeriesLabelPosition.OutsideExtended">
            <summary>
            PieSeries adornment labels will be placed outside over the PieSeries at a certain distance.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ConnectorMode">
            <summary>
            Adornment connector line mode
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.AdornmentsLabelPosition">
            <summary>
            Represents the positioning of Adornment labels.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.AdornmentsLabelPosition.Auto">
            <summary>
            Positions the Adornment labels at Auto.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.AdornmentsLabelPosition.Inner">
            <summary>
            Positions the Adornment labels at Inner.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.AdornmentsLabelPosition.Outer">
            <summary>
            Positions the Adornment labels at Outer.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.AdornmentsLabelPosition.Center">
            <summary>
            Positions the Adornment labels at Center.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.AdornmentsPosition">
            <summary>
            Represents modes for positioning Chart adornments.
            </summary>
            <remarks>
            AdornementPosition value cannot be specified for all series types.
            The values in adornments position will be applicable only to certain series
            </remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.AdornmentsPosition.Top">
            <summary>
            Positions the adornment at the top edge point of a chart segment.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.AdornmentsPosition.Bottom">
            <summary>
            Positions the adornment at the bottom edge point of a chart segment.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.AdornmentsPosition.TopAndBottom">
            <summary>
            Positions the adornment at the center point of a chart segment.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.LabelContent">
            <summary>
            Enumeration represents series adornments label content.
            </summary>
            <seealso>
                <cref>AdornmentInfo</cref>
            </seealso>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LabelContent.XValue">
            <summary>
            Identifies that label should contain X value of series' point.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LabelContent.YValue">
            <summary>
            Identifies that label should contain Y value of series' point.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LabelContent.Percentage">
            <summary>
            Identifies that label should contain percentage value of series' point among other points.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LabelContent.YofTot">
            <summary>
            Identifies that label should contain value of Y of total values.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LabelContent.DateTime">
            <summary>
            Identifies that label should contain <see cref="F:Syncfusion.UI.Xaml.Charts.LabelContent.DateTime"/> value.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.LabelContent.LabelContentPath">
            <summary>
            Label's content will be retrieved from the <see>
                                                           <cref>ChartAdornmentInfo.LabelContentPath</cref>
                                                       </see>
                property.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.EmptyPointStyle">
            <summary>
            Represents modes of displaying empty points.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.EmptyPointStyle.Interior">
            <summary>
            The empty point segment resembles the shape of a normal segment.
            Fills the empty point segments with the color value specified in series <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.EmptyPointInterior"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.EmptyPointStyle.Symbol">
            <summary>
            The empty point segment resembles the shape of a symbol control.       
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.EmptyPointStyle.SymbolAndInterior">
             <summary>
             The empty point segment resembles the shape of a symbol control.
            Fills the symbol segments with the color value specified in series <see cref="P:Syncfusion.UI.Xaml.Charts.ChartSeriesBase.EmptyPointInterior"/> property.
             </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.EmptyPointValue">
            <summary>
            Represents modes for handling empty points.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.EmptyPointValue.Zero">
            <summary>
            Validates the empty points in a series and sets the points y-value to Zero.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.EmptyPointValue.Average">
            <summary>
            Validates the empty points in a series and sets the points y-value to an average value based on its neighbouring points.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartFunnelMode">
            <summary>
            Lists the funnel mode options.
            </summary>
            <seealso>
                <cref>ChartFunnelType</cref>
            </seealso>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartFunnelMode.ValueIsWidth">
            <summary>
            The specified Y value is used to compute the width of the corresponding block.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartFunnelMode.ValueIsHeight">
            <summary>
            The specified Y value is used to compute the height of the corresponding block.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartPyramidMode">
            <summary>
            Specifies the mode in which the Y values should be interpreted in the Pyramid chart.
            </summary>
            <seealso>
                <cref>ChartPyramidType</cref>
            </seealso>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartPyramidMode.Linear">
            <summary>
            The Y values are proportional to the length of the sides of the pyramid.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.ChartPyramidMode.Surface">
            <summary>
            The Y values are proportional to the surface area of the corresponding blocks.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.NavigatorIntervalType">
            <summary>
            Specifies the Interval type in which the navigator values should be displayed.
            </summary>
            <seealso cref="!:ChartPyramidType"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.NavigatorIntervalType.Year">
            <summary>
            One year interval.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.NavigatorIntervalType.Quarter">
            <summary>
            One Quarter interval
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.NavigatorIntervalType.Month">
            <summary>
            One Month interval
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.NavigatorIntervalType.Week">
            <summary>
            One Week interval
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.NavigatorIntervalType.Day">
            <summary>
            One Day interval
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.NavigatorIntervalType.Hour">
            <summary>
            One Day interval
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CoordinateUnit.Pixel">
            <summary>
            The pixel mode for the CoordinateUnit of Annotation
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CoordinateUnit.Axis">
            <summary>
            The axis mode for the CoordianteUint of Annotation
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.SurfaceType">
            <summary>
            Specifies the type of surface
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.CameraProjection">
            <summary>
            Specifies the mode of surface projection
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CameraProjection.Perspective">
            <summary>
            Represents Perspective CameraProjection
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Charts.CameraProjection.Orthographic">
            <summary>
            Represents Orthographic CameraProjection
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.ChartDictionaries">
            <summary>
            Contains Chart resource dictionaries
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Charts.UIElementsRecycler`1">
            <summary>
            Contains utility methods to add and remove elements inside a panel.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.UIElementsRecycler`1.#ctor(System.Windows.Controls.Panel)">
            <summary>
            Constructor
            </summary>
            <param name="panel"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.UIElementsRecycler`1.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.UIElementsRecycler`1.GenerateElements(System.Int32)">
            <summary>
            Generates or recycles the elements
            </summary>
            <param name="count">Number of elements to be generated</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.UIElementsRecycler`1.Add(`0)">
            <summary>
            
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.UIElementsRecycler`1.IndexOf(`0)">
            <summary>
            Indexes the of.
            </summary>
            <param name="element">The element.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.UIElementsRecycler`1.Remove(`0)">
            <summary>
            
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.UIElementsRecycler`1.CreateNewInstance">
            <summary>
            Creates a new instance of the specified type
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.UIElementsRecycler`1.RemoveBinding(System.Windows.DependencyProperty)">
            <summary>
            Removes the particular binding from the generated elements
            </summary>
            <param name="property"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.UIElementsRecycler`1.Clear">
            <summary>
            Clears the generated elements
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Charts.UIElementsRecycler`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.UIElementsRecycler`1.Count">
            <summary>
            Get the value of CLR property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.UIElementsRecycler`1.BindingProvider">
            <summary>
            Provides binding objects to be attached with the generated FrameworkElement
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Charts.UIElementsRecycler`1.Item(System.Int32)">
            <summary>
            Return the panel's child at the corresponding index
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
    </members>
</doc>
